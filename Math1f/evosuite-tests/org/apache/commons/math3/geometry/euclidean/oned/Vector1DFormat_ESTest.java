/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 06:05:17 GMT 2022
 */

package org.apache.commons.math3.geometry.euclidean.oned;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.FieldPosition;
import java.text.Format;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.Locale;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Vector1DFormat_ESTest extends Vector1DFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat();
      ParsePosition parsePosition0 = new ParsePosition(0);
      Vector1D vector1D0 = vector1DFormat0.parse("{0}", parsePosition0);
      assertEquals(0.0, vector1D0.getNormSq(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("}u (3,UcITKRAj", "", (NumberFormat) null);
      Vector1D vector1D0 = vector1DFormat0.parse("");
      assertNull(vector1D0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance();
      Vector1D vector1D0 = vector1DFormat0.parse("{(-Infinity)}");
      assertFalse(vector1D0.isNaN());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat();
      Vector1D vector1D0 = vector1DFormat0.parse("{0}");
      assertEquals(0.0, vector1D0.getNormSq(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance();
      Vector1D vector1D0 = Vector1D.NEGATIVE_INFINITY;
      StringBuffer stringBuffer0 = new StringBuffer();
      FieldPosition fieldPosition0 = new FieldPosition(283);
      StringBuffer stringBuffer1 = vector1DFormat0.format((Vector<Euclidean1D>) vector1D0, stringBuffer0, fieldPosition0);
      assertEquals(13, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance();
      // Undeclared exception!
      try { 
        vector1DFormat0.parse((String) null, (ParsePosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.VectorFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat();
      // Undeclared exception!
      try { 
        vector1DFormat0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.util.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Vector1DFormat.getInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      Vector1DFormat vector1DFormat0 = null;
      try {
        vector1DFormat0 = new Vector1DFormat((String) null, "", numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.VectorFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = null;
      try {
        vector1DFormat0 = new Vector1DFormat((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.VectorFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance(locale0);
      ParsePosition parsePosition0 = new ParsePosition(3);
      Vector1D vector1D0 = vector1DFormat0.parse("SnVqZ", parsePosition0);
      assertNull(vector1D0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("yzxB}M51", "");
      ParsePosition parsePosition0 = new ParsePosition(0);
      Vector1D vector1D0 = vector1DFormat0.parse("yzxB}M51", parsePosition0);
      assertEquals(1.0, vector1D0.getNormSq(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      Vector1DFormat vector1DFormat0 = new Vector1DFormat(numberFormat0);
      assertEquals("{", vector1DFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance(locale0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "}");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      // Undeclared exception!
      try { 
        vector1DFormat0.format((Vector<Euclidean1D>) null, stringBuffer0, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat();
      try { 
        vector1DFormat0.parse("{");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: string \"{\" unparseable (from position 0) as an object of type org.apache.commons.math3.geometry.euclidean.oned.Vector1D
         //
         verifyException("org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("IhqX^!>w&-T-W8M~", decimalFormatSymbols0);
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("=kWl; ", "=kWl; ", decimalFormat0);
      ParsePosition parsePosition0 = new ParsePosition(0);
      parsePosition0.setIndex((-3560));
      // Undeclared exception!
      try { 
        vector1DFormat0.parse("}", parsePosition0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("yzxB}M51", "");
      Vector1D vector1D0 = vector1DFormat0.parse("yzxB}M51");
      assertEquals(1.0, vector1D0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance();
      // Undeclared exception!
      try { 
        vector1DFormat0.parse("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
