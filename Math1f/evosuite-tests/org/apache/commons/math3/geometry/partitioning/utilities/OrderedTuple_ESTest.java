/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 06:34:06 GMT 2022
 */

package org.apache.commons.math3.geometry.partitioning.utilities;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OrderedTuple_ESTest extends OrderedTuple_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 449.0;
      doubleArray0[1] = (-4226.46585);
      doubleArray0[2] = 1301.18;
      doubleArray0[3] = (-745.46);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 2340.594207085858;
      doubleArray0[6] = 2414.595;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 767.278;
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        orderedTuple0.compareTo((OrderedTuple) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double[] doubleArray0 = null;
      OrderedTuple orderedTuple0 = null;
      try {
        orderedTuple0 = new OrderedTuple((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      Object object0 = new Object();
      OrderedTuple orderedTuple1 = new OrderedTuple(doubleArray0);
      Object object1 = new Object();
      orderedTuple1.equals(object1);
      orderedTuple0.compareTo(orderedTuple1);
      orderedTuple0.equals(object0);
      orderedTuple0.equals(object0);
      orderedTuple0.equals("");
      orderedTuple0.hashCode();
      OrderedTuple orderedTuple2 = new OrderedTuple(doubleArray0);
      orderedTuple0.compareTo(orderedTuple2);
      orderedTuple1.hashCode();
      Object object2 = new Object();
      orderedTuple0.equals(object2);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1.0;
      doubleArray0[2] = 126.5769210969796;
      doubleArray0[3] = (-3596.8455);
      doubleArray0[4] = (-876.150093975);
      doubleArray0[5] = 1124.828789633;
      doubleArray0[6] = (-2571.974775);
      doubleArray0[7] = 1786.51213;
      doubleArray0[8] = 0.0;
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      orderedTuple0.hashCode();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 5183.88511983;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 2916.4;
      doubleArray0[4] = 2005.306331896;
      doubleArray0[5] = 1.0;
      doubleArray0[6] = (-1127.6328407315);
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      double[] doubleArray1 = new double[0];
      OrderedTuple orderedTuple1 = new OrderedTuple(doubleArray0);
      orderedTuple0.equals(orderedTuple1);
      orderedTuple0.compareTo(orderedTuple1);
      OrderedTuple orderedTuple2 = new OrderedTuple(doubleArray1);
      orderedTuple2.equals("");
      orderedTuple2.equals((Object) null);
      orderedTuple2.equals(orderedTuple1);
      orderedTuple0.equals(orderedTuple2);
      OrderedTuple orderedTuple3 = new OrderedTuple(doubleArray1);
      orderedTuple3.compareTo(orderedTuple1);
      orderedTuple0.compareTo(orderedTuple3);
      orderedTuple3.hashCode();
      orderedTuple2.equals(orderedTuple3);
      double[] doubleArray2 = orderedTuple3.getComponents();
      OrderedTuple orderedTuple4 = new OrderedTuple(doubleArray2);
      orderedTuple0.compareTo(orderedTuple4);
      orderedTuple1.hashCode();
      orderedTuple2.getComponents();
      Object object0 = new Object();
      orderedTuple4.equals(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (-1273.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 560.24668;
      doubleArray0[4] = 1.0;
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      OrderedTuple orderedTuple1 = new OrderedTuple(doubleArray0);
      orderedTuple0.equals(orderedTuple1);
      double[] doubleArray1 = orderedTuple0.getComponents();
      OrderedTuple orderedTuple2 = new OrderedTuple(doubleArray1);
      orderedTuple0.equals(orderedTuple2);
      orderedTuple2.hashCode();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (-1296.773294229103);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-378.069192);
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      Object object0 = new Object();
      orderedTuple0.equals(object0);
      double[] doubleArray1 = new double[0];
      Object object1 = new Object();
      orderedTuple0.equals(object1);
      orderedTuple0.equals(object1);
      OrderedTuple orderedTuple1 = new OrderedTuple(doubleArray1);
      orderedTuple1.equals("2MwqF\"g=u'fzI2:Zi");
      orderedTuple0.equals(orderedTuple1);
      orderedTuple0.hashCode();
      orderedTuple0.compareTo(orderedTuple1);
      orderedTuple1.compareTo(orderedTuple0);
      orderedTuple1.hashCode();
      orderedTuple0.hashCode();
      orderedTuple0.getComponents();
      orderedTuple1.equals(object1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-4956.0);
      doubleArray0[1] = 575.906096018739;
      doubleArray0[2] = 1902.8124704654292;
      doubleArray0[3] = 0.0;
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      orderedTuple0.hashCode();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1160.40037391;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 672.15;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      OrderedTuple orderedTuple1 = new OrderedTuple(doubleArray0);
      orderedTuple0.compareTo(orderedTuple1);
      double[] doubleArray1 = orderedTuple0.getComponents();
      orderedTuple0.hashCode();
      orderedTuple1.hashCode();
      OrderedTuple orderedTuple2 = new OrderedTuple(doubleArray0);
      orderedTuple0.compareTo(orderedTuple2);
      orderedTuple0.getComponents();
      orderedTuple1.compareTo(orderedTuple0);
      OrderedTuple orderedTuple3 = new OrderedTuple(doubleArray1);
      orderedTuple0.equals(orderedTuple3);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 903.333;
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = 2287.2291;
      doubleArray0[3] = (-3281.62834394745);
      doubleArray0[4] = (-2323.2798994043);
      doubleArray0[5] = (-1604.3333);
      doubleArray0[6] = (-2718.0);
      doubleArray0[7] = 547.68;
      OrderedTuple orderedTuple0 = new OrderedTuple(doubleArray0);
      OrderedTuple orderedTuple1 = new OrderedTuple(doubleArray0);
      orderedTuple0.compareTo(orderedTuple1);
      OrderedTuple orderedTuple2 = new OrderedTuple(doubleArray0);
      Object object0 = new Object();
      orderedTuple1.equals(object0);
      orderedTuple0.compareTo(orderedTuple2);
      orderedTuple1.equals(orderedTuple0);
      orderedTuple0.getComponents();
      orderedTuple0.getComponents();
      orderedTuple0.compareTo(orderedTuple2);
      orderedTuple0.hashCode();
      orderedTuple1.getComponents();
      orderedTuple1.getComponents();
      int int0 = orderedTuple1.compareTo(orderedTuple0);
      assertEquals(0, int0);
      
      orderedTuple1.hashCode();
      orderedTuple1.getComponents();
      orderedTuple2.getComponents();
      orderedTuple1.hashCode();
      assertTrue(orderedTuple1.equals((Object)orderedTuple2));
  }
}
