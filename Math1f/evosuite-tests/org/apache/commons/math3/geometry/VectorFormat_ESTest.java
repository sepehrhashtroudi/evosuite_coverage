/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 06:37:24 GMT 2022
 */

package org.apache.commons.math3.geometry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.FieldPosition;
import java.text.Format;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.Locale;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VectorFormat_ESTest extends VectorFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance(locale0);
      ParsePosition parsePosition0 = new ParsePosition(1);
      vector1DFormat0.parse("{", parsePosition0);
      assertEquals(0, parsePosition0.getErrorIndex());
      assertEquals("}", vector1DFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      Vector3DFormat vector3DFormat0 = new Vector3DFormat(",v;t", "; ", "; ");
      Vector3D vector3D0 = Vector3D.PLUS_K;
      vector3DFormat0.format((Vector<Euclidean3D>) vector3D0, stringBuffer0, fieldPosition0);
      assertEquals(",v;t0; 0; 1; ", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParsePosition parsePosition0 = new ParsePosition(122);
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance();
      vector1DFormat0.parse("", parsePosition0);
      assertEquals(121, parsePosition0.getErrorIndex());
      assertEquals(121, parsePosition0.getIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      Vector3DFormat vector3DFormat0 = new Vector3DFormat("", "", "}", numberFormat0);
      String string0 = vector3DFormat0.getSuffix();
      assertEquals("}", vector3DFormat0.getSeparator());
      assertEquals("", string0);
      assertEquals("", vector3DFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      Vector3DFormat vector3DFormat0 = new Vector3DFormat("", "", "", decimalFormat0);
      vector3DFormat0.getSeparator();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("", "");
      String string0 = vector1DFormat0.getPrefix();
      assertEquals("", vector1DFormat0.getSuffix());
      assertEquals("", string0);
      assertEquals("; ", vector1DFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector2DFormat vector2DFormat0 = new Vector2DFormat("]ZI;KAA5qj+ {;hO'", "h%", "", (NumberFormat) null);
      vector2DFormat0.getFormat();
      assertEquals("]ZI;KAA5qj+ {;hO'", vector2DFormat0.getPrefix());
      assertEquals("h%", vector2DFormat0.getSuffix());
      assertEquals("", vector2DFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      Vector2DFormat vector2DFormat0 = new Vector2DFormat("f,*?,w%^0@XZLn-8", "7=Rc`HLAZ!O`9O0", "RAGVtEq2WQ($", numberFormat0);
      vector2DFormat0.getFormat();
      assertEquals("f,*?,w%^0@XZLn-8", vector2DFormat0.getPrefix());
      assertEquals("7=Rc`HLAZ!O`9O0", vector2DFormat0.getSuffix());
      assertEquals("RAGVtEq2WQ($", vector2DFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      Vector3DFormat vector3DFormat0 = new Vector3DFormat(numberFormat0);
      vector3DFormat0.getFormat();
      assertEquals("; ", vector3DFormat0.getSeparator());
      assertEquals("{", vector3DFormat0.getPrefix());
      assertEquals("}", vector3DFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance();
      Vector1D vector1D0 = Vector1D.ONE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      vector1DFormat0.format((Vector<Euclidean1D>) vector1D0, stringBuffer0, fieldPosition0);
      assertEquals("{1}", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      Vector1DFormat vector1DFormat0 = new Vector1DFormat(numberFormat0);
      ParsePosition parsePosition0 = new ParsePosition((-3208));
      // Undeclared exception!
      try { 
        vector1DFormat0.parse("", parsePosition0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Vector2DFormat vector2DFormat0 = Vector2DFormat.getInstance(locale0);
      ParsePosition parsePosition0 = new ParsePosition(1891);
      // Undeclared exception!
      try { 
        vector2DFormat0.parse((String) null, parsePosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.util.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance(locale0);
      try { 
        vector1DFormat0.parse("}");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: string \"}\" unparseable (from position 0) as an object of type org.apache.commons.math3.geometry.euclidean.oned.Vector1D
         //
         verifyException("org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance();
      // Undeclared exception!
      try { 
        vector1DFormat0.parse("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Vector1DFormat vector1DFormat0 = Vector1DFormat.getInstance(locale0);
      // Undeclared exception!
      try { 
        vector1DFormat0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.util.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector3DFormat vector3DFormat0 = Vector3DFormat.getInstance();
      StringBuffer stringBuffer0 = new StringBuffer("{");
      FieldPosition fieldPosition0 = new FieldPosition((Format.Field) null);
      // Undeclared exception!
      try { 
        vector3DFormat0.format((Vector<Euclidean3D>) null, stringBuffer0, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("gWi\"n '{8~", "gWi\"n '{8~", (NumberFormat) null);
      Vector1D vector1D0 = new Vector1D(1);
      // Undeclared exception!
      try { 
        vector1DFormat0.format((Vector<Euclidean1D>) vector1D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.util.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("*'hq}W|||P8@w6", "*'hq}W|||P8@w6");
      Vector<Euclidean1D> vector0 = vector1DFormat0.parse("*'hq}W|||P8@w6");
      assertEquals("*'hq}W|||P8@w6", vector1DFormat0.getPrefix());
      assertEquals("; ", vector1DFormat0.getSeparator());
      assertEquals("*'hq}W|||P8@w6", vector1DFormat0.getSuffix());
      assertNull(vector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Vector2DFormat vector2DFormat0 = Vector2DFormat.getInstance(locale0);
      try { 
        vector2DFormat0.parse("{");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: string \"{\" unparseable (from position 0) as an object of type org.apache.commons.math3.geometry.euclidean.twod.Vector2D
         //
         verifyException("org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("'h8}W|P|P8w6", "");
      Vector<Euclidean1D> vector0 = vector1DFormat0.parse("'h8}W|P|P8w6");
      assertEquals("'h8}W|P|P8w6", vector1DFormat0.getPrefix());
      assertNotNull(vector0);
      assertEquals("", vector1DFormat0.getSuffix());
      assertEquals("; ", vector1DFormat0.getSeparator());
      assertEquals(36.0, vector0.getNormSq(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector3DFormat vector3DFormat0 = new Vector3DFormat();
      vector3DFormat0.parse("{(NaN); (NaN)}");
      assertEquals("{", vector3DFormat0.getPrefix());
      assertEquals("}", vector3DFormat0.getSuffix());
      assertEquals("; ", vector3DFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      Vector2DFormat vector2DFormat0 = new Vector2DFormat(decimalFormat0);
      Vector2D vector2D0 = Vector2D.NaN;
      String string0 = vector2DFormat0.format((Vector<Euclidean2D>) vector2D0);
      assertEquals("{(NaN); (NaN)}", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("");
      Vector1DFormat vector1DFormat0 = new Vector1DFormat("", "", choiceFormat0);
      Vector1D vector1D0 = new Vector1D(678.0);
      // Undeclared exception!
      try { 
        vector1DFormat0.format((Vector<Euclidean1D>) vector1D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector1DFormat vector1DFormat0 = new Vector1DFormat();
      String string0 = vector1DFormat0.getSeparator();
      assertEquals("; ", string0);
      assertEquals("{", vector1DFormat0.getPrefix());
      assertEquals("}", vector1DFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector3DFormat vector3DFormat0 = new Vector3DFormat();
      String string0 = vector3DFormat0.getPrefix();
      assertEquals("; ", vector3DFormat0.getSeparator());
      assertEquals("{", string0);
      assertEquals("}", vector3DFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector2DFormat vector2DFormat0 = Vector2DFormat.getInstance();
      String string0 = vector2DFormat0.getSuffix();
      assertEquals("{", vector2DFormat0.getPrefix());
      assertEquals("}", string0);
      assertEquals("; ", vector2DFormat0.getSeparator());
  }
}
