/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:15:34 GMT 2022
 */

package org.apache.commons.math3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.exception.MathIllegalNumberException;
import org.apache.commons.math3.exception.OutOfRangeException;
import org.apache.commons.math3.exception.util.Localizable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutOfRangeException_ESTest extends OutOfRangeException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OutOfRangeException outOfRangeException0 = new OutOfRangeException((Number) null, (Number) null, (Number) null);
      Number number0 = outOfRangeException0.getLo();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Long long0 = new Long(2143L);
      OutOfRangeException outOfRangeException0 = new OutOfRangeException(long0, long0, long0);
      Number number0 = outOfRangeException0.getLo();
      assertEquals(2143L, number0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Float float0 = new Float((-2677.5647678526));
      OutOfRangeException outOfRangeException0 = new OutOfRangeException(float0, float0, float0);
      Number number0 = outOfRangeException0.getLo();
      assertEquals((-2677.5647F), number0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = MathIllegalNumberException.INTEGER_ZERO;
      OutOfRangeException outOfRangeException0 = new OutOfRangeException(integer0, integer0, integer0);
      Number number0 = outOfRangeException0.getHi();
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Long long0 = new Long(2143L);
      OutOfRangeException outOfRangeException0 = new OutOfRangeException(long0, long0, long0);
      Number number0 = outOfRangeException0.getHi();
      assertEquals(2143L, number0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Float float0 = new Float((-2677.5647678526));
      OutOfRangeException outOfRangeException0 = new OutOfRangeException(float0, float0, float0);
      Number number0 = outOfRangeException0.getHi();
      assertEquals((-2677.5647F), number0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = MathIllegalNumberException.INTEGER_ZERO;
      OutOfRangeException outOfRangeException0 = new OutOfRangeException(integer0, integer0, integer0);
      Number number0 = outOfRangeException0.getLo();
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OutOfRangeException outOfRangeException0 = new OutOfRangeException((Localizable) null, (Number) null, (Number) null, (Number) null);
      Number number0 = outOfRangeException0.getHi();
      assertNull(number0);
  }
}
