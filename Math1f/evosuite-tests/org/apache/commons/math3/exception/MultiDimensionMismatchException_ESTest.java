/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:03:50 GMT 2022
 */

package org.apache.commons.math3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.exception.MultiDimensionMismatchException;
import org.apache.commons.math3.exception.util.Localizable;
import org.apache.commons.math3.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiDimensionMismatchException_ESTest extends MultiDimensionMismatchException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      Integer[] integerArray1 = multiDimensionMismatchException0.getWrongDimensions();
      assertNotSame(integerArray0, integerArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      int int0 = multiDimensionMismatchException0.getWrongDimension(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer(2);
      integerArray0[2] = integer0;
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException((Localizable) null, integerArray0, integerArray0);
      int int0 = multiDimensionMismatchException0.getWrongDimension(2);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = Integer.getInteger("/z<Rbn*^Fu]y|", (-2122));
      integerArray0[0] = integer0;
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      int int0 = multiDimensionMismatchException0.getWrongDimension(0);
      assertEquals((-2122), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      Integer[] integerArray1 = multiDimensionMismatchException0.getExpectedDimensions();
      assertEquals(0, integerArray1.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND;
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(localizedFormats0, integerArray0, integerArray0);
      int int0 = multiDimensionMismatchException0.getExpectedDimension(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer[] integerArray0 = new Integer[5];
      int int0 = 2;
      Integer integer0 = new Integer(2);
      integerArray0[2] = integer0;
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException((Localizable) null, integerArray0, integerArray0);
      int int1 = multiDimensionMismatchException0.getExpectedDimension(int0);
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NOT_SUPPORTED_IN_DIMENSION_N;
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer((-831));
      integerArray0[0] = integer0;
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(localizedFormats0, integerArray0, integerArray0);
      int int0 = multiDimensionMismatchException0.getExpectedDimension(0);
      assertEquals((-831), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer[] integerArray0 = new Integer[2];
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      // Undeclared exception!
      try { 
        multiDimensionMismatchException0.getWrongDimension((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math3.exception.MultiDimensionMismatchException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      // Undeclared exception!
      try { 
        multiDimensionMismatchException0.getExpectedDimension(107);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 107
         //
         verifyException("org.apache.commons.math3.exception.MultiDimensionMismatchException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiDimensionMismatchException multiDimensionMismatchException0 = null;
      try {
        multiDimensionMismatchException0 = new MultiDimensionMismatchException((Integer[]) null, (Integer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.exception.MultiDimensionMismatchException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NULL_NOT_ALLOWED;
      MultiDimensionMismatchException multiDimensionMismatchException0 = null;
      try {
        multiDimensionMismatchException0 = new MultiDimensionMismatchException(localizedFormats0, (Integer[]) null, (Integer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.exception.MultiDimensionMismatchException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer[] integerArray0 = new Integer[5];
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException((Localizable) null, integerArray0, integerArray0);
      // Undeclared exception!
      try { 
        multiDimensionMismatchException0.getWrongDimension(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.exception.MultiDimensionMismatchException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer[] integerArray0 = new Integer[5];
      int int0 = 2;
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException((Localizable) null, integerArray0, integerArray0);
      // Undeclared exception!
      try { 
        multiDimensionMismatchException0.getExpectedDimension(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.exception.MultiDimensionMismatchException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer[] integerArray0 = new Integer[2];
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      Integer[] integerArray1 = multiDimensionMismatchException0.getExpectedDimensions();
      assertNotSame(integerArray0, integerArray1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer[] integerArray0 = new Integer[2];
      MultiDimensionMismatchException multiDimensionMismatchException0 = new MultiDimensionMismatchException(integerArray0, integerArray0);
      Integer[] integerArray1 = multiDimensionMismatchException0.getWrongDimensions();
      assertNotSame(integerArray1, integerArray0);
  }
}
