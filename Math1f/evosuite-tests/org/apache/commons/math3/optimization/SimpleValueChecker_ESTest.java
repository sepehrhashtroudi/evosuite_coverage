/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 03:20:54 GMT 2022
 */

package org.apache.commons.math3.optimization;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.optimization.SimpleValueChecker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleValueChecker_ESTest extends SimpleValueChecker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = null;
      try {
        simpleValueChecker0 = new SimpleValueChecker((-0.4600633195843553), (-0.4600633195843553), (-671));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -671 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optimization.SimpleValueChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(298, 298, 298);
      assertEquals(298.0, simpleValueChecker0.getRelativeThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker();
      assertEquals(2.2250738585072014E-306, simpleValueChecker0.getAbsoluteThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-0.4600633195843553), (-0.4600633195843553));
      assertEquals((-0.4600633195843553), simpleValueChecker0.getAbsoluteThreshold(), 0.01);
  }
}
