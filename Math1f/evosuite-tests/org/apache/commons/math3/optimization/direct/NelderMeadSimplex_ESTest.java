/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 03:39:34 GMT 2022
 */

package org.apache.commons.math3.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.optimization.direct.NelderMeadSimplex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NelderMeadSimplex_ESTest extends NelderMeadSimplex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[][] doubleArray0 = new double[10][9];
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0, 0.0, 0.0, 0.0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // equal vertices 1 and 0 in simplex configuration
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[][] doubleArray0 = new double[0][8];
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0, 33.496963111, 1158.9, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // simplex must contain at least one point
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[][] doubleArray0 = new double[4][7];
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0, (-207.319563078), 592.48864114, 1.0, (-2200.0445063801117));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 3
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[3][4];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // equal vertices 1 and 0 in simplex configuration
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[][] doubleArray0 = new double[0][2];
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // simplex must contain at least one point
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0, 0.0, 993.610100089298, 0.0, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // equal vertices 0 and {1} in simplex configuration
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((double[]) null, 0.5, 0.5, (-1.0), (-2237.954107073));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(649, 649, 649, 1.0, 1.0, 1.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(0, 0.0, 2255.053955902419, 2255.053955902419, 0, (-1841.7338865));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero not allowed here
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((-1), (-1.0), (-1.0), (-1.0), (-45.84856183342), (-1.0));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(4463, 4463, 1.0, 3013.6, 0.0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(0, 0, 0, 0, 3659.6575);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero not allowed here
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((-707), 640.3543250271426, (-707), 0.0, 0.0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(2111, (-1125.264818291702));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(1, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // equal vertices 0 and {1} in simplex configuration
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((-386), (-220.70097684899946));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(3558);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero not allowed here
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((-1647));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(16, 16);
      assertEquals(16, nelderMeadSimplex0.getDimension());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 16;
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0, 0.0, 114.2949754584057, 2849.324525641357, Double.NaN);
      assertEquals(1, nelderMeadSimplex0.getDimension());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0, 3340.21644762, (-1.0), 3340.21644762, 0.0);
      assertEquals(0, nelderMeadSimplex0.getDimension());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0);
      assertEquals(0, nelderMeadSimplex0.getDimension());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(37, 37, 37, 1141.5126283351, 1141.5126283351, 1098.1256);
      assertEquals(37, nelderMeadSimplex0.getDimension());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[][] doubleArray0 = new double[1][8];
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8 != 0
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex((double[][]) null, 0.0, 0.0, 86.607892, (-2338.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(54, 54, 54, 54, 54);
      assertEquals(54, nelderMeadSimplex0.getDimension());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1413.729128337196);
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0);
      assertEquals(1, nelderMeadSimplex0.getDimension());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      NelderMeadSimplex nelderMeadSimplex0 = null;
      try {
        nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // equal vertices 0 and {1} in simplex configuration
         //
         verifyException("org.apache.commons.math3.optimization.direct.AbstractSimplex", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(2);
      assertEquals(2, nelderMeadSimplex0.getDimension());
  }
}
