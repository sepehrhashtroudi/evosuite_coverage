/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 03:48:41 GMT 2022
 */

package org.apache.commons.math3.optimization.univariate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.optimization.univariate.BracketFinder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BracketFinder_ESTest extends BracketFinder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder(3650.657, 1216);
      assertEquals(0.0, bracketFinder0.getLo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BracketFinder bracketFinder0 = null;
      try {
        bracketFinder0 = new BracketFinder(915.0243900430283, (-2146817592));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2,146,817,592 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optimization.univariate.BracketFinder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BracketFinder bracketFinder0 = null;
      try {
        bracketFinder0 = new BracketFinder((-1.0), 1431);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optimization.univariate.BracketFinder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      int int0 = bracketFinder0.getEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      double double0 = bracketFinder0.getMid();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      double double0 = bracketFinder0.getLo();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      int int0 = bracketFinder0.getMaxEvaluations();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      double double0 = bracketFinder0.getHi();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      double double0 = bracketFinder0.getFLo();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      double double0 = bracketFinder0.getFHi();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BracketFinder bracketFinder0 = new BracketFinder();
      double double0 = bracketFinder0.getFMid();
      assertEquals(0.0, double0, 0.01);
  }
}
