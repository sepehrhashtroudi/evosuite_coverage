/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 03:07:00 GMT 2022
 */

package org.apache.commons.math3.optim.univariate;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.Acos;
import org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UnivariateObjectiveFunction_ESTest extends UnivariateObjectiveFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnivariateObjectiveFunction univariateObjectiveFunction0 = new UnivariateObjectiveFunction((UnivariateFunction) null);
      UnivariateFunction univariateFunction0 = univariateObjectiveFunction0.getObjectiveFunction();
      assertNull(univariateFunction0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Acos acos0 = new Acos();
      UnivariateObjectiveFunction univariateObjectiveFunction0 = new UnivariateObjectiveFunction(acos0);
      UnivariateFunction univariateFunction0 = univariateObjectiveFunction0.getObjectiveFunction();
      assertSame(acos0, univariateFunction0);
  }
}
