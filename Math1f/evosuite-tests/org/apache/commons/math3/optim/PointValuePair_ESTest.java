/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 02:36:38 GMT 2022
 */

package org.apache.commons.math3.optim;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.optim.PointValuePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PointValuePair_ESTest extends PointValuePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 2654.7503, true);
      double[] doubleArray1 = pointValuePair0.getPointRef();
      assertFalse(doubleArray1.equals((Object)doubleArray0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 0.0);
      double[] doubleArray1 = pointValuePair0.getPoint();
      assertArrayEquals(new double[] {}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PointValuePair pointValuePair0 = new PointValuePair((double[]) null, 0.0, true);
      double[] doubleArray0 = pointValuePair0.getPointRef();
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 259.9970732663327, true);
      double[] doubleArray1 = pointValuePair0.getPoint();
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 0.0, false);
      double[] doubleArray1 = pointValuePair0.getPointRef();
      assertSame(doubleArray0, doubleArray1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PointValuePair pointValuePair0 = new PointValuePair((double[]) null, (-66.02126692813559));
      double[] doubleArray0 = pointValuePair0.getPoint();
      assertNull(doubleArray0);
  }
}
