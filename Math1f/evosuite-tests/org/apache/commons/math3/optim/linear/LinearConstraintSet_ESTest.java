/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 02:58:00 GMT 2022
 */

package org.apache.commons.math3.optim.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.RealVector;
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearConstraintSet;
import org.apache.commons.math3.optim.linear.Relationship;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinearConstraintSet_ESTest extends LinearConstraintSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinearConstraint[] linearConstraintArray0 = new LinearConstraint[9];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(2051, 2051);
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(arrayRealVector0, relationship0, (-1455.560310349));
      linearConstraintArray0[0] = linearConstraint0;
      linearConstraintArray0[1] = linearConstraintArray0[0];
      linearConstraintArray0[3] = linearConstraint0;
      linearConstraintArray0[6] = linearConstraint0;
      linearConstraintArray0[8] = linearConstraintArray0[3];
      LinearConstraintSet linearConstraintSet0 = new LinearConstraintSet(linearConstraintArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinearConstraint[] linearConstraintArray0 = new LinearConstraint[4];
      double[] doubleArray0 = new double[9];
      Relationship relationship0 = Relationship.EQ;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealVector realVector0 = RealVector.unmodifiableRealVector(arrayRealVector0);
      LinearConstraint linearConstraint0 = new LinearConstraint(realVector0, relationship0, Double.NaN);
      linearConstraintArray0[2] = linearConstraint0;
      LinearConstraintSet linearConstraintSet0 = null;
      try {
        linearConstraintSet0 = new LinearConstraintSet(linearConstraintArray0);
        fail("Expecting exception: MathUnsupportedOperationException");
      
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         verifyException("org.apache.commons.math3.linear.RealVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinearConstraint[] linearConstraintArray0 = new LinearConstraint[4];
      Relationship relationship0 = Relationship.LEQ;
      LinearConstraint linearConstraint0 = new LinearConstraint((RealVector) null, relationship0, 3.0);
      linearConstraintArray0[1] = linearConstraint0;
      LinearConstraintSet linearConstraintSet0 = null;
      try {
        linearConstraintSet0 = new LinearConstraintSet(linearConstraintArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.linear.LinearConstraint", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinearConstraint[] linearConstraintArray0 = new LinearConstraint[4];
      LinearConstraintSet linearConstraintSet0 = new LinearConstraintSet(linearConstraintArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      LinearConstraintSet linearConstraintSet0 = new LinearConstraintSet(linkedList0);
      Collection<LinearConstraint> collection0 = linearConstraintSet0.getConstraints();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinearConstraintSet linearConstraintSet0 = null;
      try {
        linearConstraintSet0 = new LinearConstraintSet((Collection<LinearConstraint>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
