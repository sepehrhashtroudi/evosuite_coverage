/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 02:26:04 GMT 2022
 */

package org.apache.commons.math3.optim.nonlinear.scalar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer;
import org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer;
import org.apache.commons.math3.random.RandomVectorGenerator;
import org.apache.commons.math3.random.UnitSphereRandomVectorGenerator;
import org.apache.commons.math3.random.Well44497b;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiStartMultivariateOptimizer_ESTest extends MultiStartMultivariateOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(250.0, 0.0);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(250.0, 250.0, simpleValueChecker0);
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(powellOptimizer0, 2180, (RandomVectorGenerator) null);
      double[] doubleArray0 = new double[6];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, (-1158.771561), true);
      multiStartMultivariateOptimizer0.store(pointValuePair0);
      PointValuePair pointValuePair1 = new PointValuePair(doubleArray0, 512.0);
      multiStartMultivariateOptimizer0.store(pointValuePair1);
      PointValuePair[] pointValuePairArray0 = multiStartMultivariateOptimizer0.getOptima();
      assertEquals(2, pointValuePairArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1140.0, (-568.410755617366));
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(simpleValueChecker0);
      Well44497b well44497b0 = new Well44497b();
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator((-1), well44497b0);
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = null;
      try {
        multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(simplexOptimizer0, (-1), unitSphereRandomVectorGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = null;
      try {
        multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer((MultivariateOptimizer) null, (-2498), (RandomVectorGenerator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(249.96823335, 249.96823335);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(249.96823335, 249.96823335, simpleValueChecker0);
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(powellOptimizer0, 2180, (RandomVectorGenerator) null);
      double[] doubleArray0 = new double[6];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 249.96823335);
      multiStartMultivariateOptimizer0.store((PointValuePair) null);
      multiStartMultivariateOptimizer0.store(pointValuePair0);
      multiStartMultivariateOptimizer0.getOptima();
      PointValuePair[] pointValuePairArray0 = multiStartMultivariateOptimizer0.getOptima();
      assertEquals(2, pointValuePairArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(249.96823335, 249.96823335);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(249.96823335, 249.96823335, simpleValueChecker0);
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(powellOptimizer0, 2180, (RandomVectorGenerator) null);
      PointValuePair[] pointValuePairArray0 = multiStartMultivariateOptimizer0.getOptima();
      assertEquals(0, pointValuePairArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(249.96823335, 249.96823335);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(249.96823335, 249.96823335, simpleValueChecker0);
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(powellOptimizer0, 2180, (RandomVectorGenerator) null);
      multiStartMultivariateOptimizer0.clear();
      assertEquals(0, multiStartMultivariateOptimizer0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(249.96823335, 249.96823335);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(249.96823335, 249.96823335, simpleValueChecker0);
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(powellOptimizer0, 2180, (RandomVectorGenerator) null);
      multiStartMultivariateOptimizer0.store((PointValuePair) null);
      multiStartMultivariateOptimizer0.store((PointValuePair) null);
      PointValuePair[] pointValuePairArray0 = multiStartMultivariateOptimizer0.getOptima();
      assertEquals(2, pointValuePairArray0.length);
  }
}
