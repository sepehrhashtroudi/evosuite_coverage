/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 02:20:52 GMT 2022
 */

package org.apache.commons.math3.optim.nonlinear.scalar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.math3.analysis.MultivariateVectorFunction;
import org.apache.commons.math3.analysis.differentiation.GradientFunction;
import org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction;
import org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectiveFunctionGradient_ESTest extends ObjectiveFunctionGradient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObjectiveFunctionGradient objectiveFunctionGradient0 = new ObjectiveFunctionGradient((MultivariateVectorFunction) null);
      MultivariateVectorFunction multivariateVectorFunction0 = objectiveFunctionGradient0.getObjectiveFunctionGradient();
      assertNull(multivariateVectorFunction0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultivariateDifferentiableFunction multivariateDifferentiableFunction0 = mock(MultivariateDifferentiableFunction.class, new ViolatedAssumptionAnswer());
      GradientFunction gradientFunction0 = new GradientFunction(multivariateDifferentiableFunction0);
      ObjectiveFunctionGradient objectiveFunctionGradient0 = new ObjectiveFunctionGradient(gradientFunction0);
      MultivariateVectorFunction multivariateVectorFunction0 = objectiveFunctionGradient0.getObjectiveFunctionGradient();
      assertSame(gradientFunction0, multivariateVectorFunction0);
  }
}
