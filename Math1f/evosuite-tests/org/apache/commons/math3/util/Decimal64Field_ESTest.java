/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 22:05:17 GMT 2022
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.FieldElement;
import org.apache.commons.math3.util.Decimal64;
import org.apache.commons.math3.util.Decimal64Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Decimal64Field_ESTest extends Decimal64Field_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Decimal64Field decimal64Field0 = Decimal64Field.getInstance();
      Decimal64 decimal64_0 = decimal64Field0.getOne();
      assertEquals("1.0", decimal64_0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Decimal64Field decimal64Field0 = Decimal64Field.getInstance();
      Class<? extends FieldElement<Decimal64>> class0 = decimal64Field0.getRuntimeClass();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Decimal64Field decimal64Field0 = Decimal64Field.getInstance();
      Decimal64 decimal64_0 = decimal64Field0.getZero();
      assertEquals((byte)0, decimal64_0.byteValue());
  }
}
