/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 22:12:11 GMT 2022
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.apache.commons.math3.util.CombinatoricsUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CombinatoricsUtils_ESTest extends CombinatoricsUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 3199;
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(3199, (-272));
      assertEquals(1.0, double0, 0.01);
      
      int int1 = 1433;
      double double1 = CombinatoricsUtils.factorialDouble(1356);
      assertEquals(Double.POSITIVE_INFINITY, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = CombinatoricsUtils.factorialLog(459);
      assertEquals(2358.217691610102, double2, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      double double3 = CombinatoricsUtils.binomialCoefficientDouble(3199, 1433);
      assertEquals(Double.POSITIVE_INFINITY, double3, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(1433, 1055);
      assertNotNull(iterator0);
      
      long long0 = CombinatoricsUtils.factorial(20);
      assertEquals(2432902008176640000L, long0);
      
      try { 
        CombinatoricsUtils.stirlingS2((-4254), 67);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 67 is larger than the maximum (-4,254)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 4;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(4, 4);
      assertNotNull(iterator0);
      
      double double0 = CombinatoricsUtils.binomialCoefficientLog(4, 4);
      assertEquals(0.0, double0, 0.01);
      
      int int1 = 0;
      long long0 = CombinatoricsUtils.binomialCoefficient(4, 0);
      assertEquals(1L, long0);
      
      int int2 = 21;
      Iterator<int[]> iterator1 = CombinatoricsUtils.combinationsIterator(21, 21);
      assertNotNull(iterator1);
      assertNotSame(iterator1, iterator0);
      assertFalse(iterator1.equals((Object)iterator0));
      
      int int3 = (-1);
      long long1 = CombinatoricsUtils.binomialCoefficient(0, (-1));
      assertEquals(0L, long1);
      assertFalse(long1 == long0);
      
      int int4 = 107;
      try { 
        CombinatoricsUtils.binomialCoefficient(107, 21);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 4;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(4, 4);
      assertNotNull(iterator0);
      
      int int1 = 0;
      long long0 = CombinatoricsUtils.binomialCoefficient(4, 0);
      assertEquals(1L, long0);
      
      int int2 = 21;
      Iterator<int[]> iterator1 = CombinatoricsUtils.combinationsIterator(21, 21);
      assertNotNull(iterator1);
      assertNotSame(iterator1, iterator0);
      assertFalse(iterator1.equals((Object)iterator0));
      
      int int3 = (-1);
      long long1 = CombinatoricsUtils.binomialCoefficient(0, (-1));
      assertEquals(0L, long1);
      assertFalse(long1 == long0);
      
      int int4 = 107;
      try { 
        CombinatoricsUtils.binomialCoefficient(107, 21);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(720, 720);
      assertNotNull(iterator0);
      
      try { 
        CombinatoricsUtils.stirlingS2(720, 718);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Argument 720 outside domain [0 ; 25]
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(1831, 1831);
      assertNotNull(iterator0);
      
      int int0 = 6;
      long long0 = CombinatoricsUtils.binomialCoefficient(12, 6);
      assertEquals(924L, long0);
      
      int int1 = 106;
      double double0 = CombinatoricsUtils.binomialCoefficientLog(1831, 106);
      assertEquals(401.6620325646772, double0, 0.01);
      
      int int2 = (-30);
      try { 
        CombinatoricsUtils.binomialCoefficientDouble((-30), 106);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 106, n = -30
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 2296;
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(2296, 2296);
      assertEquals(1.0, double0, 0.01);
      
      double double1 = CombinatoricsUtils.binomialCoefficientLog(2296, 2);
      assertEquals(14.784264699374157, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(2296, 2296);
      assertNotNull(iterator0);
      
      long long0 = CombinatoricsUtils.binomialCoefficient(2296, 2296);
      assertEquals(1L, long0);
      
      double double2 = CombinatoricsUtils.binomialCoefficientDouble(2296, 2296);
      assertEquals(1.0, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      
      double double3 = CombinatoricsUtils.binomialCoefficientLog(2296, 2296);
      assertEquals(0.0, double3, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      
      long long1 = CombinatoricsUtils.binomialCoefficient(12, 2);
      assertEquals(66L, long1);
      assertFalse(long1 == long0);
      
      double double4 = CombinatoricsUtils.factorialDouble(745);
      assertEquals(Double.POSITIVE_INFINITY, double4, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double2, 0.01);
      
      double double5 = CombinatoricsUtils.factorialDouble(2296);
      assertEquals(Double.POSITIVE_INFINITY, double5, 0.01);
      assertNotEquals(double5, double2, 0.01);
      assertNotEquals(double5, double0, 0.01);
      assertEquals(double5, double4, 0.01);
      assertNotEquals(double5, double3, 0.01);
      assertNotEquals(double5, double1, 0.01);
      
      int int1 = (-1838);
      try { 
        CombinatoricsUtils.binomialCoefficientLog((-1838), 745);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 745, n = -1,838
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 103;
      int int1 = 3313;
      int int2 = 1;
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(3313, 1);
      assertEquals(3313.0, double0, 0.01);
      
      try { 
        CombinatoricsUtils.binomialCoefficient((-3665), 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 1, n = -3,665
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 1061;
      double double0 = CombinatoricsUtils.binomialCoefficientLog(1271, 1271);
      assertEquals(0.0, double0, 0.01);
      
      int int1 = 1561;
      double double1 = CombinatoricsUtils.binomialCoefficientDouble(1561, 1061);
      assertEquals(Double.POSITIVE_INFINITY, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator(0, 1061);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 1,061, n = 0
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 61;
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(61, 61);
      assertEquals(1.0, double0, 0.01);
      
      int int1 = 674;
      try { 
        CombinatoricsUtils.stirlingS2(674, 61);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Argument 674 outside domain [0 ; 25]
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = CombinatoricsUtils.factorialDouble(0);
      assertEquals(1.0, double0, 0.01);
      
      long long0 = CombinatoricsUtils.binomialCoefficient(0, 0);
      assertEquals(1L, long0);
      
      int int0 = 66;
      double double1 = CombinatoricsUtils.factorialLog(66);
      assertEquals(213.53224149456327, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      long long1 = CombinatoricsUtils.stirlingS2(66, 0);
      assertEquals(0L, long1);
      assertFalse(long1 == long0);
      
      int int1 = (-1532);
      double double2 = CombinatoricsUtils.binomialCoefficientLog(66, (-1532));
      assertEquals(0.0, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator((-1532), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 0, n = -1,532
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 21;
      double double0 = CombinatoricsUtils.factorialDouble(21);
      assertEquals(5.109094217170942E19, double0, 0.01);
      
      int int1 = 1642;
      try { 
        CombinatoricsUtils.binomialCoefficientDouble(21, 1642);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 1,642, n = 21
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 3288;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(3288, 3288);
      assertNotNull(iterator0);
      
      double double0 = CombinatoricsUtils.binomialCoefficientLog(3288, 110);
      assertEquals(478.617165534078, double0, 0.01);
      
      try { 
        CombinatoricsUtils.factorial(110);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientLog(1630, 1630);
      assertEquals(0.0, double0, 0.01);
      
      int int0 = 2455;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(2455, 1630);
      assertNotNull(iterator0);
      
      try { 
        CombinatoricsUtils.stirlingS2((-3262), 1630);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,630 is larger than the maximum (-3,262)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 1907;
      int int1 = 0;
      long long0 = CombinatoricsUtils.stirlingS2(1907, 0);
      assertEquals(0L, long0);
      
      int int2 = 1354;
      try { 
        CombinatoricsUtils.binomialCoefficient(1907, 1354);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator((-660), (-660));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n, k), got n = -660
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long long0 = CombinatoricsUtils.binomialCoefficient(0, 0);
      assertEquals(1L, long0);
      
      long long1 = CombinatoricsUtils.binomialCoefficient(0, (-2501));
      assertEquals(1L, long1);
      assertTrue(long1 == long0);
      
      double double0 = CombinatoricsUtils.factorialLog(0);
      assertEquals(0.0, double0, 0.01);
      
      double double1 = CombinatoricsUtils.factorialDouble(288);
      assertEquals(Double.POSITIVE_INFINITY, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = CombinatoricsUtils.binomialCoefficientLog(288, (-2501));
      assertEquals(0.0, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      
      double double3 = CombinatoricsUtils.factorialLog(288);
      assertEquals(1346.6833264041618, double3, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      
      try { 
        CombinatoricsUtils.stirlingS2((-2501), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is larger than the maximum (-2,501)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1135);
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator(0, (-1135));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(166, 0);
      assertEquals(1.0, double0, 0.01);
      
      double double1 = CombinatoricsUtils.binomialCoefficientDouble(166, 166);
      assertEquals(1.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      double double2 = CombinatoricsUtils.factorialDouble(0);
      assertEquals(1.0, double2, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      
      double double3 = CombinatoricsUtils.factorialDouble(5351);
      assertEquals(Double.POSITIVE_INFINITY, double3, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      
      // Undeclared exception!
      CombinatoricsUtils.factorialLog(5351);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      double double0 = CombinatoricsUtils.factorialLog(0);
      assertEquals(0.0, double0, 0.01);
      
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator(5407, (-1145));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long long0 = CombinatoricsUtils.stirlingS2(2020, 2020);
      assertEquals(1L, long0);
      
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(2020, 2020);
      assertNotNull(iterator0);
      
      int int0 = (-345);
      long long1 = CombinatoricsUtils.binomialCoefficient(2020, (-345));
      assertEquals(1L, long1);
      assertTrue(long1 == long0);
      
      int int1 = 0;
      try { 
        CombinatoricsUtils.binomialCoefficient((-345), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 0, n = -345
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 2020;
      long long0 = CombinatoricsUtils.stirlingS2(2020, 2020);
      assertEquals(1L, long0);
      
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(2020, 2020);
      assertNotNull(iterator0);
      
      long long1 = CombinatoricsUtils.binomialCoefficient(2020, 2020);
      assertEquals(1L, long1);
      assertTrue(long1 == long0);
      
      long long2 = CombinatoricsUtils.binomialCoefficient(2020, 2020);
      assertEquals(1L, long2);
      assertTrue(long2 == long0);
      assertTrue(long2 == long1);
      
      try { 
        CombinatoricsUtils.binomialCoefficientLog((-2192), 2020);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 2,020, n = -2,192
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 908;
      double double0 = CombinatoricsUtils.binomialCoefficientLog(908, 908);
      assertEquals(0.0, double0, 0.01);
      
      int int1 = 597;
      try { 
        CombinatoricsUtils.stirlingS2(908, 597);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Argument 908 outside domain [0 ; 25]
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 0;
      long long0 = CombinatoricsUtils.stirlingS2(33, 0);
      assertEquals(0L, long0);
      
      int int1 = 3153;
      try { 
        CombinatoricsUtils.binomialCoefficientDouble(33, 3153);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 3,153, n = 33
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = (-1354);
      try { 
        CombinatoricsUtils.binomialCoefficientLog((-1354), (-1354));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n, k), got n = -1,354
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 4;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(4, 4);
      assertNotNull(iterator0);
      
      double double0 = CombinatoricsUtils.binomialCoefficientLog(4, 4);
      assertEquals(0.0, double0, 0.01);
      
      int int1 = 0;
      long long0 = CombinatoricsUtils.binomialCoefficient(4, 0);
      assertEquals(1L, long0);
      
      int int2 = 21;
      Iterator<int[]> iterator1 = CombinatoricsUtils.combinationsIterator(21, 21);
      assertNotNull(iterator1);
      assertNotSame(iterator1, iterator0);
      assertFalse(iterator1.equals((Object)iterator0));
      
      int int3 = 0;
      long long1 = CombinatoricsUtils.binomialCoefficient(0, 0);
      assertEquals(1L, long1);
      assertTrue(long1 == long0);
      
      int int4 = 107;
      try { 
        CombinatoricsUtils.binomialCoefficient(107, 21);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 2296;
      int int1 = 242;
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(2296, 242);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      double double1 = CombinatoricsUtils.binomialCoefficientLog(2296, 2);
      assertEquals(14.784264699374157, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      int int2 = 9;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(9, 9);
      assertNotNull(iterator0);
      
      try { 
        CombinatoricsUtils.factorial(242);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = CombinatoricsUtils.factorialDouble(95);
      assertEquals(1.0329978488239678E148, double0, 0.01);
      
      double double1 = CombinatoricsUtils.factorialLog(95);
      assertEquals(340.8150588707991, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      long long0 = CombinatoricsUtils.binomialCoefficient(0, 0);
      assertEquals(1L, long0);
      
      try { 
        CombinatoricsUtils.factorialDouble((-4635));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -4,635
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      try { 
        CombinatoricsUtils.factorial(437);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = (-4985);
      try { 
        CombinatoricsUtils.stirlingS2((-4985), (-4985));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4,985 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      try { 
        CombinatoricsUtils.factorial((-2118));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -2,118
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      try { 
        CombinatoricsUtils.stirlingS2((-1092), (-1092));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,092 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(0, 0);
      assertNotNull(iterator0);
      
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator((-1783), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 0, n = -1,783
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      try { 
        CombinatoricsUtils.factorial((-803));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -803
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = (-3014);
      int int1 = 0;
      try { 
        CombinatoricsUtils.stirlingS2((-3014), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is larger than the maximum (-3,014)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = (-139);
      try { 
        CombinatoricsUtils.binomialCoefficient((-139), (-139));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n, k), got n = -139
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 11;
      int int1 = 0;
      double double0 = CombinatoricsUtils.binomialCoefficientLog(11, 0);
      assertEquals(0.0, double0, 0.01);
      
      try { 
        CombinatoricsUtils.binomialCoefficient((-1426), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 0, n = -1,426
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientLog(1314, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      try { 
        CombinatoricsUtils.stirlingS2((-3993), 556);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 556 is larger than the maximum (-3,993)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 1216;
      int int1 = 1469;
      try { 
        CombinatoricsUtils.binomialCoefficientDouble(1216, 1469);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 1,469, n = 1,216
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = (-2652);
      try { 
        CombinatoricsUtils.factorialLog((-2652));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -2,652
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = (-2037);
      double double0 = CombinatoricsUtils.binomialCoefficientLog(1326, (-2037));
      assertEquals(0.0, double0, 0.01);
      
      try { 
        CombinatoricsUtils.binomialCoefficientLog(12, 1326);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 1,326, n = 12
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      long long0 = CombinatoricsUtils.binomialCoefficient(0, 0);
      assertEquals(1L, long0);
      
      double double0 = CombinatoricsUtils.factorialLog(2282);
      assertEquals(15369.05216323915, double0, 0.01);
      
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator(1429, 2282);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 2,282, n = 1,429
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 0;
      long long0 = CombinatoricsUtils.factorial(0);
      assertEquals(1L, long0);
      
      long long1 = CombinatoricsUtils.binomialCoefficient(0, 0);
      assertEquals(1L, long1);
      assertTrue(long1 == long0);
      
      int int1 = (-973);
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(0, (-973));
      assertEquals(1.0, double0, 0.01);
      
      try { 
        CombinatoricsUtils.binomialCoefficientDouble((-1639), (-1639));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n, k), got n = -1,639
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 664;
      double double0 = CombinatoricsUtils.factorialLog(664);
      assertEquals(3655.027552362297, double0, 0.01);
      
      double double1 = CombinatoricsUtils.binomialCoefficientLog(664, 664);
      assertEquals(0.0, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      int int1 = 0;
      long long0 = CombinatoricsUtils.stirlingS2(0, 0);
      assertEquals(1L, long0);
      
      int int2 = (-586);
      try { 
        CombinatoricsUtils.binomialCoefficientDouble((-586), 664);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 664, n = -586
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientLog(0, 0);
      assertEquals(0.0, double0, 0.01);
      
      double double1 = CombinatoricsUtils.binomialCoefficientLog(0, 0);
      assertEquals(0.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      long long0 = CombinatoricsUtils.stirlingS2(0, 0);
      assertEquals(1L, long0);
      
      double double2 = CombinatoricsUtils.binomialCoefficientDouble(923, 0);
      assertEquals(1.0, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(492, 492);
      assertNotNull(iterator0);
      
      try { 
        CombinatoricsUtils.factorialLog((-1291));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -1,291
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double double0 = CombinatoricsUtils.factorialLog(15);
      assertEquals(27.89927138384089, double0, 0.01);
      
      double double1 = CombinatoricsUtils.factorialLog(8);
      assertEquals(10.60460290274525, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      long long0 = CombinatoricsUtils.factorial(15);
      assertEquals(1307674368000L, long0);
      
      double double2 = CombinatoricsUtils.binomialCoefficientLog(1438, (-207));
      assertEquals(0.0, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      
      try { 
        CombinatoricsUtils.factorialDouble((-986));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -986
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(0, (-1614));
      assertEquals(1.0, double0, 0.01);
      
      double double1 = CombinatoricsUtils.factorialLog(0);
      assertEquals(0.0, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = CombinatoricsUtils.binomialCoefficientDouble(535, (-2490));
      assertEquals(1.0, double2, 0.01);
      assertEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      double double3 = CombinatoricsUtils.factorialDouble(1443);
      assertEquals(Double.POSITIVE_INFINITY, double3, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientLog(163, (-523));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(0, 0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double double0 = CombinatoricsUtils.factorialLog(0);
      assertEquals(0.0, double0, 0.01);
      
      double double1 = CombinatoricsUtils.binomialCoefficientLog(0, (-1369));
      assertEquals(0.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 509;
      try { 
        CombinatoricsUtils.binomialCoefficient(1487, 509);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      long long0 = CombinatoricsUtils.binomialCoefficient(1474, 0);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      try { 
        CombinatoricsUtils.binomialCoefficient((-443), (-443));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n, k), got n = -443
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 724;
      int int1 = (-1028);
      try { 
        CombinatoricsUtils.stirlingS2(724, (-1028));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,028 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 1166;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(1166, 1166);
      assertNotNull(iterator0);
      
      int int1 = (-577);
      double double0 = CombinatoricsUtils.binomialCoefficientLog(9, (-577));
      assertEquals(0.0, double0, 0.01);
      
      try { 
        CombinatoricsUtils.factorial((-577));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -577
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      double double0 = CombinatoricsUtils.binomialCoefficientDouble(1292, 715);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      double double1 = CombinatoricsUtils.factorialLog(36);
      assertEquals(95.71969454214322, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(1423, 715);
      assertNotNull(iterator0);
      
      try { 
        CombinatoricsUtils.binomialCoefficient(1423, 1292);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = (-577);
      try { 
        CombinatoricsUtils.factorialDouble((-577));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -577
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = (-567);
      try { 
        CombinatoricsUtils.binomialCoefficientLog((-567), (-567));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n, k), got n = -567
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = 611;
      int int1 = 564;
      int int2 = 1137;
      try { 
        CombinatoricsUtils.stirlingS2(564, 1137);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,137 is larger than the maximum (564)
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = 4;
      Iterator<int[]> iterator0 = CombinatoricsUtils.combinationsIterator(4, 4);
      assertNotNull(iterator0);
      
      double double0 = CombinatoricsUtils.binomialCoefficientLog(4, 4);
      assertEquals(0.0, double0, 0.01);
      
      int int1 = 0;
      int int2 = 21;
      Iterator<int[]> iterator1 = CombinatoricsUtils.combinationsIterator(21, 21);
      assertNotNull(iterator1);
      assertNotSame(iterator1, iterator0);
      assertFalse(iterator1.equals((Object)iterator0));
      
      int int3 = (-11);
      long long0 = CombinatoricsUtils.binomialCoefficient(0, (-11));
      assertEquals(1L, long0);
      
      int int4 = 107;
      try { 
        CombinatoricsUtils.binomialCoefficient(107, 21);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // arithmetic exception
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      try { 
        CombinatoricsUtils.stirlingS2(1477, 1023);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Argument 1,477 outside domain [0 ; 25]
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CombinatoricsUtils.binomialCoefficientLog(1174, 1174);
      CombinatoricsUtils.combinationsIterator(1174, 1174);
      int int0 = 0;
      CombinatoricsUtils.stirlingS2(1332, 0);
      CombinatoricsUtils.factorialLog(1174);
      try { 
        CombinatoricsUtils.binomialCoefficient(0, 1107);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 1,107, n = 0
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CombinatoricsUtils.binomialCoefficient(12, 2);
      CombinatoricsUtils.factorialDouble(2);
      CombinatoricsUtils.factorialDouble(2);
      try { 
        CombinatoricsUtils.stirlingS2(745, 12);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Argument 745 outside domain [0 ; 25]
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = 2296;
      CombinatoricsUtils.binomialCoefficientDouble(2296, 242);
      CombinatoricsUtils.binomialCoefficientLog(2296, 2);
      CombinatoricsUtils.combinationsIterator(1713, 1713);
      CombinatoricsUtils.stirlingS2(2296, 2);
      CombinatoricsUtils.binomialCoefficientDouble(242, 242);
      CombinatoricsUtils.binomialCoefficientLog(2296, 1713);
      CombinatoricsUtils.factorialDouble(745);
      CombinatoricsUtils.factorialDouble(1713);
      int int1 = (-1838);
      try { 
        CombinatoricsUtils.binomialCoefficientLog((-1838), 745);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 745, n = -1,838
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = 2613;
      CombinatoricsUtils.factorialDouble(2613);
      int int1 = 0;
      CombinatoricsUtils.factorialLog(0);
      CombinatoricsUtils.binomialCoefficient(2613, 2613);
      try { 
        CombinatoricsUtils.binomialCoefficientLog(96, 2613);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 2,613, n = 96
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = 10;
      CombinatoricsUtils.stirlingS2(10, 10);
      CombinatoricsUtils.factorial(10);
      CombinatoricsUtils.combinationsIterator(10, 10);
      CombinatoricsUtils.factorialDouble(10);
      CombinatoricsUtils.factorial(10);
      int int1 = 17;
      // Undeclared exception!
      try { 
        CombinatoricsUtils.combinationsIterator(10, 17);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n, k), got k = 17, n = 10
         //
         verifyException("org.apache.commons.math3.util.CombinatoricsUtils", e);
      }
  }
}
