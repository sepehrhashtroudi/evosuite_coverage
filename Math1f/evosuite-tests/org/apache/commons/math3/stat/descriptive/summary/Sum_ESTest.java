/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 04:46:59 GMT 2022
 */

package org.apache.commons.math3.stat.descriptive.summary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.stat.descriptive.summary.Sum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sum_ESTest extends Sum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sum sum0 = new Sum();
      sum0.increment(1.34217729E8);
      double double0 = sum0.getResult();
      assertEquals(1.34217729E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sum sum0 = new Sum();
      sum0.increment((-213.81809486049));
      double double0 = sum0.getResult();
      assertEquals((-213.81809486049), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sum sum0 = new Sum();
      sum0.increment(282.414492);
      long long0 = sum0.getN();
      assertEquals(282.414492, sum0.getResult(), 0.01);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 547.7181199769;
      double double0 = sum0.evaluate(doubleArray0, doubleArray1);
      assertEquals(0L, sum0.getN());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, sum0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 3042.9921550426;
      double double0 = sum0.evaluate(doubleArray0, 0, 2);
      assertEquals(3042.9921550426, double0, 0.01);
      assertEquals(0.0, sum0.getResult(), 0.01);
      assertEquals(0L, sum0.getN());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = (-133.2780646346626);
      double double0 = sum0.evaluate(doubleArray0, 1, 1);
      assertEquals(0.0, sum0.getResult(), 0.01);
      assertEquals(0L, sum0.getN());
      assertEquals((-133.2780646346626), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sum sum0 = new Sum();
      sum0.increment(1.0);
      sum0.copy();
      assertEquals(1.0, sum0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sum sum0 = new Sum();
      sum0.increment((-213.81809486049));
      sum0.copy();
      assertEquals((-213.81809486049), sum0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[1];
      try { 
        sum0.evaluate(doubleArray0, doubleArray0, (-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = new double[7];
      try { 
        sum0.evaluate(doubleArray0, doubleArray1, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 3
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sum sum0 = new Sum();
      try { 
        sum0.evaluate((double[]) null, (double[]) null, 90, 90);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        sum0.evaluate(doubleArray0, doubleArray0, (-1264), 6502);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1264
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = new double[6];
      try { 
        sum0.evaluate(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6 != 8
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[2];
      try { 
        sum0.evaluate(doubleArray0, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Sum sum0 = new Sum();
      // Undeclared exception!
      try { 
        sum0.evaluate((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.summary.Sum", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[0];
      try { 
        sum0.evaluate(doubleArray0, (-805), 134217729);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // start position (-805)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[8];
      try { 
        sum0.evaluate(doubleArray0, 1, 201);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Sum sum0 = new Sum();
      try { 
        sum0.evaluate((double[]) null, (-1837), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      try { 
        Sum.copy((Sum) null, (Sum) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Sum sum0 = null;
      try {
        sum0 = new Sum((Sum) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 5.206150291559893E-8;
      double double0 = sum0.evaluate(doubleArray0, doubleArray0, 1, 1);
      assertEquals(0.0, sum0.getResult(), 0.01);
      assertEquals(2.7104000858309155E-15, double0, 0.01);
      assertEquals(0L, sum0.getN());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[8];
      double double0 = sum0.evaluate(doubleArray0, 1, 1);
      assertEquals(0L, sum0.getN());
      assertEquals(0.0, sum0.getResult(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Sum sum0 = new Sum();
      Sum.copy(sum0, sum0);
      assertEquals(0L, sum0.getN());
      assertEquals(0.0, sum0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Sum sum0 = new Sum();
      long long0 = sum0.getN();
      assertEquals(0.0, sum0.getResult(), 0.01);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Sum sum0 = new Sum();
      double double0 = sum0.getResult();
      assertEquals(0L, sum0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2877.00324226848;
      double double0 = sum0.evaluate(doubleArray0, doubleArray0);
      assertEquals(0L, sum0.getN());
      assertEquals(0.0, sum0.getResult(), 0.01);
      assertEquals(8277147.656023346, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Sum sum0 = new Sum();
      double[] doubleArray0 = new double[2];
      try { 
        sum0.evaluate(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Sum sum0 = new Sum();
      sum0.clear();
      assertEquals(0.0, sum0.getResult(), 0.01);
      assertEquals(0L, sum0.getN());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Sum sum0 = new Sum();
      Sum sum1 = sum0.copy();
      assertEquals(0.0, sum1.getResult(), 0.01);
      assertNotSame(sum1, sum0);
      assertEquals(0L, sum1.getN());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Sum sum0 = new Sum();
      Sum sum1 = new Sum(sum0);
      sum0.equals(sum1);
      assertEquals(0L, sum1.getN());
      assertEquals(0.0, sum1.getResult(), 0.01);
  }
}
