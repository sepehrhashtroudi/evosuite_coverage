/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 04:40:58 GMT 2022
 */

package org.apache.commons.math3.stat.descriptive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.stat.descriptive.StatisticalSummary;
import org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;
import org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;
import org.apache.commons.math3.stat.descriptive.moment.SecondMoment;
import org.apache.commons.math3.stat.descriptive.moment.StandardDeviation;
import org.apache.commons.math3.stat.descriptive.rank.Min;
import org.apache.commons.math3.stat.descriptive.summary.Product;
import org.apache.commons.math3.stat.descriptive.summary.Sum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SynchronizedSummaryStatistics_ESTest extends SynchronizedSummaryStatistics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setVarianceImpl((StorelessUnivariateStatistic) null);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getVarianceImpl();
      assertNull(storelessUnivariateStatistic0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1635.70650259);
      double double0 = synchronizedSummaryStatistics0.getVariance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      Product product0 = new Product();
      synchronizedSummaryStatistics0.setVarianceImpl(product0);
      double double0 = synchronizedSummaryStatistics0.getVariance();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-1067.482336051993));
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumsqImpl();
      assertEquals(1139518.53778302, storelessUnivariateStatistic0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1632.96836925278);
      double double0 = synchronizedSummaryStatistics0.getSumsq();
      assertEquals(2666585.6949800835, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics1 = new SynchronizedSummaryStatistics(synchronizedSummaryStatistics0);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics1.getMaxImpl();
      synchronizedSummaryStatistics1.addValue((-788.49));
      synchronizedSummaryStatistics0.setSumsqImpl(storelessUnivariateStatistic0);
      assertEquals((-788.49), storelessUnivariateStatistic0.getResult(), 0.01);
      
      double double0 = synchronizedSummaryStatistics0.getSumsq();
      assertEquals((-788.49), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-1222.8));
      StatisticalSummary statisticalSummary0 = synchronizedSummaryStatistics0.getSummary();
      assertEquals((-1222.8), statisticalSummary0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setSumLogImpl((StorelessUnivariateStatistic) null);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumLogImpl();
      assertNull(storelessUnivariateStatistic0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1668.3041649386212);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumLogImpl();
      assertEquals(7.419562919375098, storelessUnivariateStatistic0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setSumImpl((StorelessUnivariateStatistic) null);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumImpl();
      assertNull(storelessUnivariateStatistic0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(0.0);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumImpl();
      assertEquals(0.0, storelessUnivariateStatistic0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(2436.6965601883085);
      double double0 = synchronizedSummaryStatistics0.getSum();
      assertEquals(2436.6965601883085, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-4056.8));
      double double0 = synchronizedSummaryStatistics0.getSum();
      assertEquals((-4056.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1632.96836925278);
      double double0 = synchronizedSummaryStatistics0.getStandardDeviation();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-467.47972035132));
      synchronizedSummaryStatistics0.addValue((-23.650964651641));
      double double0 = synchronizedSummaryStatistics0.getStandardDeviation();
      assertEquals(313.83432284083057, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-1283.0));
      double double0 = synchronizedSummaryStatistics0.getPopulationVariance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-1222.8));
      long long0 = synchronizedSummaryStatistics0.getN();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(0.0);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMinImpl();
      assertEquals(0.0, storelessUnivariateStatistic0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumImpl();
      synchronizedSummaryStatistics0.setMinImpl(storelessUnivariateStatistic0);
      double double0 = synchronizedSummaryStatistics0.getMin();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(773.191);
      double double0 = synchronizedSummaryStatistics0.getMin();
      assertEquals(773.191, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-4056.8));
      double double0 = synchronizedSummaryStatistics0.getMin();
      assertEquals((-4056.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMeanImpl((StorelessUnivariateStatistic) null);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMeanImpl();
      assertNull(storelessUnivariateStatistic0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1668.3041649386212);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMeanImpl();
      assertEquals(1668.3041649386212, storelessUnivariateStatistic0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumLogImpl();
      synchronizedSummaryStatistics0.setMeanImpl(storelessUnivariateStatistic0);
      double double0 = synchronizedSummaryStatistics0.getMean();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1635.70650259);
      double double0 = synchronizedSummaryStatistics0.getMean();
      assertEquals(1635.70650259, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-1222.8));
      double double0 = synchronizedSummaryStatistics0.getMean();
      assertEquals((-1222.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(Double.NaN);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMaxImpl();
      assertEquals(1L, storelessUnivariateStatistic0.getN());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(0.0);
      double double0 = synchronizedSummaryStatistics0.getMax();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1632.96836925278);
      double double0 = synchronizedSummaryStatistics0.getMax();
      assertEquals(1632.96836925278, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-1222.8));
      double double0 = synchronizedSummaryStatistics0.getMax();
      assertEquals((-1222.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1632.96836925278);
      double double0 = synchronizedSummaryStatistics0.getGeometricMean();
      assertEquals(1632.9683692527794, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMaxImpl();
      synchronizedSummaryStatistics0.setGeoMeanImpl(storelessUnivariateStatistic0);
      synchronizedSummaryStatistics0.addValue((-788.49));
      double double0 = synchronizedSummaryStatistics0.getGeometricMean();
      assertEquals((-788.49), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setGeoMeanImpl((StorelessUnivariateStatistic) null);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getGeoMeanImpl();
      assertNull(storelessUnivariateStatistic0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      Object object0 = new Object();
      boolean boolean0 = synchronizedSummaryStatistics0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(0.0);
      SynchronizedSummaryStatistics synchronizedSummaryStatistics1 = synchronizedSummaryStatistics0.copy();
      assertNotSame(synchronizedSummaryStatistics1, synchronizedSummaryStatistics0);
      assertEquals(0.0, synchronizedSummaryStatistics1.getSecondMoment(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getGeoMeanImpl();
      synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic0);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setVarianceImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      SecondMoment secondMoment0 = new SecondMoment();
      synchronizedSummaryStatistics0.addValue(Double.NaN);
      try { 
        synchronizedSummaryStatistics0.setVarianceImpl(secondMoment0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(0.0);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getVarianceImpl();
      try { 
        synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getGeoMeanImpl();
      synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic0);
      StorelessUnivariateStatistic storelessUnivariateStatistic1 = synchronizedSummaryStatistics0.getMaxImpl();
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setSumLogImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.setSumLogImpl((StorelessUnivariateStatistic) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(1.0);
      SecondMoment secondMoment0 = new SecondMoment();
      StandardDeviation standardDeviation0 = new StandardDeviation(true, secondMoment0);
      try { 
        synchronizedSummaryStatistics0.setSumImpl(standardDeviation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      Min min0 = new Min();
      synchronizedSummaryStatistics0.addValue((-2301.17442));
      try { 
        synchronizedSummaryStatistics0.setMinImpl(min0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue((-1222.8));
      Sum sum0 = new Sum();
      try { 
        synchronizedSummaryStatistics0.setMeanImpl(sum0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(2436.6965601883085);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getGeoMeanImpl();
      try { 
        synchronizedSummaryStatistics0.setMaxImpl(storelessUnivariateStatistic0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(2436.6965601883085);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getGeoMeanImpl();
      try { 
        synchronizedSummaryStatistics0.setGeoMeanImpl(storelessUnivariateStatistic0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setVarianceImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.getVariance();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMeanImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.getSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.getMin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMeanImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.getMean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getGeoMeanImpl();
      synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic0);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.getGeometricMean();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics1 = new SynchronizedSummaryStatistics(synchronizedSummaryStatistics0);
      synchronizedSummaryStatistics1.setSumsqImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics1.equals(synchronizedSummaryStatistics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      try { 
        SynchronizedSummaryStatistics.copy((SynchronizedSummaryStatistics) null, synchronizedSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        SynchronizedSummaryStatistics.copy(synchronizedSummaryStatistics0, synchronizedSummaryStatistics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getVarianceImpl();
      synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic0);
      // Undeclared exception!
      try { 
        SynchronizedSummaryStatistics.copy(synchronizedSummaryStatistics0, synchronizedSummaryStatistics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.math3.stat.descriptive.moment.Variance cannot be cast to org.apache.commons.math3.stat.descriptive.summary.SumOfLogs
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setSumImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMeanImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setVarianceImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.addValue((-2313.6));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = null;
      try {
        synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics((SynchronizedSummaryStatistics) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      synchronizedSummaryStatistics0.setSumLogImpl(standardDeviation0);
      SynchronizedSummaryStatistics synchronizedSummaryStatistics1 = null;
      try {
        synchronizedSummaryStatistics1 = new SynchronizedSummaryStatistics(synchronizedSummaryStatistics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.math3.stat.descriptive.moment.StandardDeviation cannot be cast to org.apache.commons.math3.stat.descriptive.summary.SumOfLogs
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      long long0 = synchronizedSummaryStatistics0.getN();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      SynchronizedSummaryStatistics.copy(synchronizedSummaryStatistics0, synchronizedSummaryStatistics0);
      assertEquals(0L, synchronizedSummaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getGeoMeanImpl();
      synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic0);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.clear();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      double double0 = synchronizedSummaryStatistics0.getSumsq();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      double double0 = synchronizedSummaryStatistics0.getSum();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getVarianceImpl();
      synchronizedSummaryStatistics0.setSumLogImpl(storelessUnivariateStatistic0);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.copy();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.math3.stat.descriptive.moment.Variance cannot be cast to org.apache.commons.math3.stat.descriptive.summary.SumOfLogs
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.clear();
      assertEquals(Double.NaN, synchronizedSummaryStatistics0.getSecondMoment(), 0.01);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
      SynchronizedSummaryStatistics synchronizedSummaryStatistics1 = null;
      try {
        synchronizedSummaryStatistics1 = new SynchronizedSummaryStatistics(synchronizedSummaryStatistics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMinImpl();
      assertEquals(Double.NaN, storelessUnivariateStatistic0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.hashCode();
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      String string0 = synchronizedSummaryStatistics0.toString();
      assertEquals("SummaryStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\ngeometric mean: NaN\nvariance: NaN\nsum of squares: 0.0\nstandard deviation: NaN\nsum of logs: 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StatisticalSummary statisticalSummary0 = synchronizedSummaryStatistics0.getSummary();
      assertEquals(0.0, statisticalSummary0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.setGeoMeanImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        synchronizedSummaryStatistics0.getGeometricMean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics1 = synchronizedSummaryStatistics0.copy();
      assertNotSame(synchronizedSummaryStatistics1, synchronizedSummaryStatistics0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      synchronizedSummaryStatistics0.addValue(Double.NaN);
      try { 
        synchronizedSummaryStatistics0.setSumsqImpl((StorelessUnivariateStatistic) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMaxImpl();
      synchronizedSummaryStatistics0.setVarianceImpl(storelessUnivariateStatistic0);
      synchronizedSummaryStatistics0.addValue((-788.49));
      double double0 = synchronizedSummaryStatistics0.getVariance();
      assertEquals((-788.49), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMeanImpl();
      assertEquals(0L, storelessUnivariateStatistic0.getN());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics1 = new SynchronizedSummaryStatistics(synchronizedSummaryStatistics0);
      boolean boolean0 = synchronizedSummaryStatistics1.equals(synchronizedSummaryStatistics0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getMaxImpl();
      synchronizedSummaryStatistics0.setMaxImpl(storelessUnivariateStatistic0);
      assertEquals(0L, synchronizedSummaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumLogImpl();
      synchronizedSummaryStatistics0.setSumsqImpl(storelessUnivariateStatistic0);
      assertEquals(0L, synchronizedSummaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = synchronizedSummaryStatistics0.getSumsqImpl();
      synchronizedSummaryStatistics0.setGeoMeanImpl(storelessUnivariateStatistic0);
      double double0 = synchronizedSummaryStatistics0.getGeometricMean();
      assertEquals(0.0, double0, 0.01);
  }
}
