/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 04:45:15 GMT 2022
 */

package org.apache.commons.math3.stat.descriptive;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StatisticalSummaryValues_ESTest extends StatisticalSummaryValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), (-1.0), (-1769L), (-1772.0), (-1772.0), 660.4435895);
      statisticalSummaryValues0.hashCode();
      assertEquals((-1.0), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(660.4435895, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1772.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1769L), statisticalSummaryValues0.getN());
      assertEquals((-1772.0), statisticalSummaryValues0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1015.7636993105), 398.922273, (-1L), (-1L), (-909.844614486), (-1015.7636993105));
      double double0 = statisticalSummaryValues0.getVariance();
      assertEquals((-909.844614486), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(398.922273, double0, 0.01);
      assertEquals((-1015.7636993105), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1015.7636993105), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-1L), statisticalSummaryValues0.getN());
      assertEquals((-1.0), statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-3639.6261047662), (-3639.6261047662), 0L, (-3639.6261047662), 0.0, (-3639.6261047662));
      double double0 = statisticalSummaryValues0.getVariance();
      assertEquals((-3639.6261047662), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-3639.6261047662), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-3639.6261047662), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-3639.6261047662), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), (-1.0), (-1769L), (-1772.0), (-1772.0), 660.4435895);
      double double0 = statisticalSummaryValues0.getSum();
      assertEquals((-1769L), statisticalSummaryValues0.getN());
      assertEquals((-1.0), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(660.4435895, double0, 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-1772.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1772.0), statisticalSummaryValues0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1015.7636993105), 398.922273, (-1L), (-1L), (-909.844614486), (-1015.7636993105));
      double double0 = statisticalSummaryValues0.getSum();
      assertEquals(398.922273, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1015.7636993105), double0, 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1015.7636993105), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-909.844614486), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1L), statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1690.839948721), 0.0, 2026L, (-1690.839948721), 2026L, 0.0);
      double double0 = statisticalSummaryValues0.getStandardDeviation();
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(2026L, statisticalSummaryValues0.getN());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1690.839948721), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-1690.839948721), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2026.0, statisticalSummaryValues0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), (-1.0), 0L, 0L, 2514.5897041648855, (-1.0));
      statisticalSummaryValues0.getN();
      assertEquals((-1.0), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2514.5897041648855, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1690.839948721), 0.0, 2026L, (-1690.839948721), 2026L, 0.0);
      long long0 = statisticalSummaryValues0.getN();
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1690.839948721), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2026.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(2026L, long0);
      assertEquals((-1690.839948721), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, (-4066.3619034953176), 4458L, (-4066.3619034953176), 0.0, (-4066.3619034953176));
      double double0 = statisticalSummaryValues0.getMin();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-4066.3619034953176), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-4066.3619034953176), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-4066.3619034953176), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(4458L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(2172.484658582, 2172.484658582, (-890L), 1585.406, 2172.484658582, (-3238.1));
      double double0 = statisticalSummaryValues0.getMin();
      assertEquals(2172.484658582, double0, 0.01);
      assertEquals(2172.484658582, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(1585.406, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2172.484658582, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-890L), statisticalSummaryValues0.getN());
      assertEquals((-3238.1), statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(1.0, 1.0, (-393L), (-1069.0), 2427.33, 0.0);
      double double0 = statisticalSummaryValues0.getMean();
      assertEquals((-393L), statisticalSummaryValues0.getN());
      assertEquals(2427.33, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(1.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1069.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), (-1.0), (-1769L), (-1772.0), (-1772.0), 660.4435895);
      double double0 = statisticalSummaryValues0.getMean();
      assertEquals((-1772.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1772.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1769L), statisticalSummaryValues0.getN());
      assertEquals((-1.0), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(660.4435895, statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-76.1533518366), (-76.1533518366), (-1L), 0.0, (-76.1533518366), 0.0);
      double double0 = statisticalSummaryValues0.getMax();
      assertEquals((-76.1533518366), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-76.1533518366), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-76.1533518366), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1L), statisticalSummaryValues0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(4732.2728699292675, 4732.2728699292675, 2468L, 2468L, 4732.2728699292675, 4732.2728699292675);
      double double0 = statisticalSummaryValues0.getMax();
      assertEquals(2468.0, double0, 0.01);
      assertEquals(4732.2728699292675, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(4732.2728699292675, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(2468L, statisticalSummaryValues0.getN());
      assertEquals(4732.2728699292675, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(4732.2728699292675, statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), (-1.0), (-1769L), (-1772.0), (-1772.0), 660.4435895);
      double double0 = statisticalSummaryValues0.getMax();
      assertEquals((-1772.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1772.0), double0, 0.01);
      assertEquals(660.4435895, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1769L), statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), (-1.0), (-1769L), (-1772.0), (-1772.0), 660.4435895);
      long long0 = statisticalSummaryValues0.getN();
      assertEquals((-1.0), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(660.4435895, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-1769L), long0);
      assertEquals((-1772.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1772.0), statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      double double0 = statisticalSummaryValues0.getMean();
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(1L, statisticalSummaryValues0.getN());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1015.7636993105), 398.922273, (-1L), (-1L), (-909.844614486), (-1015.7636993105));
      double double0 = statisticalSummaryValues0.getStandardDeviation();
      assertEquals(19.973038652143043, double0, 0.01);
      assertEquals((-1L), statisticalSummaryValues0.getN());
      assertEquals((-1015.7636993105), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1015.7636993105), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-909.844614486), statisticalSummaryValues0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-2593.455706), (-2593.455706), (-2947L), 3481.10269204804, (-307.6449324), (-307.6449324));
      double double0 = statisticalSummaryValues0.getMin();
      assertEquals((-2593.455706), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-2947L), statisticalSummaryValues0.getN());
      assertEquals((-2593.455706), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-307.6449324), double0, 0.01);
      assertEquals((-307.6449324), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(3481.10269204804, statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      double double0 = statisticalSummaryValues0.getSum();
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1L, statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      double double0 = statisticalSummaryValues0.getVariance();
      assertEquals(1L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, (-678.954), 1L, 0.0, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues1.getSum(), 0.01);
      assertEquals((-678.954), statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(1L, statisticalSummaryValues1.getN());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 1L);
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, (-678.954), 1L, 0.0, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals((-678.954), statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(1.0, statisticalSummaryValues0.getSum(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(1L, statisticalSummaryValues1.getN());
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues1.equals(statisticalSummaryValues0);
      assertEquals(0.0, statisticalSummaryValues1.getSum(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(1L, statisticalSummaryValues1.getN());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(416.62048319785646, 416.62048319785646, (-1L), 416.62048319785646, (-165.75187), 0.0);
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(416.62048319785646, 0.0, (-1L), 416.62048319785646, 416.62048319785646, 416.62048319785646);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals((-1L), statisticalSummaryValues1.getN());
      assertEquals(416.62048319785646, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-165.75187), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(416.62048319785646, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(416.62048319785646, statisticalSummaryValues1.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getVariance(), 0.01);
      assertFalse(boolean0);
      assertEquals(416.62048319785646, statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), 0.0, 0L, 0L, 0L, 0.0);
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 0.0, 0L, 0L, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(450.72091494941463, 450.72091494941463, (-2464L), 450.72091494941463, (-2464L), (-2464L));
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues((-2464L), 450.72091494941463, (-2464L), (-2464L), 450.72091494941463, (-2464L));
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals(450.72091494941463, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals((-2464.0), statisticalSummaryValues1.getMax(), 0.01);
      assertEquals(450.72091494941463, statisticalSummaryValues1.getVariance(), 0.01);
      assertFalse(boolean0);
      assertEquals((-2464.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-2464.0), statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(450.72091494941463, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(450.72091494941463, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(450.72091494941463, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-2464.0), statisticalSummaryValues1.getMean(), 0.01);
      assertEquals((-2464L), statisticalSummaryValues1.getN());
      assertEquals((-2464.0), statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      Object object0 = new Object();
      boolean boolean0 = statisticalSummaryValues0.equals(object0);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(1L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues0);
      assertEquals(1L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 1.0, 0L, 0.0, 0L, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      assertEquals(1L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 1L, 0.0, 0.0, 0.0);
      String string0 = statisticalSummaryValues0.toString();
      assertEquals("StatisticalSummaryValues:\nn: 1\nmin: 0.0\nmax: 0.0\nmean: 0.0\nstd dev: 0.0\nvariance: 0.0\nsum: 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), 0.0, 0L, 0L, 0L, 0.0);
      statisticalSummaryValues0.hashCode();
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
  }
}
