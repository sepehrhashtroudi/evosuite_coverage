/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 04:37:07 GMT 2022
 */

package org.apache.commons.math3.stat.descriptive.moment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;
import org.apache.commons.math3.stat.descriptive.moment.FourthMoment;
import org.apache.commons.math3.stat.descriptive.moment.GeometricMean;
import org.apache.commons.math3.stat.descriptive.moment.Variance;
import org.apache.commons.math3.stat.descriptive.summary.SumOfLogs;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeometricMean_ESTest extends GeometricMean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      double[] doubleArray0 = new double[0];
      double double0 = geometricMean0.evaluate(doubleArray0, 0, 0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      double[] doubleArray0 = new double[4];
      doubleArray0[3] = (-709.2);
      GeometricMean geometricMean1 = new GeometricMean(geometricMean0);
      geometricMean1.incrementAll(doubleArray0);
      boolean boolean0 = geometricMean1.equals(geometricMean0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      geometricMean0.setSumLogImpl((StorelessUnivariateStatistic) null);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = geometricMean0.getSumLogImpl();
      assertNull(storelessUnivariateStatistic0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      geometricMean0.increment(3464.53749);
      double double0 = geometricMean0.getResult();
      assertEquals(3464.5374900000006, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      long long0 = geometricMean0.getN();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      geometricMean0.increment(0.0);
      long long0 = geometricMean0.getN();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SumOfLogs sumOfLogs0 = new SumOfLogs();
      GeometricMean geometricMean0 = new GeometricMean(sumOfLogs0);
      double[] doubleArray0 = new double[1];
      double double0 = geometricMean0.evaluate(doubleArray0, 0, 1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SumOfLogs sumOfLogs0 = new SumOfLogs();
      GeometricMean geometricMean0 = new GeometricMean(sumOfLogs0);
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = 3.46586694799214E-8;
      double double0 = geometricMean0.evaluate(doubleArray0, 1, 1);
      assertEquals(3.4658669479921446E-8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      geometricMean0.increment(0.0);
      GeometricMean geometricMean1 = geometricMean0.copy();
      assertEquals(1L, geometricMean1.getN());
      assertNotSame(geometricMean1, geometricMean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      // Undeclared exception!
      try { 
        geometricMean0.setSumLogImpl((StorelessUnivariateStatistic) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      // Undeclared exception!
      try { 
        geometricMean0.increment(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      geometricMean0.setSumLogImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        geometricMean0.getResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      double[] doubleArray0 = new double[2];
      try { 
        geometricMean0.evaluate(doubleArray0, 2956, 2956);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      try { 
        geometricMean0.evaluate((double[]) null, (-4830), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
      try { 
        geometricMean0.evaluate(doubleArray0, 1160, 4308);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SumOfLogs sumOfLogs0 = new SumOfLogs();
      GeometricMean geometricMean0 = new GeometricMean(sumOfLogs0);
      try { 
        GeometricMean.copy(geometricMean0, (GeometricMean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      // Undeclared exception!
      try { 
        GeometricMean.copy(geometricMean0, geometricMean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      // Undeclared exception!
      try { 
        geometricMean0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      // Undeclared exception!
      try { 
        geometricMean0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GeometricMean geometricMean0 = null;
      try {
        geometricMean0 = new GeometricMean((GeometricMean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      GeometricMean geometricMean1 = null;
      try {
        geometricMean1 = new GeometricMean(geometricMean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      geometricMean0.increment(0.0);
      double double0 = geometricMean0.getResult();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      GeometricMean.copy(geometricMean0, geometricMean0);
      assertEquals(0L, geometricMean0.getN());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      FourthMoment fourthMoment0 = new FourthMoment();
      geometricMean0.increment(1650.543486);
      Variance variance0 = new Variance(false, fourthMoment0);
      try { 
        geometricMean0.setSumLogImpl(variance0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      double double0 = geometricMean0.getResult();
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      double[] doubleArray0 = new double[4];
      geometricMean0.incrementAll(doubleArray0);
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = geometricMean0.getSumLogImpl();
      assertEquals(4L, storelessUnivariateStatistic0.getN());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = geometricMean0.getSumLogImpl();
      assertEquals(0.0, storelessUnivariateStatistic0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      geometricMean0.clear();
      assertEquals(0L, geometricMean0.getN());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      GeometricMean geometricMean1 = geometricMean0.copy();
      assertNotSame(geometricMean1, geometricMean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean();
      double[] doubleArray0 = new double[3];
      try { 
        geometricMean0.evaluate(doubleArray0, (-1187), 932);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // start position (-1,187)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GeometricMean geometricMean0 = new GeometricMean((SumOfLogs) null);
      // Undeclared exception!
      try { 
        geometricMean0.getN();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.descriptive.moment.GeometricMean", e);
      }
  }
}
