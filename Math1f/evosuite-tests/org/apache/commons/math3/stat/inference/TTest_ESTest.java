/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 05:23:05 GMT 2022
 */

package org.apache.commons.math3.stat.inference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;
import org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;
import org.apache.commons.math3.stat.descriptive.StatisticalSummary;
import org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues;
import org.apache.commons.math3.stat.descriptive.SummaryStatistics;
import org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;
import org.apache.commons.math3.stat.inference.TTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TTest_ESTest extends TTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      DescriptiveStatistics descriptiveStatistics1 = new DescriptiveStatistics(descriptiveStatistics0);
      double double0 = tTest0.homoscedasticTTest((StatisticalSummary) descriptiveStatistics1, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TTest tTest0 = new TTest();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StatisticalSummary statisticalSummary0 = synchronizedSummaryStatistics0.getSummary();
      try { 
        tTest0.homoscedasticTTest(statisticalSummary0, (StatisticalSummary) synchronizedSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      DescriptiveStatistics descriptiveStatistics1 = new DescriptiveStatistics(descriptiveStatistics0);
      double double0 = tTest0.tTest((StatisticalSummary) descriptiveStatistics1, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = new double[6];
      boolean boolean0 = tTest0.tTest(doubleArray0, doubleArray1, 0.5);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TTest tTest0 = new TTest();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      SummaryStatistics summaryStatistics0 = new SummaryStatistics(synchronizedSummaryStatistics0);
      try { 
        tTest0.homoscedasticT((StatisticalSummary) synchronizedSummaryStatistics0, (StatisticalSummary) summaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[4];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      DescriptiveStatistics descriptiveStatistics1 = new DescriptiveStatistics(descriptiveStatistics0);
      double double0 = tTest0.t((StatisticalSummary) descriptiveStatistics1, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = new double[5];
      try { 
        tTest0.pairedTTest(doubleArray0, doubleArray1, 3.834E-20);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 != 5
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-203.0);
      double double0 = tTest0.tTest(doubleArray0, doubleArray0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2.777777777777778E-5);
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = tTest0.tTest((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      double double0 = tTest0.tTest((-66.413), doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-258.8792311620314);
      double double0 = tTest0.tTest((-6.892713087722722E-8), doubleArray0);
      assertEquals(0.4226497311178157, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TTest tTest0 = new TTest();
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(1588.16, 0.0, 145L, (-1.0), (-2013.1888784143), (-1.0));
      double double0 = tTest0.tTest(4.0, (StatisticalSummary) statisticalSummaryValues0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1.0);
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = tTest0.tTest(37.8750885, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(1.1004002970547289E-15, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.tTest(0.0, 6.0, 6.0, 6.0, 1999.2, (-3202.47921342));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.tTest(1.0, 1.0, 827.4969766041681, 0.0, 0.0, 827.4969766041681);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.tTest(641.320909577409, 641.320909577409, 0.5, 1046.5679);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-203.0);
      double double0 = tTest0.t(doubleArray0, doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 15.1728;
      double[] doubleArray1 = new double[6];
      double double0 = tTest0.t(doubleArray0, doubleArray1);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = new double[8];
      doubleArray1[3] = 1.304E19;
      double double0 = tTest0.t(doubleArray0, doubleArray1);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-66.413);
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = tTest0.t((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[4];
      double double0 = tTest0.t((-3405.93604), doubleArray0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = tTest0.t((-2417.32244731828), (StatisticalSummary) descriptiveStatistics0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TTest tTest0 = new TTest();
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.5450005531311035, 1827.4072, 9L, 1.0, Double.NaN, (-3.881598887298574E-9));
      double double0 = tTest0.t(727.28, (StatisticalSummary) statisticalSummaryValues0);
      assertEquals((-51.00111432562428), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.t(0.0, 0.0, 2258.038305798, 2376.717823796032, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.t(1012.0, (-2.9020908354550263E-153), 746.174523438756, 2.0, 1.0770423412322998, 0.3559176723344868);
      assertEquals(38.29327601568072, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.t((-2668.98), (-126.311038), 1784.746, (-3705.6268), 1784.746, (-2668.98));
      assertEquals((-1645.2647029450425), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.t(15.1728, 15.1728, 15.1728, 15.1728);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.t((-2145.128319509581), 3073.456064476917, 0.0, 3073.456064476917);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1.70164513845372E-8;
      double[] doubleArray1 = new double[9];
      double double0 = tTest0.pairedTTest(doubleArray0, doubleArray1);
      assertEquals(0.34659350708733416, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      doubleArray0[2] = 0.6553317308425903;
      double[] doubleArray1 = new double[5];
      double double0 = tTest0.pairedT(doubleArray0, doubleArray1);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 15.1728;
      double double0 = tTest0.homoscedasticTTest(doubleArray0, doubleArray0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1.0);
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = tTest0.homoscedasticTTest((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.homoscedasticTTest((-510.067), 1819.994, 2155.83, 2155.83, 2155.83, 2155.83);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-461.0);
      double double0 = tTest0.homoscedasticT(doubleArray0, doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 3334.369153;
      double[] doubleArray1 = new double[8];
      double double0 = tTest0.homoscedasticT(doubleArray0, doubleArray1);
      assertEquals(1.0000000000000002, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[9];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 100.0;
      double double0 = tTest0.homoscedasticT(doubleArray0, doubleArray1);
      assertEquals((-1.3887301496588274), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      doubleArray0[2] = 1201.6699;
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = tTest0.homoscedasticT((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.homoscedasticT(0.0, 0.0, 0.5, 0.5, 0.0, 1039.746400383);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.homoscedasticT(1.0, (-1.0), 0.5, 0.0, 1562.1808820262718, 2066.2828249);
      assertEquals(128.57578944415062, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.df(0.0, 3.834E-20, (-1.0), 324.78760936667);
      assertEquals(323.78760936667004, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.df(2821.202060747, 2821.202060747, (-113.29), (-113.29));
      assertEquals((-228.57999999999998), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[0];
      try { 
        tTest0.tTest(doubleArray0, doubleArray0, (-1009.208331));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (-1,009.208)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.tTest((double[]) null, (double[]) null, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[1];
      try { 
        tTest0.tTest(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      try { 
        tTest0.tTest((double[]) null, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.tTest((StatisticalSummary) null, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[1];
      try { 
        tTest0.tTest((-1.0), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.tTest((-4520.35), (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TTest tTest0 = new TTest();
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      try { 
        tTest0.tTest(3.834E-20, (StatisticalSummary) summaryStatistics0, 50.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (50)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.tTest(3962.13746831271, (StatisticalSummary) null, 6.305116324200775E-16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TTest tTest0 = new TTest();
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics((double[]) null);
      try { 
        tTest0.tTest(0.5, (StatisticalSummary) descriptiveStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.tTest(1.0, (-486.040754503495), 0.0, (-1073.201417582), 2.0, (-486.040754503495));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-487.041)
         //
         verifyException("org.apache.commons.math3.distribution.TDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.tTest(2899.8412978, 2899.8412978, (-3239.294), (-3239.294));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-3,240.294)
         //
         verifyException("org.apache.commons.math3.distribution.TDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[1];
      try { 
        tTest0.t(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[7];
      try { 
        tTest0.t(doubleArray0, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TTest tTest0 = new TTest();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      try { 
        tTest0.t((StatisticalSummary) synchronizedSummaryStatistics0, (StatisticalSummary) synchronizedSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TTest tTest0 = new TTest();
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-516.54783029159), 0.5, 1679L, 0.5, (-516.54783029159), (-516.54783029159));
      try { 
        tTest0.t((StatisticalSummary) statisticalSummaryValues0, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[1];
      try { 
        tTest0.t(0.0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.t((-3.0287143914420064E-8), (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TTest tTest0 = new TTest();
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      try { 
        tTest0.t(744.415478, (StatisticalSummary) summaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.t((-2069.6660333153154), (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TTest tTest0 = new TTest();
      // Undeclared exception!
      try { 
        tTest0.pairedTTest((double[]) null, (double[]) null, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[1];
      try { 
        tTest0.pairedTTest(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 is smaller than the minimum (2)
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[0];
      try { 
        tTest0.pairedTTest(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient dimension {0}, must be at least {1}
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      try { 
        tTest0.pairedTTest(doubleArray0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[6];
      double[] doubleArray1 = new double[5];
      try { 
        tTest0.pairedT(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6 != 5
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.pairedT((double[]) null, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[1];
      try { 
        tTest0.homoscedasticTTest(doubleArray0, doubleArray0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (0)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      try { 
        tTest0.homoscedasticTTest((double[]) null, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.homoscedasticTTest((StatisticalSummary) null, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.homoscedasticTTest(1.0, (-520.81403710913), 3172.85, 1.0, (-1.0), 2.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-1)
         //
         verifyException("org.apache.commons.math3.distribution.TDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[4];
      try { 
        tTest0.homoscedasticT(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[7];
      try { 
        tTest0.homoscedasticT((double[]) null, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.homoscedasticT((StatisticalSummary) null, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.homoscedasticT((-614.0), 1.0, 1.0, (-520.81403710913), (-3.8615119304412), 447.0);
      assertEquals((-52.89467983027737), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.tTest(0.0, (-459.599), 1.304E19, 1.304E19);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.t((-203.0), (-709.841317), (-709.841317), (-709.841317));
      assertEquals(506.841317, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      TTest tTest0 = new TTest();
      try { 
        tTest0.tTest(0.0, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      try { 
        tTest0.tTest((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) null, 0.14179790019989014);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      TTest tTest0 = new TTest();
      try { 
        tTest0.homoscedasticTTest(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[8];
      try { 
        tTest0.homoscedasticTTest((double[]) null, doubleArray0, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      TTest tTest0 = new TTest();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StatisticalSummary statisticalSummary0 = synchronizedSummaryStatistics0.getSummary();
      try { 
        tTest0.tTest(statisticalSummary0, statisticalSummary0, 2534.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (2,534)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      try { 
        tTest0.tTest((-1160.997528725), doubleArray0, (-1160.997528725));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (-1,160.998)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      boolean boolean0 = tTest0.tTest((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) descriptiveStatistics0, 0.14179790019989014);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      TTest tTest0 = new TTest();
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 1213.58873;
      boolean boolean0 = tTest0.homoscedasticTTest(doubleArray1, doubleArray0, 0.5);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      TTest tTest0 = new TTest();
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.5, 0.5, 4L, 0.5, 373.45787601558396, 0.5);
      boolean boolean0 = tTest0.tTest(1.0, (StatisticalSummary) statisticalSummaryValues0, 0.5);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[5];
      boolean boolean0 = tTest0.tTest((-2.777777777777778E-5), doubleArray0, 0.14179790019989014);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[9];
      boolean boolean0 = tTest0.tTest(1.34217729E8, doubleArray0, Double.NaN);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[2];
      boolean boolean0 = tTest0.homoscedasticTTest(doubleArray0, doubleArray0, 0.4748031662967104);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      TTest tTest0 = new TTest();
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(synchronizedSummaryStatistics0, synchronizedSummaryStatistics0);
      try { 
        tTest0.tTest((StatisticalSummary) aggregateSummaryStatistics0, (StatisticalSummary) synchronizedSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      TTest tTest0 = new TTest();
      double double0 = tTest0.homoscedasticTTest(1916.58538453205, 1916.58538453205, 1916.58538453205, 821.0654133, 1916.58538453205, 0.7423713698305783);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[4];
      double double0 = tTest0.t(1.0, doubleArray0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      TTest tTest0 = new TTest();
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.5, (-1160.997528725), 4L, (-1160.997528725), 373.45787601558396, (-1160.997528725));
      boolean boolean0 = tTest0.tTest(1.0, (StatisticalSummary) statisticalSummaryValues0, 0.5);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      TTest tTest0 = new TTest();
      double[] doubleArray0 = new double[9];
      boolean boolean0 = tTest0.pairedTTest(doubleArray0, doubleArray0, 6.305116324200775E-16);
      assertFalse(boolean0);
  }
}
