/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 05:26:14 GMT 2022
 */

package org.apache.commons.math3.stat.inference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;
import org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;
import org.apache.commons.math3.stat.descriptive.StatisticalSummary;
import org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues;
import org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;
import org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;
import org.apache.commons.math3.stat.inference.TestUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestUtils_ESTest extends TestUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      long[] longArray0 = new long[8];
      long[] longArray1 = new long[1];
      try { 
        TestUtils.gTestDataSetsComparison(longArray0, longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8 != 1
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      long[] longArray0 = new long[2];
      long[] longArray1 = new long[9];
      try { 
        TestUtils.gDataSetsComparison(longArray0, longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 != 9
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      long[] longArray0 = new long[6];
      long[] longArray1 = new long[6];
      try { 
        TestUtils.chiSquareTestDataSetsComparison(longArray1, longArray0, (double) 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level 0, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      long[] longArray0 = new long[3];
      long[] longArray1 = new long[6];
      try { 
        TestUtils.chiSquareTestDataSetsComparison(longArray0, longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 != 6
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      long[] longArray0 = new long[0];
      long[] longArray1 = new long[9];
      try { 
        TestUtils.chiSquareDataSetsComparison(longArray0, longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 2
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SynchronizedDescriptiveStatistics synchronizedDescriptiveStatistics0 = new SynchronizedDescriptiveStatistics();
      SynchronizedDescriptiveStatistics synchronizedDescriptiveStatistics1 = new SynchronizedDescriptiveStatistics(synchronizedDescriptiveStatistics0);
      try { 
        TestUtils.tTest((StatisticalSummary) synchronizedDescriptiveStatistics1, (StatisticalSummary) synchronizedDescriptiveStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[4];
      double double0 = TestUtils.tTest(doubleArray0, doubleArray1);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[2];
      try { 
        TestUtils.tTest(doubleArray0, doubleArray1, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (0)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      try { 
        TestUtils.tTest(1.304E19, (StatisticalSummary) aggregateSummaryStatistics0, 6.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (6)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StatisticalSummary statisticalSummary0 = synchronizedSummaryStatistics0.getSummary();
      try { 
        TestUtils.t(statisticalSummary0, (StatisticalSummary) synchronizedSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[4];
      try { 
        TestUtils.pairedTTest(doubleArray0, doubleArray1, 1623.4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (1,623.4)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(synchronizedSummaryStatistics0, synchronizedSummaryStatistics0);
      try { 
        TestUtils.homoscedasticTTest((StatisticalSummary) null, (StatisticalSummary) aggregateSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      try { 
        TestUtils.homoscedasticTTest((double[]) null, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = TestUtils.tTest(Double.NaN, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, (-1.8359244902596882E-7), 2L, 0.0, 2L, 1156.885802001);
      double double0 = TestUtils.t((StatisticalSummary) statisticalSummaryValues0, (StatisticalSummary) statisticalSummaryValues0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      linkedList0.add(doubleArray0);
      linkedList0.push(doubleArray0);
      double double0 = TestUtils.oneWayAnovaPValue(linkedList0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      boolean boolean0 = TestUtils.tTest(doubleArray0, doubleArray0, 0.32762742907462616);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 3204.3167875313;
      double double0 = TestUtils.tTest(doubleArray0, doubleArray0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      double[] doubleArray0 = new double[18];
      doubleArray0[0] = 2846.61703814;
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = TestUtils.tTest((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.32762742907462616;
      doubleArray0[1] = 0.32762742907462616;
      boolean boolean0 = TestUtils.tTest(0.0, doubleArray0, 0.32762742907462616);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.5;
      doubleArray0[1] = 0.5;
      doubleArray0[2] = 0.5;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = 0.5;
      doubleArray0[5] = 0.5;
      doubleArray0[6] = 0.5;
      doubleArray0[7] = 0.5;
      doubleArray0[8] = 0.5;
      boolean boolean0 = TestUtils.tTest(0.5, doubleArray0, 0.5);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1135.252580131);
      double double0 = TestUtils.tTest((-1135.252580131), doubleArray0);
      assertEquals(0.016130089900092525, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 22.741931125524793;
      double double0 = TestUtils.t(doubleArray0, doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = (-29.917005975300167);
      double[] doubleArray1 = new double[3];
      double double0 = TestUtils.t(doubleArray1, doubleArray0);
      assertEquals(0.9999999999999998, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = (-1.0);
      double double0 = TestUtils.t(0.0, doubleArray0);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = TestUtils.t(605.107, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      double double0 = TestUtils.rootLogLikelihoodRatio(1430L, 0L, 0L, 348L);
      assertEquals(41.93036142378539, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      double double0 = TestUtils.rootLogLikelihoodRatio(2156L, 1L, 767L, 0L);
      assertEquals((-0.780121779739995), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      boolean boolean0 = TestUtils.pairedTTest(doubleArray0, doubleArray0, 1.0E-5);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = (-1.0);
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      linkedList0.add(doubleArray0);
      linkedList0.push(doubleArray0);
      double double0 = TestUtils.oneWayAnovaFValue(linkedList0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.0;
      double double0 = TestUtils.homoscedasticTTest(doubleArray0, doubleArray0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0;
      double double0 = TestUtils.homoscedasticT(doubleArray0, doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 564.0183217317679;
      double[] doubleArray1 = new double[8];
      double double0 = TestUtils.homoscedasticT(doubleArray0, doubleArray1);
      assertEquals(1.1710800875382397, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = (-2261.192992938);
      double[] doubleArray1 = new double[8];
      double double0 = TestUtils.homoscedasticT(doubleArray0, doubleArray1);
      assertEquals((-1.1710800875382397), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 6.0;
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics(doubleArray0);
      double double0 = TestUtils.homoscedasticT((StatisticalSummary) descriptiveStatistics0, (StatisticalSummary) descriptiveStatistics0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = 1985L;
      longArray0[1] = 1L;
      double double0 = TestUtils.gDataSetsComparison(longArray0, longArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[0] = 2L;
      longArray0[1] = 2L;
      longArray0[2] = 2L;
      longArray0[3] = 2L;
      longArray0[4] = 2L;
      longArray0[5] = 2L;
      longArray0[6] = 2L;
      longArray0[7] = 2L;
      longArray0[8] = 2L;
      double double0 = TestUtils.chiSquareTestDataSetsComparison(longArray0, longArray0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      try { 
        TestUtils.tTest(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StatisticalSummary statisticalSummary0 = synchronizedSummaryStatistics0.getSummary();
      try { 
        TestUtils.tTest(statisticalSummary0, statisticalSummary0, 1473.2114245769928);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (1,473.211)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      try { 
        TestUtils.tTest((StatisticalSummary) null, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      try { 
        TestUtils.tTest(1.304E19, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      try { 
        TestUtils.tTest((-3217.253553040854), (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      try { 
        TestUtils.tTest((-1724.23), (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = new double[1];
      try { 
        TestUtils.t(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      try { 
        TestUtils.t((double[]) null, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      try { 
        TestUtils.t((StatisticalSummary) null, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      try { 
        TestUtils.t(Double.NaN, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      try { 
        TestUtils.t((double) 0L, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-2325.6776), (-2325.6776), (-4368L), (-2325.6776), 1.0, (-4368L));
      try { 
        TestUtils.t((-2325.6776), (StatisticalSummary) statisticalSummaryValues0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got -4,368
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      try { 
        TestUtils.t((-5333.629), (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      try { 
        TestUtils.rootLogLikelihoodRatio(1430L, 0L, 797L, (-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      try { 
        TestUtils.rootLogLikelihoodRatio(0L, 0L, 0L, 8467L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed counts are both zero for entry 0
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[8];
      try { 
        TestUtils.pairedTTest(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4 != 8
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      try { 
        TestUtils.pairedTTest(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient dimension {0}, must be at least {1}
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.pairedTTest((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[6];
      try { 
        TestUtils.pairedT(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4 != 6
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      try { 
        TestUtils.pairedT((double[]) null, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      try { 
        TestUtils.oneWayAnovaPValue((Collection<double[]>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      linkedList0.add((double[]) null);
      // Undeclared exception!
      try { 
        TestUtils.oneWayAnovaPValue(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      try { 
        TestUtils.oneWayAnovaFValue((Collection<double[]>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      linkedList0.add((double[]) null);
      // Undeclared exception!
      try { 
        TestUtils.oneWayAnovaFValue(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      try { 
        TestUtils.homoscedasticTTest(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      try { 
        TestUtils.homoscedasticTTest((StatisticalSummary) synchronizedSummaryStatistics0, (StatisticalSummary) synchronizedSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      try { 
        TestUtils.homoscedasticT((double[]) null, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      try { 
        TestUtils.homoscedasticT((StatisticalSummary) null, (StatisticalSummary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[6];
      try { 
        TestUtils.gTestIntrinsic(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8 != 6
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        TestUtils.gTestIntrinsic(doubleArray0, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      long[] longArray0 = new long[3];
      try { 
        TestUtils.gTestDataSetsComparison(longArray0, longArray0, 4.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level 4, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[4] = (-3830L);
      try { 
        TestUtils.gTestDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3,830 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        TestUtils.gTestDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // shape (0)
         //
         verifyException("org.apache.commons.math3.distribution.GammaDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      long[] longArray0 = new long[6];
      try { 
        TestUtils.gTest(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 6
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        TestUtils.gTest(doubleArray0, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[1] = (-3738L);
      try { 
        TestUtils.gDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3,738 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      long[] longArray0 = new long[7];
      try { 
        TestUtils.g(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      long[] longArray0 = new long[6];
      // Undeclared exception!
      try { 
        TestUtils.g((double[]) null, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[5] = (-1L);
      try { 
        TestUtils.chiSquareTestDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        TestUtils.chiSquareTestDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // shape (-0.5)
         //
         verifyException("org.apache.commons.math3.distribution.GammaDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.chiSquareTestDataSetsComparison((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      try { 
        TestUtils.chiSquareTest((long[][]) null, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level 0, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[2] = (-1069L);
      long[][] longArray1 = new long[8][6];
      longArray1[0] = longArray0;
      longArray1[1] = longArray0;
      longArray1[2] = longArray0;
      longArray1[3] = longArray0;
      longArray1[4] = longArray0;
      longArray1[5] = longArray0;
      longArray1[6] = longArray0;
      longArray1[7] = longArray0;
      try { 
        TestUtils.chiSquareTest(longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,069 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      long[][] longArray0 = new long[1][1];
      try { 
        TestUtils.chiSquareTest(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 2
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.chiSquareTest((long[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      long[] longArray0 = new long[7];
      try { 
        TestUtils.chiSquareTest(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6 != 7
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        TestUtils.chiSquareTest(doubleArray0, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[2] = (-2501L);
      try { 
        TestUtils.chiSquareDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2,501 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.chiSquareDataSetsComparison((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      long[][] longArray0 = new long[5][3];
      long[] longArray1 = new long[8];
      longArray0[1] = longArray1;
      try { 
        TestUtils.chiSquare(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // some rows have length 8 while others have length 3
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.chiSquare((long[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      long[] longArray0 = new long[9];
      try { 
        TestUtils.chiSquare(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 9
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      long[] longArray0 = new long[9];
      // Undeclared exception!
      try { 
        TestUtils.chiSquare((double[]) null, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.gDataSetsComparison((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      double double0 = TestUtils.rootLogLikelihoodRatio(2L, 1128L, 2L, 1128L);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      try { 
        TestUtils.oneWayAnovaTest(linkedList0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level -1, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.chiSquareTest((long[][]) null, Double.NaN);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      long[] longArray0 = new long[3];
      try { 
        TestUtils.g(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6 != 3
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      long[] longArray0 = new long[7];
      try { 
        TestUtils.gTest(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // shape (0)
         //
         verifyException("org.apache.commons.math3.distribution.GammaDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = TestUtils.tTest((-1.0), doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      long[][] longArray0 = new long[8][6];
      double double0 = TestUtils.chiSquareTest(longArray0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      double[] doubleArray0 = new double[21];
      double double0 = TestUtils.pairedTTest(doubleArray0, doubleArray0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      long[][] longArray0 = new long[5][3];
      double double0 = TestUtils.chiSquare(longArray0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      long[] longArray0 = new long[4];
      try { 
        TestUtils.chiSquare(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      long[] longArray0 = new long[9];
      try { 
        TestUtils.chiSquareTest(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // shape (-0.5)
         //
         verifyException("org.apache.commons.math3.distribution.GammaDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DescriptiveStatistics descriptiveStatistics0 = new DescriptiveStatistics();
      try { 
        TestUtils.tTest(0.0, (StatisticalSummary) descriptiveStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      try { 
        TestUtils.pairedTTest(doubleArray0, doubleArray0, 8.042275310036546E-198);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient dimension {0}, must be at least {1}
         //
         verifyException("org.apache.commons.math3.stat.StatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = TestUtils.t((-1.0), doubleArray0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      try { 
        TestUtils.homoscedasticTTest(doubleArray0, (double[]) null, 202.6378583997);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (202.638)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      try { 
        TestUtils.tTest(1160.55922549, doubleArray0, 1160.55922549);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // significance level (1,160.559)
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        TestUtils.gTestDataSetsComparison(longArray0, longArray0, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // shape (-0.5)
         //
         verifyException("org.apache.commons.math3.distribution.GammaDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      long[] longArray0 = new long[3];
      try { 
        TestUtils.gTest(doubleArray0, longArray0, 1358.073716225442);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level 1,358.074, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SynchronizedSummaryStatistics synchronizedSummaryStatistics0 = new SynchronizedSummaryStatistics();
      StatisticalSummary statisticalSummary0 = synchronizedSummaryStatistics0.getSummary();
      try { 
        TestUtils.homoscedasticT(statisticalSummary0, (StatisticalSummary) synchronizedSummaryStatistics0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data for t statistic, needs at least 2, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      try { 
        TestUtils.oneWayAnovaPValue(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // two or more categories required, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = TestUtils.pairedT(doubleArray0, doubleArray0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestUtils.gTestDataSetsComparison((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.GTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      long[] longArray0 = new long[7];
      try { 
        TestUtils.gTestIntrinsic(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // shape (-0.5)
         //
         verifyException("org.apache.commons.math3.distribution.GammaDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      long[] longArray0 = new long[9];
      try { 
        TestUtils.chiSquareTest(doubleArray0, longArray0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level 0, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.ChiSquareTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      try { 
        TestUtils.oneWayAnovaFValue(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // two or more categories required, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, (-1.8359244902596882E-7), 2L, 0.0, 2L, 1156.885802001);
      try { 
        TestUtils.tTest((StatisticalSummary) null, (StatisticalSummary) statisticalSummaryValues0, Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.stat.inference.TTest", e);
      }
  }
}
