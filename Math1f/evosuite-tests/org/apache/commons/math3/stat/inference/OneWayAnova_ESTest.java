/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 05:29:41 GMT 2022
 */

package org.apache.commons.math3.stat.inference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.math3.stat.descriptive.SummaryStatistics;
import org.apache.commons.math3.stat.inference.OneWayAnova;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OneWayAnova_ESTest extends OneWayAnova_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<SummaryStatistics> linkedList0 = new LinkedList<SummaryStatistics>();
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      linkedList0.addLast(summaryStatistics0);
      linkedList0.addLast(summaryStatistics0);
      try { 
        oneWayAnova0.anovaPValue((Collection<SummaryStatistics>) linkedList0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // two or more values required in each category, one has 0
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[8];
      linkedList0.add(doubleArray0);
      linkedList0.add(doubleArray0);
      linkedList0.add(doubleArray0);
      double double0 = oneWayAnova0.anovaPValue((Collection<double[]>) linkedList0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-4752.419175761042);
      linkedList0.add(doubleArray0);
      double[] doubleArray1 = new double[8];
      linkedList0.add(doubleArray1);
      boolean boolean0 = oneWayAnova0.anovaTest(linkedList0, 0.03526520347508);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      try { 
        oneWayAnova0.anovaTest(linkedList0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level 0, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-4752.419175761042);
      linkedList0.add(doubleArray0);
      linkedList0.add(doubleArray0);
      double double0 = oneWayAnova0.anovaPValue((Collection<double[]>) linkedList0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-250.4332681669605);
      linkedList0.add(doubleArray0);
      linkedList0.add(doubleArray0);
      double double0 = oneWayAnova0.anovaFValue(linkedList0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[2];
      linkedList0.add(doubleArray1);
      doubleArray0[2] = 0.16688959581639706;
      linkedList0.add(doubleArray0);
      double double0 = oneWayAnova0.anovaFValue(linkedList0);
      assertEquals(0.44444444444444503, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaTest((Collection<double[]>) null, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      linkedList0.add((double[]) null);
      // Undeclared exception!
      try { 
        oneWayAnova0.anovaTest(linkedList0, Double.NaN);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<SummaryStatistics> linkedList0 = new LinkedList<SummaryStatistics>();
      try { 
        oneWayAnova0.anovaPValue((Collection<SummaryStatistics>) linkedList0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // two or more categories required, got 0
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaPValue((Collection<SummaryStatistics>) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<SummaryStatistics> linkedList0 = new LinkedList<SummaryStatistics>();
      linkedList0.add((SummaryStatistics) null);
      // Undeclared exception!
      try { 
        oneWayAnova0.anovaPValue((Collection<SummaryStatistics>) linkedList0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaPValue((Collection<double[]>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      linkedList0.add((double[]) null);
      // Undeclared exception!
      try { 
        oneWayAnova0.anovaPValue((Collection<double[]>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      linkedList0.add((double[]) null);
      // Undeclared exception!
      try { 
        oneWayAnova0.anovaFValue(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[1];
      linkedList0.offer(doubleArray0);
      linkedList0.add(doubleArray0);
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaPValue((Collection<double[]>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // two or more values required in each category, one has 1
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[2];
      linkedList0.add(doubleArray1);
      doubleArray0[2] = 0.16688959581639706;
      doubleArray0[3] = 0.16688959581639706;
      linkedList0.add(doubleArray0);
      boolean boolean0 = oneWayAnova0.anovaTest(linkedList0, 0.5);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[2];
      linkedList0.add(doubleArray0);
      linkedList0.add(doubleArray0);
      boolean boolean0 = oneWayAnova0.anovaTest(linkedList0, 0.03526520347508);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      try { 
        oneWayAnova0.anovaTest(linkedList0, 2397.667752892);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level 2,397.668, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      try { 
        oneWayAnova0.anovaTest(linkedList0, (-4751.893891428441));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out of bounds significance level -4,751.894, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<double[]> linkedList0 = new LinkedList<double[]>();
      double[] doubleArray0 = new double[4];
      linkedList0.add(doubleArray0);
      try { 
        oneWayAnova0.anovaFValue(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // two or more categories required, got 1
         //
         verifyException("org.apache.commons.math3.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      LinkedList<SummaryStatistics> linkedList0 = new LinkedList<SummaryStatistics>();
      // Undeclared exception!
      try { 
        oneWayAnova0.anovaPValue((Collection<SummaryStatistics>) linkedList0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-1)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaFValue((Collection<double[]>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }
}
