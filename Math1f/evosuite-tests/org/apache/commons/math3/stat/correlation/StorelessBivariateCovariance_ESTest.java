/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 05:00:00 GMT 2022
 */

package org.apache.commons.math3.stat.correlation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StorelessBivariateCovariance_ESTest extends StorelessBivariateCovariance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance();
      storelessBivariateCovariance0.increment((-202.9664), (-202.9664));
      storelessBivariateCovariance0.increment(1.0, 1.0);
      storelessBivariateCovariance0.append(storelessBivariateCovariance0);
      double double0 = storelessBivariateCovariance0.getResult();
      assertEquals(4.0, storelessBivariateCovariance0.getN(), 0.01);
      assertEquals(13867.43077632, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance();
      StorelessBivariateCovariance storelessBivariateCovariance1 = new StorelessBivariateCovariance();
      storelessBivariateCovariance0.increment((-202.9664), (-202.9664));
      storelessBivariateCovariance1.append(storelessBivariateCovariance0);
      assertEquals(1.0, storelessBivariateCovariance1.getN(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance(false);
      storelessBivariateCovariance0.increment(0.0, 3006.8390970297);
      StorelessBivariateCovariance storelessBivariateCovariance1 = new StorelessBivariateCovariance(false);
      storelessBivariateCovariance0.append(storelessBivariateCovariance1);
      assertEquals(1.0, storelessBivariateCovariance0.getN(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance();
      StorelessBivariateCovariance storelessBivariateCovariance1 = new StorelessBivariateCovariance();
      storelessBivariateCovariance0.append(storelessBivariateCovariance1);
      assertEquals(0.0, storelessBivariateCovariance0.getN(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance(false);
      storelessBivariateCovariance0.increment(0.0, 3006.8390970297);
      storelessBivariateCovariance0.increment((-48.427787), 0.0);
      double double0 = storelessBivariateCovariance0.getResult();
      assertEquals(2.0, storelessBivariateCovariance0.getN(), 0.01);
      assertEquals(36403.64083355667, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance(false);
      storelessBivariateCovariance0.increment(0.0, 0.0);
      storelessBivariateCovariance0.increment(214.71, (-1.0));
      double double0 = storelessBivariateCovariance0.getResult();
      assertEquals(2.0, storelessBivariateCovariance0.getN(), 0.01);
      assertEquals((-53.6775), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance(false);
      storelessBivariateCovariance0.increment(31.5394131167948, 31.5394131167948);
      double double0 = storelessBivariateCovariance0.getN();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance(false);
      // Undeclared exception!
      try { 
        storelessBivariateCovariance0.append((StorelessBivariateCovariance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance(false);
      storelessBivariateCovariance0.increment(31.5394131167948, 31.5394131167948);
      storelessBivariateCovariance0.increment(31.5394131167948, 31.5394131167948);
      double double0 = storelessBivariateCovariance0.getResult();
      assertEquals(2.0, storelessBivariateCovariance0.getN(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance();
      try { 
        storelessBivariateCovariance0.getResult();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient dimension 0, must be at least 2
         //
         verifyException("org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StorelessBivariateCovariance storelessBivariateCovariance0 = new StorelessBivariateCovariance(false);
      double double0 = storelessBivariateCovariance0.getN();
      assertEquals(0.0, double0, 0.01);
  }
}
