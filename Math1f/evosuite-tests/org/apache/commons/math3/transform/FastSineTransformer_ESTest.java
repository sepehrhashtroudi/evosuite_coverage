/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 05:33:04 GMT 2022
 */

package org.apache.commons.math3.transform;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.Identity;
import org.apache.commons.math3.analysis.function.Inverse;
import org.apache.commons.math3.analysis.function.Signum;
import org.apache.commons.math3.analysis.function.Sinc;
import org.apache.commons.math3.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math3.transform.DstNormalization;
import org.apache.commons.math3.transform.FastSineTransformer;
import org.apache.commons.math3.transform.TransformType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastSineTransformer_ESTest extends FastSineTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 3561.8475;
      TransformType transformType0 = TransformType.INVERSE;
      // Undeclared exception!
      try { 
        fastSineTransformer0.transform(doubleArray0, transformType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first element is not 0: 3,561.847
         //
         verifyException("org.apache.commons.math3.transform.FastSineTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.ORTHOGONAL_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      Signum signum0 = new Signum();
      TransformType transformType0 = TransformType.INVERSE;
      double[] doubleArray0 = fastSineTransformer0.transform((UnivariateFunction) signum0, (double) 2, 1835.7, 2, transformType0);
      assertArrayEquals(new double[] {0.0, 1.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.ORTHOGONAL_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = fastSineTransformer0.fst(doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, -0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[3];
      TransformType transformType0 = TransformType.FORWARD;
      // Undeclared exception!
      try { 
        fastSineTransformer0.transform(doubleArray0, transformType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 is not a power of 2, consider padding for fix
         //
         verifyException("org.apache.commons.math3.transform.FastSineTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      TransformType transformType0 = TransformType.FORWARD;
      // Undeclared exception!
      try { 
        fastSineTransformer0.transform((double[]) null, transformType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.transform.FastSineTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.ORTHOGONAL_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[8];
      doubleArray0[5] = 1079.345963;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      TransformType transformType0 = TransformType.INVERSE;
      // Undeclared exception!
      fastSineTransformer0.transform((UnivariateFunction) polynomialFunction0, (-0.7853981633974483), 1079.345963, 1880, transformType0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      Sinc sinc0 = new Sinc();
      TransformType transformType0 = TransformType.FORWARD;
      // Undeclared exception!
      try { 
        fastSineTransformer0.transform((UnivariateFunction) sinc0, 3.4439717236742845E-8, 17.4728, 0, transformType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of sample is not positive: 0
         //
         verifyException("org.apache.commons.math3.analysis.FunctionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      TransformType transformType0 = TransformType.INVERSE;
      // Undeclared exception!
      try { 
        fastSineTransformer0.transform((UnivariateFunction) null, 0.0, 5843.0, 275, transformType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.FunctionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      // Undeclared exception!
      try { 
        fastSineTransformer0.fst((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.transform.FastSineTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[8];
      TransformType transformType0 = TransformType.INVERSE;
      double[] doubleArray1 = fastSineTransformer0.transform(doubleArray0, transformType0);
      assertArrayEquals(new double[] {0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.ORTHOGONAL_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1.0);
      try { 
        fastSineTransformer0.fst(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first element is not 0: -1
         //
         verifyException("org.apache.commons.math3.transform.FastSineTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[1];
      TransformType transformType0 = TransformType.FORWARD;
      double[] doubleArray1 = fastSineTransformer0.transform(doubleArray0, transformType0);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.ORTHOGONAL_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      double[] doubleArray0 = new double[2];
      TransformType transformType0 = TransformType.INVERSE;
      double[] doubleArray1 = fastSineTransformer0.transform(doubleArray0, transformType0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.STANDARD_DST_I;
      TransformType transformType0 = TransformType.INVERSE;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      Inverse inverse0 = new Inverse();
      // Undeclared exception!
      try { 
        fastSineTransformer0.transform((UnivariateFunction) inverse0, (-3724.760555), (-4.9E-324), 3369, transformType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3,369 is not a power of 2, consider padding for fix
         //
         verifyException("org.apache.commons.math3.transform.FastSineTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DstNormalization dstNormalization0 = DstNormalization.ORTHOGONAL_DST_I;
      FastSineTransformer fastSineTransformer0 = new FastSineTransformer(dstNormalization0);
      Identity identity0 = new Identity();
      TransformType transformType0 = TransformType.INVERSE;
      // Undeclared exception!
      try { 
        fastSineTransformer0.transform((UnivariateFunction) identity0, (-1046.839392262), (-1046.839392262), 212, transformType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,046.839 is larger than, or equal to, the maximum (-1,046.839)
         //
         verifyException("org.apache.commons.math3.analysis.FunctionUtils", e);
      }
  }
}
