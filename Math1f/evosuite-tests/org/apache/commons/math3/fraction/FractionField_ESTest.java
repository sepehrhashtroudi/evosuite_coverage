/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 04:03:33 GMT 2022
 */

package org.apache.commons.math3.fraction;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.FieldElement;
import org.apache.commons.math3.fraction.Fraction;
import org.apache.commons.math3.fraction.FractionField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FractionField_ESTest extends FractionField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FractionField fractionField0 = FractionField.getInstance();
      Fraction fraction0 = fractionField0.getOne();
      assertEquals(1L, fraction0.longValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FractionField fractionField0 = FractionField.getInstance();
      Fraction fraction0 = fractionField0.getZero();
      assertEquals(0, fraction0.getNumerator());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FractionField fractionField0 = FractionField.getInstance();
      Class<? extends FieldElement<Fraction>> class0 = fractionField0.getRuntimeClass();
      assertFalse(class0.isPrimitive());
  }
}
