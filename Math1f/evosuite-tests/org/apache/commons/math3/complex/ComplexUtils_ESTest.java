/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 04:18:38 GMT 2022
 */

package org.apache.commons.math3.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ComplexUtils_ESTest extends ComplexUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Complex complex0 = ComplexUtils.polar2Complex(Double.NaN, 0.0);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Complex complex0 = ComplexUtils.polar2Complex(Double.POSITIVE_INFINITY, 1016.9074);
      assertEquals((-0.7853981633974483), complex0.getArgument(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Complex complex0 = ComplexUtils.polar2Complex(4255.41, 2106.704774);
      assertEquals(1.8376960948383458, complex0.getArgument(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Complex complex0 = ComplexUtils.polar2Complex(714.136844, 0.0);
      assertEquals(714.136844, complex0.abs(), 0.01);
      assertEquals(0.0, complex0.getArgument(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Complex[] complexArray0 = ComplexUtils.convertToComplex(doubleArray0);
      assertEquals(0, complexArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        ComplexUtils.convertToComplex((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.complex.ComplexUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[13];
      Complex[] complexArray0 = ComplexUtils.convertToComplex(doubleArray0);
      assertEquals(13, complexArray0.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      try { 
        ComplexUtils.polar2Complex((-0.2), 415.4899713203814);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative complex module -0.2
         //
         verifyException("org.apache.commons.math3.complex.ComplexUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Complex complex0 = ComplexUtils.polar2Complex(0.0, 714.136844);
      assertEquals((-3.141592653589793), complex0.getArgument(), 0.01);
      assertEquals(-0.0, complex0.getReal(), 0.01);
  }
}
