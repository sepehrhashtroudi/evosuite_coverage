/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 05:44:26 GMT 2022
 */

package org.apache.commons.math3.random;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.math3.random.ISAACRandom;
import org.apache.commons.math3.random.JDKRandomGenerator;
import org.apache.commons.math3.random.MersenneTwister;
import org.apache.commons.math3.random.RandomAdaptor;
import org.apache.commons.math3.random.RandomGenerator;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well19937a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well44497a;
import org.apache.commons.math3.random.Well44497b;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RandomAdaptor_ESTest extends RandomAdaptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      long long0 = randomAdaptor0.nextLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((int[]) null);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      randomAdaptor0.setSeed(546);
      well19937c0.next(546);
      well19937c0.nextFloat();
      long long0 = randomAdaptor0.nextLong();
      assertEquals(8657796477389494728L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(0);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      long long0 = randomAdaptor0.nextLong();
      assertEquals((-414028722650554365L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      int int0 = randomAdaptor0.nextInt((-32768));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      int int0 = randomAdaptor0.nextInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      randomAdaptor0.setSeed(771L);
      int int0 = randomAdaptor0.nextInt();
      assertEquals(1969685786, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      double double0 = randomAdaptor0.nextGaussian();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      double double0 = randomAdaptor0.nextGaussian();
      assertEquals(0.034803662419047414, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      float float0 = randomAdaptor0.nextFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      double double0 = randomAdaptor0.nextDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      // Undeclared exception!
      try { 
        randomAdaptor0.setSeed((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomGeneratorFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MersenneTwister mersenneTwister0 = new MersenneTwister(139L);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(mersenneTwister0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        randomAdaptor0.setSeed(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.random.MersenneTwister", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(0L);
      well19937a0.index = (-1183);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937a0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextLong();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1183
         //
         verifyException("org.apache.commons.math3.random.Well19937a", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(0L);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497a0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextInt((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.random.BitsStreamGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextInt(2737);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomAdaptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b(4294967295L);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      well44497b0.index = (-3138);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextInt(2420);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3138
         //
         verifyException("org.apache.commons.math3.random.Well44497b", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextInt(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomAdaptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a();
      Random random0 = RandomAdaptor.createAdaptor(well19937a0);
      well19937a0.index = 1168311219;
      // Undeclared exception!
      try { 
        random0.nextInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1168311219
         //
         verifyException("org.apache.commons.math3.random.Well19937a", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextGaussian();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomAdaptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      well44497b0.index = 2534;
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextGaussian();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2534
         //
         verifyException("org.apache.commons.math3.random.Well44497b", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextFloat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomAdaptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[8];
      Well512a well512a0 = new Well512a(intArray0);
      well512a0.index = Integer.MIN_VALUE;
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well512a0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextFloat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483648
         //
         verifyException("org.apache.commons.math3.random.Well512a", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomAdaptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[8];
      Well512a well512a0 = new Well512a(intArray0);
      well512a0.index = Integer.MIN_VALUE;
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well512a0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483648
         //
         verifyException("org.apache.commons.math3.random.Well512a", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Well1024a well1024a0 = new Well1024a();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well1024a0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.BitsStreamGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      well44497b0.index = (-566);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        randomAdaptor0.nextBytes(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -566
         //
         verifyException("org.apache.commons.math3.random.Well44497b", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Random random0 = RandomAdaptor.createAdaptor((RandomGenerator) null);
      // Undeclared exception!
      try { 
        random0.nextBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomAdaptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[1];
      Well44497a well44497a0 = new Well44497a(intArray0);
      well44497a0.index = 2054;
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497a0);
      // Undeclared exception!
      try { 
        randomAdaptor0.nextBoolean();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2054
         //
         verifyException("org.apache.commons.math3.random.Well44497a", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      randomAdaptor0.setSeed(649L);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(0L);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497a0);
      int[] intArray0 = new int[2];
      randomAdaptor0.setSeed(intArray0);
      assertEquals(2, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      int[] intArray0 = new int[16];
      randomAdaptor0.setSeed(intArray0);
      assertEquals(16, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RandomAdaptor randomAdaptor0 = new RandomAdaptor((RandomGenerator) null);
      randomAdaptor0.setSeed(0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Random random0 = RandomAdaptor.createAdaptor((RandomGenerator) null);
      // Undeclared exception!
      try { 
        random0.nextLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.random.RandomAdaptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(iSAACRandom0);
      randomAdaptor0.nextDouble();
      boolean boolean0 = randomAdaptor0.nextBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      int int0 = randomAdaptor0.nextInt();
      assertEquals((-770546522), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(0L);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497a0);
      double double0 = randomAdaptor0.nextGaussian();
      assertEquals((-1.6110286841236128), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      float float0 = randomAdaptor0.nextFloat();
      assertEquals(0.8205931F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      int int0 = randomAdaptor0.nextInt((int) (byte)49);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well44497b0);
      boolean boolean0 = randomAdaptor0.nextBoolean();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
      byte[] byteArray0 = new byte[1];
      randomAdaptor0.nextBytes(byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
  }
}
