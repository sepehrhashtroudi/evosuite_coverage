/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 21:12:13 GMT 2022
 */

package org.apache.commons.math3.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;
import org.apache.commons.math3.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IterativeLinearSolverEvent_ESTest extends IterativeLinearSolverEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("org.apache.commons.math3.analysis.function.Tanh", 0, arrayRealVector0, arrayRealVector0, arrayRealVector0, 0.0);
      boolean boolean0 = defaultIterativeLinearSolverEvent0.providesResidual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double[] doubleArray0 = new Double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("", 220, arrayRealVector0, arrayRealVector0, 2.0);
      boolean boolean0 = defaultIterativeLinearSolverEvent0.providesResidual();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double[] doubleArray0 = new Double[6];
      Double double0 = new Double((-1));
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = doubleArray0[0];
      doubleArray0[4] = doubleArray0[3];
      doubleArray0[5] = doubleArray0[3];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("'h;npRpD01n~RnBU", (-1), (RealVector) null, (RealVector) null, arrayRealVector0, 2320.7031162246217);
      RealVector realVector0 = defaultIterativeLinearSolverEvent0.getSolution();
      assertNull(realVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("org.apache.commons.math3.analysis.function.Tanh", 0, arrayRealVector0, arrayRealVector0, arrayRealVector0, 0.0);
      RealVector realVector0 = defaultIterativeLinearSolverEvent0.getSolution();
      assertSame(realVector0, arrayRealVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double[] doubleArray0 = new Double[6];
      Double double0 = new Double((-1));
      doubleArray0[0] = double0;
      doubleArray0[1] = doubleArray0[0];
      doubleArray0[2] = doubleArray0[0];
      doubleArray0[3] = double0;
      doubleArray0[4] = doubleArray0[2];
      doubleArray0[5] = doubleArray0[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("'h;npRpD01n~RnBU", (-1), (RealVector) null, (RealVector) null, arrayRealVector0, 2320.7031162246217);
      RealVector realVector0 = defaultIterativeLinearSolverEvent0.getRightHandSideVector();
      assertNull(realVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 0, arrayRealVector0, arrayRealVector0, arrayRealVector0, 0);
      RealVector realVector0 = defaultIterativeLinearSolverEvent0.getRightHandSideVector();
      assertFalse(realVector0.isInfinite());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      double[] doubleArray0 = new double[3];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 1642, arrayRealVector0, arrayRealVector0, arrayRealVector0, (-880.5392931706388));
      RealVector realVector0 = defaultIterativeLinearSolverEvent0.getResidual();
      assertFalse(realVector0.isInfinite());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("org.apache.commons.math3.analysis.function.Tanh", 0, arrayRealVector0, arrayRealVector0, arrayRealVector0, 0.0);
      double double0 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double[] doubleArray0 = new Double[6];
      Double double0 = new Double((-1));
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = double0;
      doubleArray0[4] = double0;
      doubleArray0[5] = doubleArray0[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("'h;npRpD01n~RnBU", (-1), (RealVector) null, (RealVector) null, arrayRealVector0, 2320.7031162246217);
      double double1 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals(2320.7031162246217, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, (-411), (RealVector) null, (RealVector) null, (RealVector) null, (-289.37614756));
      double double0 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals((-289.37614756), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      Double[] doubleArray0 = new Double[9];
      Double double0 = new Double(0.0);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = doubleArray0[0];
      doubleArray0[3] = double0;
      doubleArray0[4] = doubleArray0[3];
      doubleArray0[5] = doubleArray0[4];
      doubleArray0[6] = doubleArray0[4];
      doubleArray0[7] = double0;
      doubleArray0[8] = doubleArray0[1];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 1, arrayRealVector0, arrayRealVector0, (-1944.5916));
      // Undeclared exception!
      try { 
        defaultIterativeLinearSolverEvent0.getResidual();
        fail("Expecting exception: MathUnsupportedOperationException");
      
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         verifyException("org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent", e);
      }
  }
}
