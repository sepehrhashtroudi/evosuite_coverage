/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 06:58:22 GMT 2022
 */

package org.apache.commons.math3.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.FieldPosition;
import java.text.Format;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.Locale;
import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.BlockRealMatrix;
import org.apache.commons.math3.linear.DiagonalMatrix;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.linear.RealMatrixFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RealMatrixFormat_ESTest extends RealMatrixFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = RealMatrixFormat.getInstance();
      assertEquals("{", realMatrixFormat0.getPrefix());
      
      realMatrixFormat0.parse("{wx:BY?^|T7-=(B");
      assertEquals("}", realMatrixFormat0.getSuffix());
      assertEquals(",", realMatrixFormat0.getColumnSeparator());
      assertEquals("}", realMatrixFormat0.getRowSuffix());
      assertEquals("{", realMatrixFormat0.getRowPrefix());
      assertEquals(",", realMatrixFormat0.getRowSeparator());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "", "{", "", "lsEF/v-=Ee_>ZH[!");
      String string0 = realMatrixFormat0.getSuffix();
      assertEquals("", realMatrixFormat0.getRowSeparator());
      assertEquals("", string0);
      assertEquals("lsEF/v-=Ee_>ZH[!", realMatrixFormat0.getColumnSeparator());
      assertEquals("{", realMatrixFormat0.getRowSuffix());
      assertEquals("", realMatrixFormat0.getRowPrefix());
      assertEquals("", realMatrixFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("=B%)}}T<#7,", "=B%)}}T<#7,", "=B%)}}T<#7,", (String) null, "", (String) null);
      String string0 = realMatrixFormat0.getRowSuffix();
      assertEquals("=B%)}}T<#7,", realMatrixFormat0.getSuffix());
      assertEquals("", realMatrixFormat0.getRowSeparator());
      assertEquals("=B%)}}T<#7,", realMatrixFormat0.getRowPrefix());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("evaluations", "evaluations", "-<pm.w!*9.HII'DAu", "", "pIP", "WhCY`s!/", numberFormat0);
      String string0 = realMatrixFormat0.getRowSuffix();
      assertFalse(numberFormat0.isGroupingUsed());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "", "", "", "", decimalFormat0);
      realMatrixFormat0.getRowSeparator();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat((String) null, "", (String) null, "", "", "", decimalFormat0);
      realMatrixFormat0.getRowPrefix();
      assertEquals("\u00A4###0.00", decimalFormat0.toPattern());
      assertFalse(decimalFormat0.isGroupingUsed());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "", "", "", "", decimalFormat0);
      realMatrixFormat0.getRowPrefix();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat((String) null, "", (String) null, (String) null, (String) null, (String) null);
      String string0 = realMatrixFormat0.getPrefix();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "PROPAGATION_DIRECTION_MISMATCH", "PROPAGATION_DIRECTION_MISMATCH", "PROPAGATION_DIRECTION_MISMATCH", "PROPAGATION_DIRECTION_MISMATCH", "='gA9Sc");
      String string0 = realMatrixFormat0.getPrefix();
      assertEquals("PROPAGATION_DIRECTION_MISMATCH", realMatrixFormat0.getSuffix());
      assertEquals("", string0);
      assertEquals("PROPAGATION_DIRECTION_MISMATCH", realMatrixFormat0.getRowPrefix());
      assertEquals("='gA9Sc", realMatrixFormat0.getColumnSeparator());
      assertEquals("PROPAGATION_DIRECTION_MISMATCH", realMatrixFormat0.getRowSeparator());
      assertEquals("PROPAGATION_DIRECTION_MISMATCH", realMatrixFormat0.getRowSuffix());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getPercentInstance(locale0);
      decimalFormat0.setMinimumIntegerDigits(0);
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(decimalFormat0);
      realMatrixFormat0.getFormat();
      assertEquals("####%", decimalFormat0.toPattern());
      assertEquals("}", realMatrixFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(decimalFormat0);
      realMatrixFormat0.getFormat();
      assertEquals("\u00A4###0.00", decimalFormat0.toPattern());
      assertEquals("}", realMatrixFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getIntegerInstance(locale0);
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("org.apache.commons.math3.linear.RealMatrixFormat", "org.apache.commons.math3.analysis.function.Rint", "org.apache.commons.math3.analysis.function.Rint", "org.apache.commons.math3.analysis.function.Power", "org.apache.commons.math3.analysis.function.Rint", "org.apache.commons.math3.analysis.function.Rint", decimalFormat0);
      realMatrixFormat0.getFormat();
      assertEquals("###0", decimalFormat0.toLocalizedPattern());
      assertEquals("org.apache.commons.math3.analysis.function.Power", realMatrixFormat0.getRowSuffix());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("b", "b", "", "b", "b", "");
      String string0 = realMatrixFormat0.getColumnSeparator();
      assertEquals("b", realMatrixFormat0.getSuffix());
      assertEquals("b", realMatrixFormat0.getRowSuffix());
      assertEquals("", string0);
      assertEquals("b", realMatrixFormat0.getRowSeparator());
      assertEquals("", realMatrixFormat0.getRowPrefix());
      assertEquals("b", realMatrixFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = new Locale("]m^MF^#-!Fqd_v", "]m^MF^#-!Fqd_v", "]m^MF^#-!Fqd_v");
      RealMatrixFormat realMatrixFormat0 = RealMatrixFormat.getInstance(locale0);
      ParsePosition parsePosition0 = new ParsePosition((-560));
      // Undeclared exception!
      try { 
        realMatrixFormat0.parse("U<+K6-s!+,P_Z", parsePosition0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(numberFormat0);
      ParsePosition parsePosition0 = new ParsePosition((-1098));
      // Undeclared exception!
      try { 
        realMatrixFormat0.parse((String) null, parsePosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat();
      // Undeclared exception!
      try { 
        realMatrixFormat0.parse("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat((String) null, (String) null, "", "", (String) null, "", numberFormat0);
      // Undeclared exception!
      try { 
        realMatrixFormat0.parse("8KJpq'NxuFT=W;+>*B'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealMatrixFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        RealMatrixFormat.getInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = RealMatrixFormat.getInstance();
      double[] doubleArray0 = new double[3];
      DiagonalMatrix diagonalMatrix0 = new DiagonalMatrix(doubleArray0, false);
      RealMatrix realMatrix0 = diagonalMatrix0.createMatrix(743, 743);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      FieldPosition fieldPosition0 = new FieldPosition((Format.Field) null, 5279);
      // Undeclared exception!
      realMatrixFormat0.format(realMatrix0, stringBuffer0, fieldPosition0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "", "{", "", "lsEF/v-=Ee_>ZH[!");
      StringBuffer stringBuffer0 = new StringBuffer(4956);
      FieldPosition fieldPosition0 = new FieldPosition(10);
      // Undeclared exception!
      try { 
        realMatrixFormat0.format((RealMatrix) null, stringBuffer0, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealMatrixFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat();
      double[][] doubleArray0 = new double[3][3];
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(2147483645, 2147483645, doubleArray0, false);
      StringBuffer stringBuffer0 = new StringBuffer(",");
      FieldPosition fieldPosition0 = new FieldPosition(52);
      // Undeclared exception!
      try { 
        realMatrixFormat0.format((RealMatrix) blockRealMatrix0, stringBuffer0, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("PbE>>LV|", "PbE>>LV|", "", "}", "org.apache.commons.math3.linear.RealMatrixFormat", "org.apache.commons.math3.linear.RealMatrixFormat");
      double[] doubleArray0 = new double[8];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(883, 883);
      // Undeclared exception!
      realMatrixFormat0.format(realMatrix0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = null;
      try {
        realMatrixFormat0 = new RealMatrixFormat((NumberFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealMatrixFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = null;
      try {
        realMatrixFormat0 = new RealMatrixFormat("`!tUN", "`!tUN", "`!tUN", "", "]15JRx19x", "L8 0~0r", (NumberFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealMatrixFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "", "{", "", "lsEF/v-=Ee_>ZH[!");
      ParsePosition parsePosition0 = new ParsePosition(0);
      realMatrixFormat0.parse(",", parsePosition0);
      assertEquals("java.text.ParsePosition[index=0,errorIndex=0]", parsePosition0.toString());
      assertEquals("{", realMatrixFormat0.getRowSuffix());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Locale locale0 = new Locale("#Qq'cf;F<eStLYE");
      RealMatrixFormat realMatrixFormat0 = RealMatrixFormat.getInstance(locale0);
      ParsePosition parsePosition0 = new ParsePosition(27);
      realMatrixFormat0.parse("", parsePosition0);
      assertEquals("}", realMatrixFormat0.getRowSuffix());
      assertEquals(",", realMatrixFormat0.getRowSeparator());
      assertEquals("{", realMatrixFormat0.getPrefix());
      assertEquals(",", realMatrixFormat0.getColumnSeparator());
      assertEquals("{", realMatrixFormat0.getRowPrefix());
      assertEquals("}", realMatrixFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      RealMatrixFormat realMatrixFormat0 = RealMatrixFormat.getInstance(locale0);
      double[] doubleArray0 = new double[6];
      DiagonalMatrix diagonalMatrix0 = new DiagonalMatrix(doubleArray0, false);
      StringBuffer stringBuffer0 = new StringBuffer("_9`{p;Q:Zi\"A+>5c");
      FieldPosition fieldPosition0 = new FieldPosition((Format.Field) null, (-1));
      realMatrixFormat0.format((RealMatrix) diagonalMatrix0, stringBuffer0, fieldPosition0);
      assertEquals(101, stringBuffer0.length());
      assertEquals("_9`{p;Q:Zi\"A+>5c{{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0}}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(numberFormat0);
      // Undeclared exception!
      try { 
        realMatrixFormat0.parse("{");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: string \"{\" unparseable (from position 0) as an object of type org.apache.commons.math3.linear.Array2DRowRealMatrix
         //
         verifyException("org.apache.commons.math3.linear.RealMatrixFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "[Ajt", "{", "", "lsEF/v-=Ee_>ZH[!");
      ParsePosition parsePosition0 = new ParsePosition(0);
      realMatrixFormat0.parse("[Ajt", parsePosition0);
      assertEquals(3, parsePosition0.getErrorIndex());
      assertEquals("java.text.ParsePosition[index=0,errorIndex=3]", parsePosition0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "[Ajt", "{", "", "lsEF/v-=Ee_>ZH[!");
      ParsePosition parsePosition0 = new ParsePosition(0);
      realMatrixFormat0.parse(",", parsePosition0);
      assertEquals(0, parsePosition0.getErrorIndex());
      assertEquals("{", realMatrixFormat0.getRowSuffix());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("", "", "", "", "", "");
      // Undeclared exception!
      try { 
        realMatrixFormat0.parse("8F[");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: string \"8F[\" unparseable (from position 1) as an object of type org.apache.commons.math3.linear.Array2DRowRealMatrix
         //
         verifyException("org.apache.commons.math3.linear.RealMatrixFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(",tX@iKewqGL", "", "", ",tX@iKewqGL", "", "aGgTu4~2ej]", decimalFormat0);
      realMatrixFormat0.parse("");
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals(",tX@iKewqGL", realMatrixFormat0.getRowSuffix());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getPercentInstance();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(decimalFormat0);
      double[] doubleArray0 = new double[7];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      Array2DRowRealMatrix array2DRowRealMatrix0 = (Array2DRowRealMatrix)arrayRealVector0.outerProduct(arrayRealVector0);
      String string0 = realMatrixFormat0.format((RealMatrix) array2DRowRealMatrix0);
      assertEquals("###0%", decimalFormat0.toPattern());
      assertEquals("{{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%},{0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%,0%}}", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("_w%", decimalFormatSymbols0);
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(",", ",", "", ",", ",", ",", decimalFormat0);
      String string0 = realMatrixFormat0.getColumnSeparator();
      assertEquals(",", string0);
      assertEquals(",", realMatrixFormat0.getSuffix());
      assertEquals(",", realMatrixFormat0.getPrefix());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals(",", realMatrixFormat0.getRowSuffix());
      assertEquals("", realMatrixFormat0.getRowPrefix());
      assertEquals(",", realMatrixFormat0.getRowSeparator());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Locale locale0 = new Locale("]m^MF^#-!Fqd_v", "]m^MF^#-!Fqd_v", "]m^MF^#-!Fqd_v");
      RealMatrixFormat realMatrixFormat0 = RealMatrixFormat.getInstance(locale0);
      String string0 = realMatrixFormat0.getSuffix();
      assertEquals("}", realMatrixFormat0.getRowSuffix());
      assertEquals(",", realMatrixFormat0.getRowSeparator());
      assertEquals("{", realMatrixFormat0.getPrefix());
      assertEquals("}", string0);
      assertEquals(",", realMatrixFormat0.getColumnSeparator());
      assertEquals("{", realMatrixFormat0.getRowPrefix());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat();
      ParsePosition parsePosition0 = new ParsePosition(1);
      realMatrixFormat0.parse("{", parsePosition0);
      assertEquals(0, parsePosition0.getErrorIndex());
      assertEquals("{", realMatrixFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(numberFormat0);
      String string0 = realMatrixFormat0.getRowSeparator();
      assertFalse(numberFormat0.isGroupingUsed());
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("_w%", decimalFormatSymbols0);
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat(",", ",", "", ",", ",", ",", decimalFormat0);
      String string0 = realMatrixFormat0.getRowSuffix();
      assertEquals(",", realMatrixFormat0.getPrefix());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals(",", realMatrixFormat0.getColumnSeparator());
      assertEquals(",", string0);
      assertEquals("", realMatrixFormat0.getRowPrefix());
      assertEquals(",", realMatrixFormat0.getRowSeparator());
      assertEquals(",", realMatrixFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("o(`F?#", "", "", "+.(rJ=jVi-0", "o(`F?#", "");
      // Undeclared exception!
      try { 
        realMatrixFormat0.format((RealMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealMatrixFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = new RealMatrixFormat("org.apache.commons.math3.analysis.function.Log10", "org.apache.commons.math3.analysis.function.Log10", "org.apache.commons.math3.analysis.function.Log10", "org.apache.commons.math3.analysis.function.Log10", "org.apache.commons.math3.analysis.function.Log10", "org.apache.commons.math3.analysis.function.Log10");
      String string0 = realMatrixFormat0.getPrefix();
      assertEquals("org.apache.commons.math3.analysis.function.Log10", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RealMatrixFormat realMatrixFormat0 = RealMatrixFormat.getInstance();
      String string0 = realMatrixFormat0.getRowPrefix();
      assertEquals("}", realMatrixFormat0.getSuffix());
      assertEquals(",", realMatrixFormat0.getColumnSeparator());
      assertEquals(",", realMatrixFormat0.getRowSeparator());
      assertEquals("}", realMatrixFormat0.getRowSuffix());
      assertEquals("{", string0);
      assertEquals("{", realMatrixFormat0.getPrefix());
  }
}
