/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 07:12:12 GMT 2022
 */

package org.apache.commons.math3.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.linear.MatrixDimensionMismatchException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MatrixDimensionMismatchException_ESTest extends MatrixDimensionMismatchException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(3643, 0, 1, 3643);
      int int0 = matrixDimensionMismatchException0.getWrongRowDimension();
      assertEquals(3643, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException((-1087), 267, 1, 1);
      int int0 = matrixDimensionMismatchException0.getWrongRowDimension();
      assertEquals((-1087), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 0, 0, 0);
      int int0 = matrixDimensionMismatchException0.getWrongColumnDimension();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException((-3563), (-3563), (-3563), (-3563));
      int int0 = matrixDimensionMismatchException0.getWrongColumnDimension();
      assertEquals((-3563), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 0, 0, 0);
      int int0 = matrixDimensionMismatchException0.getExpectedRowDimension();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException((-1719), (-1719), (-1719), (-1719));
      int int0 = matrixDimensionMismatchException0.getExpectedRowDimension();
      assertEquals((-1719), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException((-1), 0, 0, 0);
      int int0 = matrixDimensionMismatchException0.getExpectedColumnDimension();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(1, 1, (-1), (-1));
      int int0 = matrixDimensionMismatchException0.getExpectedColumnDimension();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 2336, 37, 0);
      int int0 = matrixDimensionMismatchException0.getWrongColumnDimension();
      assertEquals(2336, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(3643, 0, 1, 3643);
      int int0 = matrixDimensionMismatchException0.getExpectedRowDimension();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(3643, 0, 1, 3643);
      int int0 = matrixDimensionMismatchException0.getExpectedColumnDimension();
      assertEquals(3643, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 2336, 37, 0);
      int int0 = matrixDimensionMismatchException0.getWrongRowDimension();
      assertEquals(0, int0);
  }
}
