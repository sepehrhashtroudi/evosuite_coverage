/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 07:03:20 GMT 2022
 */

package org.apache.commons.math3.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;
import org.apache.commons.math3.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultIterativeLinearSolverEvent_ESTest extends DefaultIterativeLinearSolverEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 0, (RealVector) null, (RealVector) null, (-497.7701));
      defaultIterativeLinearSolverEvent0.getSolution();
      assertEquals((-497.7701), defaultIterativeLinearSolverEvent0.getNormOfResidual(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 109, (RealVector) null, (RealVector) null, (RealVector) null, 109);
      defaultIterativeLinearSolverEvent0.getRightHandSideVector();
      assertEquals(109.0, defaultIterativeLinearSolverEvent0.getNormOfResidual(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(0, (-2012.81706257));
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 9, arrayRealVector0, arrayRealVector0, arrayRealVector0, 0);
      double double0 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, (-627), (RealVector) null, (RealVector) null, (-627));
      double double0 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals((-627.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = null;
      try {
        defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent((Object) null, 0, arrayRealVector0, arrayRealVector0, arrayRealVector0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = null;
      try {
        defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent((Object) null, 1, arrayRealVector0, arrayRealVector0, 1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      Double[] doubleArray0 = new Double[17];
      Double double0 = new Double(692);
      doubleArray0[2] = double0;
      doubleArray0[4] = doubleArray0[2];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(692);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 692, arrayRealVector0, arrayRealVector0, arrayRealVector0, (double) doubleArray0[4]);
      boolean boolean0 = defaultIterativeLinearSolverEvent0.providesResidual();
      assertTrue(boolean0);
      assertEquals(692.0, defaultIterativeLinearSolverEvent0.getNormOfResidual(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(arrayRealVector0, (-52), (RealVector) null, arrayRealVector0, (-52));
      boolean boolean0 = defaultIterativeLinearSolverEvent0.providesResidual();
      assertFalse(boolean0);
      assertEquals((-52.0), defaultIterativeLinearSolverEvent0.getNormOfResidual(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      Double[] doubleArray0 = new Double[17];
      Double double0 = new Double(692);
      doubleArray0[2] = double0;
      doubleArray0[4] = doubleArray0[2];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(692);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 692, arrayRealVector0, arrayRealVector0, arrayRealVector0, (double) doubleArray0[4]);
      defaultIterativeLinearSolverEvent0.getResidual();
      assertEquals(692.0, defaultIterativeLinearSolverEvent0.getNormOfResidual(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Double[] doubleArray0 = new Double[17];
      Double double0 = new Double(692);
      doubleArray0[2] = double0;
      doubleArray0[4] = doubleArray0[2];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(692);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 692, arrayRealVector0, arrayRealVector0, arrayRealVector0, (double) doubleArray0[4]);
      defaultIterativeLinearSolverEvent0.getRightHandSideVector();
      assertEquals(692.0, defaultIterativeLinearSolverEvent0.getNormOfResidual(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(arrayRealVector0, (-52), (RealVector) null, arrayRealVector0, (-52));
      // Undeclared exception!
      try { 
        defaultIterativeLinearSolverEvent0.getResidual();
        fail("Expecting exception: MathUnsupportedOperationException");
      
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         verifyException("org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      Double[] doubleArray0 = new Double[17];
      Double double0 = new Double(692);
      doubleArray0[2] = double0;
      doubleArray0[4] = doubleArray0[2];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(692);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 692, arrayRealVector0, arrayRealVector0, arrayRealVector0, (double) doubleArray0[4]);
      defaultIterativeLinearSolverEvent0.getSolution();
      assertEquals(692.0, defaultIterativeLinearSolverEvent0.getNormOfResidual(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Double[] doubleArray0 = new Double[17];
      Double double0 = new Double(692);
      doubleArray0[2] = double0;
      doubleArray0[4] = doubleArray0[2];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(692);
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(object0, 692, arrayRealVector0, arrayRealVector0, arrayRealVector0, (double) doubleArray0[4]);
      double double1 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals(692.0, double1, 0.01);
  }
}
