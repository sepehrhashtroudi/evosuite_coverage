/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 07:00:25 GMT 2022
 */

package org.apache.commons.math3.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.FieldPosition;
import java.text.Format;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.Locale;
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.RealVector;
import org.apache.commons.math3.linear.RealVectorFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RealVectorFormat_ESTest extends RealVectorFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("wMURz];1H(*f^L-Z", "", "av8If}N", (NumberFormat) null);
      realVectorFormat0.parse("");
      assertEquals("wMURz];1H(*f^L-Z", realVectorFormat0.getPrefix());
      assertEquals("", realVectorFormat0.getSuffix());
      assertEquals("av8If}N", realVectorFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("wMURz];1H(*f^L-Z", "", "av8If}N", (NumberFormat) null);
      String string0 = realVectorFormat0.getSuffix();
      assertEquals("", string0);
      assertEquals("av8If}N", realVectorFormat0.getSeparator());
      assertEquals("wMURz];1H(*f^L-Z", realVectorFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("", "", "");
      String string0 = realVectorFormat0.getSeparator();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("", "?AX/^o>c", "", numberFormat0);
      String string0 = realVectorFormat0.getPrefix();
      assertEquals("", string0);
      assertEquals("?AX/^o>c", realVectorFormat0.getSuffix());
      assertEquals("", realVectorFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("wMURz];1H(*f^L-Z", "", "av8If}N", (NumberFormat) null);
      realVectorFormat0.getFormat();
      assertEquals("", realVectorFormat0.getSuffix());
      assertEquals("av8If}N", realVectorFormat0.getSeparator());
      assertEquals("wMURz];1H(*f^L-Z", realVectorFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      RealVectorFormat realVectorFormat0 = new RealVectorFormat(numberFormat0);
      realVectorFormat0.getFormat();
      assertEquals("; ", realVectorFormat0.getSeparator());
      assertEquals("}", realVectorFormat0.getSuffix());
      assertEquals("{", realVectorFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance(locale0);
      DecimalFormat decimalFormat0 = new DecimalFormat("$&/<o?3]", decimalFormatSymbols0);
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("SV/AeCL4,U", "fc>@JYHe\"bGMG", "$&/<o?3]", decimalFormat0);
      realVectorFormat0.getFormat();
      assertEquals("SV/AeCL4,U", realVectorFormat0.getPrefix());
      assertEquals("$&/<o?3]", realVectorFormat0.getSeparator());
      assertEquals("fc>@JYHe\"bGMG", realVectorFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("", "", "");
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      StringBuffer stringBuffer0 = new StringBuffer();
      FieldPosition fieldPosition0 = new FieldPosition((-1));
      realVectorFormat0.format((RealVector) arrayRealVector0, stringBuffer0, fieldPosition0);
      assertEquals("java.text.FieldPosition[field=-1,attribute=null,beginIndex=0,endIndex=0]", fieldPosition0.toString());
      assertEquals(0, fieldPosition0.getBeginIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("", "", "", numberFormat0);
      Double[] doubleArray0 = new Double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      String string0 = realVectorFormat0.format((RealVector) arrayRealVector0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("", "", "");
      ParsePosition parsePosition0 = new ParsePosition((-809));
      // Undeclared exception!
      try { 
        realVectorFormat0.parse("", parsePosition0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat();
      // Undeclared exception!
      try { 
        realVectorFormat0.parse("68&c4]J:", (ParsePosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealVectorFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance();
      // Undeclared exception!
      try { 
        realVectorFormat0.parse("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat();
      // Undeclared exception!
      try { 
        realVectorFormat0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.util.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        RealVectorFormat.getInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("~~L8U*", "~~L8U*", "");
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(2552, (-1.0));
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0, arrayRealVector0);
      StringBuffer stringBuffer0 = new StringBuffer(2552);
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, (-1289));
      realVectorFormat0.format((RealVector) arrayRealVector1, stringBuffer0, fieldPosition0);
      assertEquals(10220, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat();
      FieldPosition fieldPosition0 = new FieldPosition((Format.Field) null);
      // Undeclared exception!
      try { 
        realVectorFormat0.format((RealVector) null, (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(3341, 241.700495322);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
      realVectorFormat0.format((RealVector) arrayRealVector1);
      assertEquals("; ", realVectorFormat0.getSeparator());
      assertEquals("}", realVectorFormat0.getSuffix());
      assertEquals("{", realVectorFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance();
      // Undeclared exception!
      try { 
        realVectorFormat0.format((RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      RealVectorFormat realVectorFormat0 = null;
      try {
        realVectorFormat0 = new RealVectorFormat((String) null, (String) null, "", numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealVectorFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = null;
      try {
        realVectorFormat0 = new RealVectorFormat((String) null, "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.linear.RealVectorFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance();
      ParsePosition parsePosition0 = new ParsePosition(230);
      realVectorFormat0.parse("Mt0lRBZ#uSH24/i[", parsePosition0);
      assertEquals("java.text.ParsePosition[index=229,errorIndex=229]", parsePosition0.toString());
      assertEquals(229, parsePosition0.getErrorIndex());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("~~L8U*", "~~L8U*", "");
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(2552, (-1.0));
      StringBuffer stringBuffer0 = new StringBuffer(2552);
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, (-1289));
      realVectorFormat0.format((RealVector) arrayRealVector0, stringBuffer0, fieldPosition0);
      assertEquals(5116, stringBuffer0.length());
      assertEquals("~~L8U*", realVectorFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("PERMUTATION_EXCEEDS_N", "PERMUTATION_EXCEEDS_N", "PERMUTATION_EXCEEDS_N", numberFormat0);
      NumberFormat numberFormat1 = realVectorFormat0.getFormat();
      assertEquals(1, numberFormat1.getMinimumIntegerDigits());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance(locale0);
      assertEquals("; ", realVectorFormat0.getSeparator());
      assertEquals("}", realVectorFormat0.getSuffix());
      assertEquals("{", realVectorFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat();
      ParsePosition parsePosition0 = new ParsePosition(0);
      realVectorFormat0.parse("{", parsePosition0);
      assertEquals(0, parsePosition0.getErrorIndex());
      assertEquals("java.text.ParsePosition[index=0,errorIndex=0]", parsePosition0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat();
      ArrayRealVector arrayRealVector0 = realVectorFormat0.parse("{0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0}");
      assertEquals("{", realVectorFormat0.getPrefix());
      assertNotNull(arrayRealVector0);
      assertEquals("; ", realVectorFormat0.getSeparator());
      assertEquals("}", realVectorFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance();
      // Undeclared exception!
      try { 
        realVectorFormat0.parse(")Z\"y@t\"~VN,az{*");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: string \")Z\"y@t\"~VN,az{*\" unparseable (from position 0) as an object of type org.apache.commons.math3.linear.ArrayRealVector
         //
         verifyException("org.apache.commons.math3.linear.RealVectorFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance();
      String string0 = realVectorFormat0.getSuffix();
      assertEquals("}", string0);
      assertEquals("{", realVectorFormat0.getPrefix());
      assertEquals("; ", realVectorFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat();
      String string0 = realVectorFormat0.getPrefix();
      assertEquals("{", string0);
      assertEquals("}", realVectorFormat0.getSuffix());
      assertEquals("; ", realVectorFormat0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat();
      String string0 = realVectorFormat0.getSeparator();
      assertEquals("; ", string0);
      assertEquals("}", realVectorFormat0.getSuffix());
      assertEquals("{", realVectorFormat0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = RealVectorFormat.getInstance();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(3341, 241.700495322);
      realVectorFormat0.format((RealVector) arrayRealVector0);
      assertEquals("{", realVectorFormat0.getPrefix());
      assertEquals("; ", realVectorFormat0.getSeparator());
      assertEquals("}", realVectorFormat0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RealVectorFormat realVectorFormat0 = new RealVectorFormat("-,|$qwx;/jh{o?6", "-,|$qwx;/jh{o?6", "-,|$qwx;/jh{o?6");
      ArrayRealVector arrayRealVector0 = realVectorFormat0.parse("-,|$qwx;/jh{o?6");
      assertNull(arrayRealVector0);
  }
}
