/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 21:12:21 GMT 2022
 */

package org.apache.commons.math3.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NonPositiveDefiniteMatrixException_ESTest extends NonPositiveDefiniteMatrixException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(0.0, 0, 0.0);
      double double0 = nonPositiveDefiniteMatrixException0.getThreshold();
      assertEquals(0, nonPositiveDefiniteMatrixException0.getRow());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(1.0, 813, 1.0);
      double double0 = nonPositiveDefiniteMatrixException0.getThreshold();
      assertEquals(1.0, double0, 0.01);
      assertEquals(813, nonPositiveDefiniteMatrixException0.getColumn());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(1.0, 813, 1.0);
      int int0 = nonPositiveDefiniteMatrixException0.getRow();
      assertEquals(1.0, nonPositiveDefiniteMatrixException0.getThreshold(), 0.01);
      assertEquals(813, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(364.728276825, (-1), 364.728276825);
      int int0 = nonPositiveDefiniteMatrixException0.getRow();
      assertEquals((-1), int0);
      assertEquals(364.728276825, nonPositiveDefiniteMatrixException0.getThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(1.0, 813, 1.0);
      int int0 = nonPositiveDefiniteMatrixException0.getColumn();
      assertEquals(813, int0);
      assertEquals(1.0, nonPositiveDefiniteMatrixException0.getThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(364.728276825, (-1), 364.728276825);
      int int0 = nonPositiveDefiniteMatrixException0.getColumn();
      assertEquals((-1), int0);
      assertEquals(364.728276825, nonPositiveDefiniteMatrixException0.getThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(0.0, 0, (-1516.7356332623233));
      int int0 = nonPositiveDefiniteMatrixException0.getColumn();
      assertEquals(0, int0);
      assertEquals((-1516.7356332623233), nonPositiveDefiniteMatrixException0.getThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(0.0, 0, (-1516.7356332623233));
      int int0 = nonPositiveDefiniteMatrixException0.getRow();
      assertEquals(0, int0);
      assertEquals((-1516.7356332623233), nonPositiveDefiniteMatrixException0.getThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NonPositiveDefiniteMatrixException nonPositiveDefiniteMatrixException0 = new NonPositiveDefiniteMatrixException(0.0, 0, (-1516.7356332623233));
      double double0 = nonPositiveDefiniteMatrixException0.getThreshold();
      assertEquals((-1516.7356332623233), double0, 0.01);
      assertEquals(0, nonPositiveDefiniteMatrixException0.getRow());
  }
}
