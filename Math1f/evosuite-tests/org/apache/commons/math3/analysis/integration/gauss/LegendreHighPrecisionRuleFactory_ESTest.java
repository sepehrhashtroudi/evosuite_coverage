/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:47:29 GMT 2022
 */

package org.apache.commons.math3.analysis.integration.gauss;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LegendreHighPrecisionRuleFactory_ESTest extends LegendreHighPrecisionRuleFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory();
      assertNotNull(legendreHighPrecisionRuleFactory0);
      
      int int0 = 816;
      legendreHighPrecisionRuleFactory0.computeRule(int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = 16;
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      MathContext mathContext0 = new MathContext(16, roundingMode0);
      assertNotNull(mathContext0);
      
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory(mathContext0);
      assertNotNull(legendreHighPrecisionRuleFactory0);
      
      // Undeclared exception!
      legendreHighPrecisionRuleFactory0.computeRule(16);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = null;
      try {
        legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory((MathContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory();
      assertNotNull(legendreHighPrecisionRuleFactory0);
      
      int int0 = (-1173);
      try { 
        legendreHighPrecisionRuleFactory0.getRule((-915));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of points (-915)
         //
         verifyException("org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MathContext mathContext0 = MathContext.DECIMAL128;
      assertNotNull(mathContext0);
      
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory(mathContext0);
      assertNotNull(legendreHighPrecisionRuleFactory0);
      
      int int0 = 37;
      // Undeclared exception!
      legendreHighPrecisionRuleFactory0.getRuleInternal(37);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory();
      int int0 = 473;
      legendreHighPrecisionRuleFactory0.computeRule(int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MathContext mathContext0 = MathContext.DECIMAL64;
      Object object0 = new Object();
      mathContext0.equals(object0);
      mathContext0.getRoundingMode();
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory(mathContext0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory();
      BigDecimal[] bigDecimalArray0 = new BigDecimal[4];
      long long0 = 1948L;
      BigDecimal bigDecimal0 = new BigDecimal(1948L);
      bigDecimalArray0[0] = bigDecimal0;
      int int0 = 2006;
      legendreHighPrecisionRuleFactory0.getRule(int0);
  }
}
