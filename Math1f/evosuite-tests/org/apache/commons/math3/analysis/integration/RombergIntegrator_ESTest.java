/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:27:40 GMT 2022
 */

package org.apache.commons.math3.analysis.integration;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.function.Cbrt;
import org.apache.commons.math3.analysis.function.Gaussian;
import org.apache.commons.math3.analysis.function.Log1p;
import org.apache.commons.math3.analysis.function.Minus;
import org.apache.commons.math3.analysis.integration.RombergIntegrator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RombergIntegrator_ESTest extends RombergIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      Gaussian gaussian0 = new Gaussian(Integer.MAX_VALUE, 3);
      rombergIntegrator0.setup(860, gaussian0, 0.5, 860);
      double double0 = rombergIntegrator0.doIntegrate();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      Minus minus0 = new Minus();
      rombergIntegrator0.setup(5375, minus0, 1035.492, 1246);
      double double0 = rombergIntegrator0.doIntegrate();
      assertEquals((-240136.15896800003), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      Log1p log1p0 = new Log1p();
      rombergIntegrator0.integrate(2474, log1p0, 0.006, 3);
      // Undeclared exception!
      rombergIntegrator0.doIntegrate();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      try { 
        rombergIntegrator0.doIntegrate();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = null;
      try {
        rombergIntegrator0 = new RombergIntegrator((-753), (-753));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -753 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = null;
      try {
        rombergIntegrator0 = new RombergIntegrator(811.56852708, 811.56852708, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cbrt cbrt0 = new Cbrt();
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      rombergIntegrator0.setup(13, cbrt0, 0.0, 2.6469779601696886E-23);
      double double0 = rombergIntegrator0.doIntegrate();
      assertEquals(5.857289423000171E-31, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = null;
      try {
        rombergIntegrator0 = new RombergIntegrator(32, 3085);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3,085 is larger than, or equal to, the maximum (32)
         //
         verifyException("org.apache.commons.math3.analysis.integration.RombergIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator(1, 2);
      assertEquals(1.0E-6, rombergIntegrator0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = null;
      try {
        rombergIntegrator0 = new RombergIntegrator(1.2452202100053, 1.2452202100053, 12, 297);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 297 is larger than, or equal to, the maximum (32)
         //
         verifyException("org.apache.commons.math3.analysis.integration.RombergIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator(0.0, (-797.7845351), 15, 32);
      assertEquals(32, RombergIntegrator.ROMBERG_MAX_ITERATIONS_COUNT);
  }
}
