/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:26:37 GMT 2022
 */

package org.apache.commons.math3.analysis.integration;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.function.Sin;
import org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IterativeLegendreGaussIntegrator_ESTest extends IterativeLegendreGaussIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IterativeLegendreGaussIntegrator iterativeLegendreGaussIntegrator0 = new IterativeLegendreGaussIntegrator(1, 1, 3464);
      Sin sin0 = new Sin();
      iterativeLegendreGaussIntegrator0.setup(1, sin0, (-1887.251058014), 3647.45494522);
      try { 
        iterativeLegendreGaussIntegrator0.doIntegrate();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IterativeLegendreGaussIntegrator iterativeLegendreGaussIntegrator0 = null;
      try {
        iterativeLegendreGaussIntegrator0 = new IterativeLegendreGaussIntegrator((-2645), 430, 430);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 430 is smaller than, or equal to, the minimum (430)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IterativeLegendreGaussIntegrator iterativeLegendreGaussIntegrator0 = null;
      try {
        iterativeLegendreGaussIntegrator0 = new IterativeLegendreGaussIntegrator(1223, 0.0, 0.0, 1223, 1223);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,223 is smaller than, or equal to, the minimum (1,223)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IterativeLegendreGaussIntegrator iterativeLegendreGaussIntegrator0 = new IterativeLegendreGaussIntegrator(3, (-1031.862672511), 1441.994265599691, 1097, 4034);
      try { 
        iterativeLegendreGaussIntegrator0.doIntegrate();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not strictly increasing (0 >= 0)
         //
         verifyException("org.apache.commons.math3.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IterativeLegendreGaussIntegrator iterativeLegendreGaussIntegrator0 = null;
      try {
        iterativeLegendreGaussIntegrator0 = new IterativeLegendreGaussIntegrator((-1005), (-1005), 0.0, 2, 2177);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of points (-1,005)
         //
         verifyException("org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IterativeLegendreGaussIntegrator iterativeLegendreGaussIntegrator0 = null;
      try {
        iterativeLegendreGaussIntegrator0 = new IterativeLegendreGaussIntegrator((-523), 328, 328);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of points (-523)
         //
         verifyException("org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IterativeLegendreGaussIntegrator iterativeLegendreGaussIntegrator0 = null;
      try {
        iterativeLegendreGaussIntegrator0 = new IterativeLegendreGaussIntegrator((-754), (-2126), (-754));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2,126 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }
}
