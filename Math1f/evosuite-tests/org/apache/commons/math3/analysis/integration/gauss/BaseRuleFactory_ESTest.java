/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:51:24 GMT 2022
 */

package org.apache.commons.math3.analysis.integration.gauss;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory;
import org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory;
import org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory;
import org.apache.commons.math3.util.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseRuleFactory_ESTest extends BaseRuleFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      // Undeclared exception!
      hermiteRuleFactory0.getRule(68);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory();
      int int0 = 1049;
      int int1 = 1086;
      BigDecimal[] bigDecimalArray0 = new BigDecimal[3];
      Pair<BigDecimal[], BigDecimal[]> pair0 = new Pair<BigDecimal[], BigDecimal[]>(bigDecimalArray0, bigDecimalArray0);
      legendreHighPrecisionRuleFactory0.addRule(pair0);
      BigDecimal bigDecimal0 = null;
      try {
        bigDecimal0 = new BigDecimal((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MathContext mathContext0 = MathContext.DECIMAL64;
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory(mathContext0);
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      // Undeclared exception!
      try { 
        hermiteRuleFactory0.addRule((Pair<Double[], Double[]>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LegendreRuleFactory legendreRuleFactory0 = new LegendreRuleFactory();
      int int0 = 1044;
      legendreRuleFactory0.getRule(int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      int int0 = 812;
      // Undeclared exception!
      hermiteRuleFactory0.getRuleInternal(252);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory();
      LegendreRuleFactory legendreRuleFactory0 = new LegendreRuleFactory();
      int int0 = 0;
      try { 
        legendreRuleFactory0.getRule(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of points (0)
         //
         verifyException("org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LegendreRuleFactory legendreRuleFactory0 = new LegendreRuleFactory();
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      try { 
        hermiteRuleFactory0.getRule((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of points (-1)
         //
         verifyException("org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      int int0 = 1;
      // Undeclared exception!
      hermiteRuleFactory0.computeRule(161);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LegendreHighPrecisionRuleFactory legendreHighPrecisionRuleFactory0 = new LegendreHighPrecisionRuleFactory();
      legendreHighPrecisionRuleFactory0.computeRule(0);
  }
}
