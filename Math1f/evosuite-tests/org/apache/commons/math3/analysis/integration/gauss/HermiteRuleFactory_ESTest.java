/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:39:40 GMT 2022
 */

package org.apache.commons.math3.analysis.integration.gauss;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory;
import org.apache.commons.math3.util.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HermiteRuleFactory_ESTest extends HermiteRuleFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      int int0 = 16;
      HermiteRuleFactory hermiteRuleFactory1 = new HermiteRuleFactory();
      // Undeclared exception!
      hermiteRuleFactory1.computeRule(16);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      int int0 = 0;
      hermiteRuleFactory0.getRuleInternal(int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      Pair<Double[], Double[]> pair0 = hermiteRuleFactory0.computeRule(1);
      assertNotNull(pair0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      int int0 = 536;
      hermiteRuleFactory0.getRule(int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HermiteRuleFactory hermiteRuleFactory0 = new HermiteRuleFactory();
      try { 
        hermiteRuleFactory0.getRule(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of points (0)
         //
         verifyException("org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory", e);
      }
  }
}
