/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 23:24:19 GMT 2022
 */

package org.apache.commons.math3.analysis.integration;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.function.HarmonicOscillator;
import org.apache.commons.math3.analysis.function.Sinc;
import org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator;
import org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LegendreGaussIntegrator_ESTest extends LegendreGaussIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = null;
      try {
        legendreGaussIntegrator0 = new LegendreGaussIntegrator(5563, (-469), 5563);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -469 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = null;
      try {
        legendreGaussIntegrator0 = new LegendreGaussIntegrator(1129, (-648.89), 0.7937005259840998, 0, 1129);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = null;
      try {
        legendreGaussIntegrator0 = new LegendreGaussIntegrator(5160, (-880.383156908436), 5160, 5160, 5160);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 5,160 is smaller than, or equal to, the minimum (5,160)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = null;
      try {
        legendreGaussIntegrator0 = new LegendreGaussIntegrator(282, 0.5688888888888889, 282);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 282 points Legendre-Gauss integrator not supported, number of points must be in the 2-5 range
         //
         verifyException("org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = null;
      try {
        legendreGaussIntegrator0 = new LegendreGaussIntegrator(1, 1, 0.0, 382, 1387);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 points Legendre-Gauss integrator not supported, number of points must be in the 2-5 range
         //
         verifyException("org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = new LegendreGaussIntegrator(3, 431.7344, 0.0, 3, 357);
      assertEquals(Integer.MAX_VALUE, BaseAbstractUnivariateIntegrator.DEFAULT_MAX_ITERATIONS_COUNT);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = new LegendreGaussIntegrator(4, 4, (-18.12625419648198), 382, 1387);
      assertEquals(382, legendreGaussIntegrator0.getMinimalIterationCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = new LegendreGaussIntegrator(5, 0.0, 416.8962294, 32, 164);
      try { 
        legendreGaussIntegrator0.doIntegrate();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = new LegendreGaussIntegrator(3, 1421, 3133);
      assertEquals(1.0E-15, legendreGaussIntegrator0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = null;
      try {
        legendreGaussIntegrator0 = new LegendreGaussIntegrator(55, 55, 936);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 55 points Legendre-Gauss integrator not supported, number of points must be in the 2-5 range
         //
         verifyException("org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = new LegendreGaussIntegrator(5, 5, (-2637.25));
      Sinc sinc0 = new Sinc(true);
      legendreGaussIntegrator0.setup(456, sinc0, (-2096.8774406852235), 0.5784112215042114);
      double double0 = legendreGaussIntegrator0.doIntegrate();
      assertEquals(0.26039177883098175, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = new LegendreGaussIntegrator(4, 0.0, 0.0);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(575.513, 1397, 672.5969668679);
      try { 
        legendreGaussIntegrator0.integrate(1294, harmonicOscillator0, 2.50909423828125, 672.5969668679);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1,294) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LegendreGaussIntegrator legendreGaussIntegrator0 = null;
      try {
        legendreGaussIntegrator0 = new LegendreGaussIntegrator(1025, 1025, 1025);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,025 is smaller than, or equal to, the minimum (1,025)
         //
         verifyException("org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }
}
