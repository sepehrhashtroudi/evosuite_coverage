/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:34:51 GMT 2022
 */

package org.apache.commons.math3.analysis.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math3.analysis.function.Acosh;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Acosh_ESTest extends Acosh_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(2801, 0);
      DerivativeStructure derivativeStructure1 = acosh0.value(derivativeStructure0);
      assertEquals(0L, derivativeStructure1.round());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 1, 1663.3469);
      DerivativeStructure derivativeStructure1 = acosh0.value(derivativeStructure0);
      DerivativeStructure derivativeStructure2 = acosh0.value(derivativeStructure1);
      DerivativeStructure derivativeStructure3 = acosh0.value(derivativeStructure2);
      assertEquals(0, derivativeStructure3.getExponent());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, (-2.8477710945673134E65));
      DerivativeStructure derivativeStructure1 = acosh0.value(derivativeStructure0);
      assertFalse(derivativeStructure1.equals((Object)derivativeStructure0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0);
      DerivativeStructure derivativeStructure1 = DerivativeStructure.pow((-1.0), derivativeStructure0);
      DerivativeStructure derivativeStructure2 = acosh0.value(derivativeStructure1);
      assertEquals(0.0, derivativeStructure2.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      double double0 = acosh0.value(82.07230033);
      assertEquals(5.100710633848155, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      double double0 = acosh0.value((-3.4650891244084597E148));
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      // Undeclared exception!
      try { 
        acosh0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.function.Acosh", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 310);
      // Undeclared exception!
      acosh0.value(derivativeStructure0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      double double0 = acosh0.value(1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Acosh acosh0 = new Acosh();
      UnivariateFunction univariateFunction0 = acosh0.derivative();
      assertNotNull(univariateFunction0);
  }
}
