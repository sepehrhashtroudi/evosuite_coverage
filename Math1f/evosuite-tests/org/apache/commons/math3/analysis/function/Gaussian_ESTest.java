/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:27:55 GMT 2022
 */

package org.apache.commons.math3.analysis.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math3.analysis.function.Gaussian;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Gaussian_ESTest extends Gaussian_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian(2982.2883954703, 2982.2883954703, 2982.2883954703);
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(2, 2);
      DerivativeStructure derivativeStructure1 = gaussian0.value(derivativeStructure0);
      assertEquals(1808.8493479579324, derivativeStructure1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      doubleArray0[2] = (-4056.05432);
      try { 
        gaussian_Parametric0.gradient((-4056.05432), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4,056.054 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian$Parametric", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[0];
      try { 
        gaussian_Parametric0.gradient(2649.65945838954, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian$Parametric", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2.0;
      doubleArray0[2] = 2.0;
      double[] doubleArray1 = gaussian_Parametric0.gradient(1.0, doubleArray0);
      assertArrayEquals(new double[] {0.8824969025845955, 0.4412484512922977, 0.22062422564614886}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2.0;
      doubleArray0[2] = 2.0;
      double[] doubleArray1 = gaussian_Parametric0.gradient(2.0, doubleArray0);
      assertArrayEquals(new double[] {0.6065306597126334, 0.6065306597126334, 0.6065306597126334}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      doubleArray0[2] = 210.174277;
      double[] doubleArray1 = gaussian_Parametric0.gradient((-0.5), doubleArray0);
      assertArrayEquals(new double[] {0.9999971702356282, -0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 2.0;
      double[] doubleArray1 = gaussian_Parametric0.gradient(2.0, doubleArray0);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      doubleArray0[2] = 767.0;
      double double0 = gaussian_Parametric0.value(767.0, doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 2.0;
      double double0 = gaussian_Parametric0.value(85.0099803, doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian();
      double double0 = gaussian0.value(859.51191140234);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian((-6.619064395428225E206), 6602.621, 6602.621);
      double double0 = gaussian0.value(2.0);
      assertEquals((-4.015881576771529E206), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian();
      // Undeclared exception!
      try { 
        gaussian0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Gaussian gaussian0 = null;
      try {
        gaussian0 = new Gaussian((-1247.761762151), (-1247.761762151));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,247.762 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian(0.5, 0.6186635494232178);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, 16.8004237);
      DerivativeStructure derivativeStructure1 = new DerivativeStructure((-2067.99641463202), derivativeStructure0, (-2067.99641463202), derivativeStructure0, (-2067.99641463202), derivativeStructure0, 16.8004237, derivativeStructure0);
      DerivativeStructure derivativeStructure2 = gaussian0.value(derivativeStructure1);
      assertEquals(0.0, derivativeStructure2.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[18];
      try { 
        gaussian_Parametric0.value(2, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 18 != 3
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian$Parametric", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      try { 
        gaussian_Parametric0.value(2.0, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian$Parametric", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Gaussian gaussian0 = null;
      try {
        gaussian0 = new Gaussian((-1.3940903373095247E-8), 0.0, (-1.3940903373095247E-8));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian(2.0, 2.0, 2.0);
      double double0 = gaussian0.value(2.0);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian();
      UnivariateFunction univariateFunction0 = gaussian0.derivative();
      assertNotNull(univariateFunction0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Gaussian.Parametric gaussian_Parametric0 = new Gaussian.Parametric();
      double[] doubleArray0 = new double[3];
      try { 
        gaussian_Parametric0.gradient(2.0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.analysis.function.Gaussian$Parametric", e);
      }
  }
}
