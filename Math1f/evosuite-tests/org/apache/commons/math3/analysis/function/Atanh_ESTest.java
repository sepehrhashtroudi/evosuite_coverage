/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:38:31 GMT 2022
 */

package org.apache.commons.math3.analysis.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math3.analysis.function.Atanh;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Atanh_ESTest extends Atanh_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(4, 4, 4);
      DerivativeStructure derivativeStructure1 = derivativeStructure0.sin();
      DerivativeStructure derivativeStructure2 = atanh0.value(derivativeStructure1);
      assertEquals((-1), derivativeStructure2.getExponent());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, 6.537034810260226E-9);
      DerivativeStructure derivativeStructure1 = atanh0.value(derivativeStructure0);
      assertEquals(6.537034810260226E-9, derivativeStructure1.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 119);
      DerivativeStructure derivativeStructure1 = DerivativeStructure.pow(0.0, derivativeStructure0);
      DerivativeStructure derivativeStructure2 = DerivativeStructure.atan2(derivativeStructure1, derivativeStructure1);
      DerivativeStructure derivativeStructure3 = atanh0.value(derivativeStructure2);
      assertNotSame(derivativeStructure2, derivativeStructure3);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(4, 4, 4);
      DerivativeStructure derivativeStructure1 = atanh0.value(derivativeStructure0);
      assertNotSame(derivativeStructure0, derivativeStructure1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(4, 4);
      DerivativeStructure derivativeStructure1 = atanh0.value(derivativeStructure0);
      assertEquals(0L, derivativeStructure1.round());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      double double0 = atanh0.value(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      double double0 = atanh0.value(1.2599421120614435E-8);
      assertEquals(1.2599421120614435E-8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      double double0 = atanh0.value((-1.0));
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 1198, (-3976.8271444554));
      // Undeclared exception!
      atanh0.value(derivativeStructure0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      // Undeclared exception!
      try { 
        atanh0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.function.Atanh", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      UnivariateFunction univariateFunction0 = atanh0.derivative();
      assertNotNull(univariateFunction0);
  }
}
