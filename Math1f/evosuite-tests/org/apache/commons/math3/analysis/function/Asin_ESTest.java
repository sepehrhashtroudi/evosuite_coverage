/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:18:32 GMT 2022
 */

package org.apache.commons.math3.analysis.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math3.analysis.function.Asin;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Asin_ESTest extends Asin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Asin asin0 = new Asin();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 1;
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 1, doubleArray0);
      DerivativeStructure derivativeStructure1 = asin0.value(derivativeStructure0);
      assertEquals(1.5707963267948966, derivativeStructure1.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Asin asin0 = new Asin();
      double[] doubleArray0 = new double[1];
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 1, doubleArray0);
      DerivativeStructure derivativeStructure1 = asin0.value(derivativeStructure0);
      assertNotSame(derivativeStructure0, derivativeStructure1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Asin asin0 = new Asin();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(204, 0, (-1322), (-882.396));
      DerivativeStructure derivativeStructure1 = asin0.value(derivativeStructure0);
      assertNotSame(derivativeStructure1, derivativeStructure0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Asin asin0 = new Asin();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, (-584), (-1.0));
      DerivativeStructure derivativeStructure1 = asin0.value(derivativeStructure0);
      assertEquals(0, derivativeStructure1.getFreeParameters());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Asin asin0 = new Asin();
      double double0 = asin0.value(1.0);
      assertEquals(1.5707963267948966, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Asin asin0 = new Asin();
      double double0 = asin0.value((-1.0));
      assertEquals((-1.5707963267948966), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Asin asin0 = new Asin();
      // Undeclared exception!
      try { 
        asin0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.function.Asin", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Asin asin0 = new Asin();
      double double0 = asin0.value(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Asin asin0 = new Asin();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 3027);
      // Undeclared exception!
      asin0.value(derivativeStructure0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Asin asin0 = new Asin();
      UnivariateFunction univariateFunction0 = asin0.derivative();
      assertNotNull(univariateFunction0);
  }
}
