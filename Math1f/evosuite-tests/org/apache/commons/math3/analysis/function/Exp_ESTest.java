/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:03:15 GMT 2022
 */

package org.apache.commons.math3.analysis.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math3.analysis.function.Exp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Exp_ESTest extends Exp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Exp exp0 = new Exp();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, (-1488.46));
      DerivativeStructure derivativeStructure1 = exp0.value(derivativeStructure0);
      assertEquals(0.0, derivativeStructure1.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Exp exp0 = new Exp();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(1, 1, 1126.2);
      DerivativeStructure derivativeStructure1 = exp0.value(derivativeStructure0);
      assertEquals(1, derivativeStructure1.getOrder());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Exp exp0 = new Exp();
      double double0 = exp0.value((-3334.222092043));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Exp exp0 = new Exp();
      // Undeclared exception!
      try { 
        exp0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.function.Exp", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Exp exp0 = new Exp();
      double double0 = exp0.value((double) 0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Exp exp0 = new Exp();
      UnivariateFunction univariateFunction0 = exp0.derivative();
      assertNotNull(univariateFunction0);
  }
}
