/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:37:51 GMT 2022
 */

package org.apache.commons.math3.analysis.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math3.analysis.function.Asinh;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Asinh_ESTest extends Asinh_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(1807, 0, (-908.6907278658623));
      DerivativeStructure derivativeStructure1 = new DerivativeStructure((-1.0), derivativeStructure0, 0, derivativeStructure0, (-908.6907278658623), derivativeStructure0, 0.0, derivativeStructure0);
      DerivativeStructure derivativeStructure2 = asinh0.value(derivativeStructure1);
      assertEquals(14.318256665731905, derivativeStructure2.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 1, 0.0);
      DerivativeStructure derivativeStructure1 = asinh0.value(derivativeStructure0);
      assertEquals(0.0, derivativeStructure1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, (-2211.780656626));
      DerivativeStructure derivativeStructure1 = DerivativeStructure.atan2(derivativeStructure0, derivativeStructure0);
      DerivativeStructure derivativeStructure2 = asinh0.value(derivativeStructure1);
      assertNotSame(derivativeStructure2, derivativeStructure0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      double double0 = asinh0.value(832.184530777);
      assertEquals(7.417201749582694, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      double double0 = asinh0.value((-1.0));
      assertEquals((-0.8813735870195429), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 874, (-1.0235056525096769E156));
      // Undeclared exception!
      asinh0.value(derivativeStructure0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      // Undeclared exception!
      try { 
        asinh0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.function.Asinh", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      double double0 = asinh0.value((double) 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      UnivariateFunction univariateFunction0 = asinh0.derivative();
      assertNotNull(univariateFunction0);
  }
}
