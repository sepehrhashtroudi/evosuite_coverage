/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:49:48 GMT 2022
 */

package org.apache.commons.math3.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.DifferentiableUnivariateFunction;
import org.apache.commons.math3.analysis.function.Asin;
import org.apache.commons.math3.analysis.function.Sigmoid;
import org.apache.commons.math3.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math3.analysis.solvers.NewtonSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewtonSolver_ESTest extends NewtonSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver(0.0);
      Sigmoid sigmoid0 = new Sigmoid(103, 0.0);
      double double0 = newtonSolver0.solve(103, (DifferentiableUnivariateFunction) sigmoid0, (-1.0));
      assertEquals(38.67156178090081, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 2574;
      doubleArray0[1] = (double) 2574;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      newtonSolver0.solve(2574, (DifferentiableUnivariateFunction) polynomialFunction0, (-1.0));
      double double0 = newtonSolver0.doSolve();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      double[] doubleArray0 = new double[6];
      doubleArray0[4] = (double) 2590;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      newtonSolver0.solve(2590, (DifferentiableUnivariateFunction) polynomialFunction0, 3.8877083524279136E55);
      newtonSolver0.doSolve();
      // Undeclared exception!
      newtonSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      try { 
        newtonSolver0.doSolve();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      Asin asin0 = new Asin();
      newtonSolver0.solve(186, (DifferentiableUnivariateFunction) asin0, 0.01971597969532013);
      double double0 = newtonSolver0.doSolve();
      assertEquals(0.0, double0, 0.01);
  }
}
