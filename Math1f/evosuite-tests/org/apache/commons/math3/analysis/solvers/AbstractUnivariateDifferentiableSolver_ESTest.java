/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:44:05 GMT 2022
 */

package org.apache.commons.math3.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction;
import org.apache.commons.math3.analysis.function.Cos;
import org.apache.commons.math3.analysis.function.HarmonicOscillator;
import org.apache.commons.math3.analysis.function.Logit;
import org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractUnivariateDifferentiableSolver_ESTest extends AbstractUnivariateDifferentiableSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(0.0, 0.0, 10.0);
      newtonRaphsonSolver0.setup(4, harmonicOscillator0, 0.0, 4, (-171.0585613004));
      newtonRaphsonSolver0.computeObjectiveValueAndDerivative(117.11771);
      assertEquals(4.0, newtonRaphsonSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver(0.0);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1316.5386, 1316.5386, 0.0);
      newtonRaphsonSolver0.solve(873, (UnivariateDifferentiableFunction) harmonicOscillator0, 2449.421000089202, 2449.421000089202, 1316.5386);
      newtonRaphsonSolver0.computeObjectiveValueAndDerivative(1.0);
      assertEquals(2449.421000089202, newtonRaphsonSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      Cos cos0 = new Cos();
      newtonRaphsonSolver0.solve(94, (UnivariateDifferentiableFunction) cos0, (double) 94, (double) 94, (double) 94);
      newtonRaphsonSolver0.computeObjectiveValueAndDerivative(0.0);
      assertEquals(94.0, newtonRaphsonSolver0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver(1500.27125132274);
      // Undeclared exception!
      try { 
        newtonRaphsonSolver0.setup((-1739), (UnivariateDifferentiableFunction) null, (-1.0), 1500.27125132274, 1500.27125132274);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      Logit logit0 = new Logit(4959, 4959);
      newtonRaphsonSolver0.setup(4959, logit0, 4959, 1285.0235569672, 1285.0235569672);
      // Undeclared exception!
      try { 
        newtonRaphsonSolver0.computeObjectiveValueAndDerivative((-858.6350276252));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -858.635 out of [4,959, 4,959] range
         //
         verifyException("org.apache.commons.math3.analysis.function.Logit", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      try { 
        newtonRaphsonSolver0.computeObjectiveValueAndDerivative((-858.6350276252));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }
}
