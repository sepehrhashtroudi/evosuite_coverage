/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:52:01 GMT 2022
 */

package org.apache.commons.math3.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.HarmonicOscillator;
import org.apache.commons.math3.analysis.function.Sin;
import org.apache.commons.math3.analysis.solvers.MullerSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MullerSolver_ESTest extends MullerSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Sin sin0 = new Sin();
      MullerSolver mullerSolver0 = new MullerSolver((-1697.5942), (-1697.5942));
      // Undeclared exception!
      try { 
        mullerSolver0.solve(956, (UnivariateFunction) sin0, 1.0E-15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [\uFFFD, \uFFFD], values: [\uFFFD, \uFFFD]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver();
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(0.0, (-2519.6524654845625), (-2.0));
      mullerSolver0.solve(120, (UnivariateFunction) harmonicOscillator0, (-1.1271), 1934.09);
      double double0 = mullerSolver0.doSolve();
      assertEquals((-1.1271), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver();
      try { 
        mullerSolver0.doSolve();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, 0]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(353.0);
      assertEquals(0.0, mullerSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver();
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(120, (-2519.6524654845625), (-2.0));
      double double0 = mullerSolver0.solve(120, (UnivariateFunction) harmonicOscillator0, (double) 120, 1934.09);
      assertEquals(1305.137570324645, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver();
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(0.7439794576048832, (-2519.6524654845625), (-2.0));
      double double0 = mullerSolver0.solve(120, (UnivariateFunction) harmonicOscillator0, 182.8049942, 1934.09);
      assertEquals(1482.1283920645892, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(3.141592653589793, 3.141592653589793);
      Sin sin0 = new Sin();
      mullerSolver0.setup(4, sin0, 1.0, 4, 3.141592653589793);
      mullerSolver0.doSolve();
      try { 
        mullerSolver0.doSolve();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (4) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }
}
