/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 26 20:18:02 GMT 2023
 */

package org.apache.commons.compress.archivers.ar;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArArchiveEntry_ESTest extends ArArchiveEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("$&>+5&Ls/m", 0L);
      int int0 = arArchiveEntry0.getUserId();
      assertEquals(33188, arArchiveEntry0.getMode());
      assertEquals(1392409281320L, arArchiveEntry0.getLastModified());
      assertEquals(0, int0);
      assertEquals(0, arArchiveEntry0.getGroupId());
      assertEquals(0L, arArchiveEntry0.getSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry((String) null, 1041L, (-2997), (-2997), (-1), (-1));
      int int0 = arArchiveEntry0.getUserId();
      assertEquals((-1), arArchiveEntry0.getMode());
      assertEquals((-1L), arArchiveEntry0.getLastModified());
      assertEquals((-2997), arArchiveEntry0.getGroupId());
      assertEquals(1041L, arArchiveEntry0.getLength());
      assertEquals((-2997), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("", 0L, 3871, (-260), 3871, 0L);
      arArchiveEntry0.getSize();
      assertEquals(3871, arArchiveEntry0.getUserId());
      assertEquals(3871, arArchiveEntry0.getMode());
      assertEquals((-260), arArchiveEntry0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry((String) null, 1041L, (-2997), (-2997), (-1), (-1));
      long long0 = arArchiveEntry0.getSize();
      assertEquals(1041L, long0);
      assertEquals((-1), arArchiveEntry0.getMode());
      assertEquals((-1L), arArchiveEntry0.getLastModified());
      assertEquals((-2997), arArchiveEntry0.getUserId());
      assertEquals((-2997), arArchiveEntry0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry((String) null, 1041L, (-2997), (-2997), (-1), (-1));
      arArchiveEntry0.getName();
      assertEquals((-1), arArchiveEntry0.getMode());
      assertEquals((-2997), arArchiveEntry0.getUserId());
      assertEquals((-1L), arArchiveEntry0.getLastModified());
      assertEquals((-2997), arArchiveEntry0.getGroupId());
      assertEquals(1041L, arArchiveEntry0.getLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("", 2821L, (-947), (-947), 1071, (-947));
      arArchiveEntry0.getName();
      assertEquals((-947L), arArchiveEntry0.getLastModified());
      assertEquals(1071, arArchiveEntry0.getMode());
      assertEquals((-947), arArchiveEntry0.getGroupId());
      assertEquals(2821L, arArchiveEntry0.getLength());
      assertEquals((-947), arArchiveEntry0.getUserId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("N|[r@jmk;e", (-802L), 2049, 0, 0, 0);
      int int0 = arArchiveEntry0.getMode();
      assertEquals(2049, arArchiveEntry0.getUserId());
      assertEquals(0, arArchiveEntry0.getGroupId());
      assertEquals(0, int0);
      assertEquals((-802L), arArchiveEntry0.getLength());
      assertEquals(0L, arArchiveEntry0.getLastModified());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry((String) null, 1041L, (-2997), (-2997), (-1), (-1));
      int int0 = arArchiveEntry0.getMode();
      assertEquals((-1), int0);
      assertEquals((-1L), arArchiveEntry0.getLastModified());
      assertEquals(1041L, arArchiveEntry0.getLength());
      assertEquals((-2997), arArchiveEntry0.getGroupId());
      assertEquals((-2997), arArchiveEntry0.getUserId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("", 0L);
      long long0 = arArchiveEntry0.getLength();
      assertEquals(0L, long0);
      assertEquals(33188, arArchiveEntry0.getMode());
      assertEquals(0, arArchiveEntry0.getUserId());
      assertEquals(0, arArchiveEntry0.getGroupId());
      assertEquals(1392409281320L, arArchiveEntry0.getLastModified());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("org.apache.commons.compress.archivers.ar.ArArchiveEntry", (-2324L), 0, 0, 0, (-2324L));
      long long0 = arArchiveEntry0.getLength();
      assertEquals((-2324L), arArchiveEntry0.getLastModified());
      assertEquals(0, arArchiveEntry0.getUserId());
      assertEquals(0, arArchiveEntry0.getGroupId());
      assertEquals((-2324L), long0);
      assertEquals(0, arArchiveEntry0.getMode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("N|[r@jmk;e", (-802L), 2049, 0, 0, 0);
      long long0 = arArchiveEntry0.getLastModified();
      assertEquals(0L, long0);
      assertEquals(2049, arArchiveEntry0.getUserId());
      assertEquals(0, arArchiveEntry0.getMode());
      assertEquals((-802L), arArchiveEntry0.getLength());
      assertEquals(0, arArchiveEntry0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry((String) null, 1041L, (-2997), (-2997), (-1), (-1));
      long long0 = arArchiveEntry0.getLastModified();
      assertEquals((-2997), arArchiveEntry0.getGroupId());
      assertEquals((-2997), arArchiveEntry0.getUserId());
      assertEquals((-1L), long0);
      assertEquals(1041L, arArchiveEntry0.getSize());
      assertEquals((-1), arArchiveEntry0.getMode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("!k@qMU9gBqW b$H:c", (-1452L), 1, 2100, 2100, 1);
      int int0 = arArchiveEntry0.getGroupId();
      assertEquals(2100, arArchiveEntry0.getMode());
      assertEquals(2100, int0);
      assertEquals((-1452L), arArchiveEntry0.getLength());
      assertEquals(1, arArchiveEntry0.getUserId());
      assertEquals(1L, arArchiveEntry0.getLastModified());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry((String) null, 1041L, (-2997), (-2997), (-1), (-1));
      int int0 = arArchiveEntry0.getGroupId();
      assertEquals((-1L), arArchiveEntry0.getLastModified());
      assertEquals((-2997), int0);
      assertEquals(1041L, arArchiveEntry0.getLength());
      assertEquals((-2997), arArchiveEntry0.getUserId());
      assertEquals((-1), arArchiveEntry0.getMode());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry((String) null, 1041L, (-2997), (-2997), (-1), (-1));
      long long0 = arArchiveEntry0.getLength();
      assertEquals((-2997), arArchiveEntry0.getGroupId());
      assertEquals((-2997), arArchiveEntry0.getUserId());
      assertEquals((-1), arArchiveEntry0.getMode());
      assertEquals(1041L, long0);
      assertEquals((-1L), arArchiveEntry0.getLastModified());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("?(r.q;bOoWps,wV", (-2263L));
      arArchiveEntry0.getName();
      assertEquals(33188, arArchiveEntry0.getMode());
      assertEquals((-2263L), arArchiveEntry0.getSize());
      assertEquals(0, arArchiveEntry0.getGroupId());
      assertEquals(0, arArchiveEntry0.getUserId());
      assertEquals(1392409281320L, arArchiveEntry0.getLastModified());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("", 7, 7, 7, 7, 7);
      int int0 = arArchiveEntry0.getMode();
      assertEquals(7, int0);
      assertEquals(7, arArchiveEntry0.getUserId());
      assertEquals(7, arArchiveEntry0.getGroupId());
      assertEquals(7L, arArchiveEntry0.getLength());
      assertEquals(7L, arArchiveEntry0.getLastModified());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("", 7, 7, 7, 7, 7);
      int int0 = arArchiveEntry0.getUserId();
      assertEquals(7, arArchiveEntry0.getMode());
      assertEquals(7, int0);
      assertEquals(7L, arArchiveEntry0.getLastModified());
      assertEquals(7L, arArchiveEntry0.getSize());
      assertEquals(7, arArchiveEntry0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("", 7, 7, 7, 7, 7);
      long long0 = arArchiveEntry0.getLastModified();
      assertEquals(7L, long0);
      assertEquals(7, arArchiveEntry0.getMode());
      assertEquals(7L, arArchiveEntry0.getSize());
      assertEquals(7, arArchiveEntry0.getUserId());
      assertEquals(7, arArchiveEntry0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("?(r.q;bOoWps,wV", (-2263L));
      boolean boolean0 = arArchiveEntry0.isDirectory();
      assertEquals(1392409281320L, arArchiveEntry0.getLastModified());
      assertEquals(33188, arArchiveEntry0.getMode());
      assertEquals((-2263L), arArchiveEntry0.getSize());
      assertFalse(boolean0);
      assertEquals(0, arArchiveEntry0.getGroupId());
      assertEquals(0, arArchiveEntry0.getUserId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("?(r.q;bOoWps,wV", (-2263L));
      long long0 = arArchiveEntry0.getSize();
      assertEquals((-2263L), long0);
      assertEquals(0, arArchiveEntry0.getUserId());
      assertEquals(1392409281320L, arArchiveEntry0.getLastModified());
      assertEquals(0, arArchiveEntry0.getGroupId());
      assertEquals(33188, arArchiveEntry0.getMode());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("?(r.q;bOoWps,wV", (-2263L));
      int int0 = arArchiveEntry0.getGroupId();
      assertEquals(0, int0);
      assertEquals(0, arArchiveEntry0.getUserId());
      assertEquals(1392409281320L, arArchiveEntry0.getLastModified());
      assertEquals(33188, arArchiveEntry0.getMode());
      assertEquals((-2263L), arArchiveEntry0.getSize());
  }
}
