/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 05 07:18:25 GMT 2023
 */

package com.fasterxml.jackson.dataformat.xml.util;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.dataformat.xml.util.XmlInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlInfo_ESTest extends XmlInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean boolean1 = Boolean.TRUE;
      XmlInfo xmlInfo0 = new XmlInfo(boolean0, "", boolean1, (Boolean) null);
      boolean boolean2 = xmlInfo0.isCData();
      assertFalse(xmlInfo0.isAttribute());
      assertTrue(xmlInfo0.isText());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("0 ,| 1C!s{T'O8^qvF");
      Boolean boolean1 = Boolean.valueOf(true);
      XmlInfo xmlInfo0 = new XmlInfo(boolean0, "0 ,| 1C!s{T'O8^qvF", boolean1, boolean1);
      boolean boolean2 = xmlInfo0.isCData();
      assertTrue(boolean2);
      assertEquals("0 ,| 1C!s{T'O8^qvF", xmlInfo0.getNamespace());
      assertTrue(xmlInfo0.isText());
      assertFalse(xmlInfo0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = new Boolean("E<");
      XmlInfo xmlInfo0 = new XmlInfo(boolean0, "E<", boolean1, boolean1);
      boolean boolean2 = xmlInfo0.isAttribute();
      assertFalse(xmlInfo0.isCData());
      assertFalse(xmlInfo0.isText());
      assertTrue(boolean2);
      assertEquals("E<", xmlInfo0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean boolean1 = Boolean.TRUE;
      XmlInfo xmlInfo0 = new XmlInfo(boolean0, "", boolean1, (Boolean) null);
      boolean boolean2 = xmlInfo0.isText();
      assertFalse(xmlInfo0.isCData());
      assertFalse(xmlInfo0.isAttribute());
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlInfo xmlInfo0 = new XmlInfo((Boolean) null, "", (Boolean) null, (Boolean) null);
      String string0 = xmlInfo0.getNamespace();
      assertFalse(xmlInfo0.isAttribute());
      assertNotNull(string0);
      assertFalse(xmlInfo0.isText());
      assertFalse(xmlInfo0.isCData());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlInfo xmlInfo0 = new XmlInfo((Boolean) null, (String) null, (Boolean) null, (Boolean) null);
      assertFalse(xmlInfo0.isCData());
      assertFalse(xmlInfo0.isText());
      assertFalse(xmlInfo0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      XmlInfo xmlInfo0 = new XmlInfo(boolean0, "#!L=2O(~3O9IV5vEu8q", boolean0, boolean0);
      xmlInfo0.isAttribute();
      assertEquals("#!L=2O(~3O9IV5vEu8q", xmlInfo0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      XmlInfo xmlInfo0 = new XmlInfo(boolean0, "F9 >c3", boolean0, boolean0);
      xmlInfo0.isText();
      assertEquals("F9 >c3", xmlInfo0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      XmlInfo xmlInfo0 = new XmlInfo(boolean0, "#!L=2O(~3O9IV5vEu8q", boolean0, boolean0);
      String string0 = xmlInfo0.getNamespace();
      assertNotNull(string0);
      assertEquals("#!L=2O(~3O9IV5vEu8q", string0);
  }
}
