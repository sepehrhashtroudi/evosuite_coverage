/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 19 03:21:55 GMT 2022
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.chrono.GJLocaleSymbols;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GJLocaleSymbols_ESTest extends GJLocaleSymbols_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      locale0.getDisplayName();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-1436));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-194));
      integerArray0[1] = integer1;
      linkedList1.toArray(integerArray0);
      linkedList1.add(locale0);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekTextToValue("am");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"am\" for dayOfWeek is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.monthOfYearValueToText(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("iu/49Jhww5kxav");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.monthOfYearValueToShortText(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.US;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.monthOfYearValueToShortText(2);
      assertEquals("Feb", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.UK;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.halfdayValueToText(0);
      assertEquals("AM", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.UK;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.eraValueToText(0);
      assertEquals("BC", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.dayOfWeekValueToText(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.dayOfWeekValueToShortText(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.UK;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearValueToText(16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.eraTextToValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekValueToText(10000);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10000
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekValueToShortText((-2208));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2208
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekTextToValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.UK;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.halfdayTextToValue("AM");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = new Locale("$G?AEhzCp>Z+s&Jk_l");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.halfdayTextToValue("|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"|\" for halfdayOfDay is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.dayOfWeekTextToValue("\u6C34");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.monthOfYearTextToValue("marzo");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale locale0 = new Locale("}I\"}%TQ", "}I\"}%TQ");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearTextToValue("}I\"}%TQ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"}I\"}%TQ\" for monthOfYear is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.US;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.eraTextToValue("BCE");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locale locale0 = Locale.UK;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.eraTextToValue("AM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"AM\" for era is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale((Locale) null);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearTextToValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Locale locale0 = Locale.US;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getHalfdayMaxTextLength();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale locale0 = Locale.US;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getMonthMaxShortTextLength();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.dayOfWeekValueToText(4);
      assertEquals("jeudi", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.halfdayValueToText(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Locale locale0 = Locale.US;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getDayOfWeekMaxShortTextLength();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.eraValueToText((-1243));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1243
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getEraMaxTextLength();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.dayOfWeekValueToShortText(3);
      assertEquals("\u6C34", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getDayOfWeekMaxTextLength();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getMonthMaxTextLength();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.monthOfYearValueToText(3);
      assertEquals("marzo", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearValueToShortText(2671);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2671
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }
}
