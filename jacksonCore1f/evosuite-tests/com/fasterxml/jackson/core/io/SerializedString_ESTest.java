/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:14:38 GMT 2023
 */

package com.fasterxml.jackson.core.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.io.SerializedString;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializedString_ESTest extends SerializedString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("d");
      char[] charArray0 = new char[1];
      int int0 = serializedString0.appendUnquoted(charArray0, 0);
      assertArrayEquals(new char[] {'d'}, charArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1);
      int int0 = serializedString0.writeUnquotedUTF8(bufferedOutputStream0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      int int0 = serializedString0.writeQuotedUTF8(mockPrintStream0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      String string0 = serializedString0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.io.SerializedString");
      serializedString0._jdkSerializeValue = "we`A ";
      SerializedString serializedString1 = (SerializedString)serializedString0.readResolve();
      assertEquals("we`A ", serializedString1.getValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      int int0 = serializedString0.putQuotedUTF8(byteBuffer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      String string0 = serializedString0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      int int0 = serializedString0.charLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = serializedString0.asUnquotedUTF8();
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = serializedString0.asQuotedUTF8();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = new byte[4];
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("]H");
      char[] charArray0 = new char[7];
      int int0 = serializedString0.appendUnquoted(charArray0, 0);
      assertArrayEquals(new char[] {']', 'H', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = new byte[1];
      int int0 = serializedString0.appendQuotedUTF8(byteArray0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      char[] charArray0 = new char[7];
      int int0 = serializedString0.appendQuoted(charArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("7");
      // Undeclared exception!
      try { 
        serializedString0.writeUnquotedUTF8((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        serializedString0.writeUnquotedUTF8(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("gQCFxhn");
      // Undeclared exception!
      try { 
        serializedString0.writeQuotedUTF8((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.io.SerializedString");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        serializedString0.writeQuotedUTF8(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Mo8$T0v_,j{,R[>");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2816);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        serializedString0.putQuotedUTF8(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("tD(RJ(");
      // Undeclared exception!
      try { 
        serializedString0.appendUnquotedUTF8((byte[]) null, (-1715));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        serializedString0.appendUnquotedUTF8(byteArray0, (byte) (-57));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      // Undeclared exception!
      try { 
        serializedString0.appendUnquoted((char[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Null String illegal for SerializedString");
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        serializedString0.appendUnquoted(charArray0, (-2065));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.util.TextBuffer");
      // Undeclared exception!
      try { 
        serializedString0.appendQuotedUTF8((byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("i^sYA-vr");
      char[] charArray0 = serializedString0.asQuotedChars();
      // Undeclared exception!
      try { 
        serializedString0.appendQuoted(charArray0, (-283));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SerializedString serializedString0 = null;
      try {
        serializedString0 = new SerializedString((String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Null String illegal for SerializedString
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      SerializedString serializedString1 = new SerializedString("et`hKDu C");
      boolean boolean0 = serializedString0.equals(serializedString1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      boolean boolean0 = serializedString0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      boolean boolean0 = serializedString0.equals(serializedString0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("ycM~F%nBJ1+5:Ly_` ");
      boolean boolean0 = serializedString0.equals("ycM~F%nBJ1+5:Ly_` ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("6Y?pRrR}(QN[&\\");
      // Undeclared exception!
      try { 
        serializedString0.putUnquotedUTF8((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("D\"b]m]YaYzT");
      // Undeclared exception!
      try { 
        serializedString0.putQuotedUTF8((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Mo8$T0v_,j{,R[>");
      MockPrintStream mockPrintStream0 = new MockPrintStream("M");
      serializedString0.writeUnquotedUTF8(mockPrintStream0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2816);
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals(2801, byteBuffer0.remaining());
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      serializedString0.asUnquotedUTF8();
      int int0 = serializedString0.writeUnquotedUTF8(byteArrayOutputStream0);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Mo8$T0v_,j{,R[>");
      MockPrintStream mockPrintStream0 = new MockPrintStream("M");
      serializedString0.writeQuotedUTF8(mockPrintStream0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2816);
      int int0 = serializedString0.putQuotedUTF8(byteBuffer0);
      assertEquals("java.nio.DirectByteBuffer[pos=15 lim=2816 cap=2816]", byteBuffer0.toString());
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray0 = new byte[9];
      serializedString0.appendQuotedUTF8(byteArray0, (byte)32);
      int int0 = serializedString0.writeQuotedUTF8(byteArrayOutputStream0);
      assertEquals("et`hKDu C", byteArrayOutputStream0.toString());
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("di");
      char[] charArray0 = new char[1];
      int int0 = serializedString0.appendUnquoted(charArray0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      char[] charArray0 = new char[5];
      int int0 = serializedString0.appendUnquoted(charArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("zKb_Oxbp0_SFgI");
      byte[] byteArray0 = new byte[9];
      serializedString0._unquotedUTF8Ref = byteArray0;
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, (byte)0);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("@aP6le");
      char[] charArray0 = new char[6];
      int int0 = serializedString0.appendQuoted(charArray0, '\u0000');
      assertArrayEquals(new char[] {'@', 'a', 'P', '6', 'l', 'e'}, charArray0);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      serializedString0.asQuotedChars();
      // Undeclared exception!
      try { 
        serializedString0.appendQuoted((char[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      byte[] byteArray0 = new byte[9];
      serializedString0.appendQuotedUTF8(byteArray0, (byte)32);
      // Undeclared exception!
      try { 
        serializedString0.appendQuotedUTF8(byteArray0, (byte) (-40));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("PkuV9");
      byte[] byteArray0 = serializedString0.asQuotedUTF8();
      assertNotNull(byteArray0);
      
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      serializedString0.putQuotedUTF8(byteBuffer0);
      int int0 = serializedString0.putQuotedUTF8(byteBuffer0);
      assertEquals(0, byteBuffer0.remaining());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("ycM~F%nBJ1+5:Ly_` ");
      byte[] byteArray0 = new byte[2];
      int int0 = serializedString0.appendQuotedUTF8(byteArray0, 'p');
      assertEquals((-1), int0);
      
      byte[] byteArray1 = serializedString0.asQuotedUTF8();
      assertNotNull(byteArray1);
      assertEquals(19, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("et`hKDu C");
      byte[] byteArray0 = serializedString0.asUnquotedUTF8();
      assertNotNull(byteArray0);
      
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, 9);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("ycM~F%nBJ1+5:Ly_` ");
      byte[] byteArray0 = new byte[2];
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, 0);
      assertEquals((-1), int0);
      
      byte[] byteArray1 = serializedString0.asUnquotedUTF8();
      assertNotNull(byteArray1);
      assertEquals(19, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("ycM~F%nBJ1+5:Ly_` ");
      char[] charArray0 = new char[9];
      int int0 = serializedString0.appendQuoted(charArray0, 'n');
      assertEquals((-1), int0);
      
      char[] charArray1 = serializedString0.asQuotedChars();
      assertEquals(19, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.util.TextBuffer");
      // Undeclared exception!
      try { 
        serializedString0.readResolve();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Null String illegal for SerializedString
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("ycM~F%nBJ1+5:Ly_` ");
      serializedString0.hashCode();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("ycM~F%nBJ1+5:Ly_` ");
      String string0 = serializedString0.toString();
      assertEquals("ycM~F%nBJ1+5:Ly_` ", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("ycM~F%nBJ1+5:Ly_` ");
      int int0 = serializedString0.charLength();
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.util.TextBuffer");
      String string0 = serializedString0.getValue();
      assertEquals("com.fasterxml.jackson.core.util.TextBuffer", string0);
  }
}
