/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:14:02 GMT 2023
 */

package com.fasterxml.jackson.core.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.io.SegmentedStringWriter;
import com.fasterxml.jackson.core.util.BufferRecycler;
import java.io.Writer;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SegmentedStringWriter_ESTest extends SegmentedStringWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      segmentedStringWriter0.write("com.fasterxml.jackson.core.io.SegmentedStringWriter", 1, 1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      // Undeclared exception!
      try { 
        segmentedStringWriter0.write((char[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        segmentedStringWriter0.write(charArray0, (-1), 262145);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      // Undeclared exception!
      try { 
        segmentedStringWriter0.write((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SegmentedStringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      segmentedStringWriter0.append((CharSequence) charBuffer0);
      segmentedStringWriter0.getAndClear();
      // Undeclared exception!
      try { 
        segmentedStringWriter0.write("sKzPzc8]<y{gyW", (-939), 2000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      segmentedStringWriter0.write(",x.wz");
      segmentedStringWriter0.getAndClear();
      // Undeclared exception!
      try { 
        segmentedStringWriter0.write("Eqq1+2 0;x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      CharBuffer charBuffer0 = CharBuffer.allocate(2000);
      segmentedStringWriter0.append((CharSequence) charBuffer0);
      segmentedStringWriter0.getAndClear();
      // Undeclared exception!
      try { 
        segmentedStringWriter0.write(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter((BufferRecycler) null);
      // Undeclared exception!
      try { 
        segmentedStringWriter0.append((CharSequence) "\u0000", 0, 262145);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      // Undeclared exception!
      try { 
        segmentedStringWriter0.append((CharSequence) null, 0, 1084);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SegmentedStringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        segmentedStringWriter0.append((CharSequence) charBuffer0, 4, 2000);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      CharBuffer charBuffer0 = CharBuffer.allocate(200);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.flip();
      // Undeclared exception!
      try { 
        segmentedStringWriter0.append((CharSequence) charBuffer1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      segmentedStringWriter0.append('>');
      segmentedStringWriter0.getAndClear();
      // Undeclared exception!
      try { 
        segmentedStringWriter0.append('`');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      segmentedStringWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter((BufferRecycler) null);
      char[] charArray0 = new char[4];
      segmentedStringWriter0.write(charArray0);
      assertEquals(4, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter((BufferRecycler) null);
      segmentedStringWriter0.getAndClear();
      // Undeclared exception!
      try { 
        segmentedStringWriter0.append((CharSequence) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      segmentedStringWriter0.close();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter((BufferRecycler) null);
      char[] charArray0 = new char[4];
      segmentedStringWriter0.write(charArray0, 0, 0);
      assertEquals(4, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter((BufferRecycler) null);
      Writer writer0 = segmentedStringWriter0.append((CharSequence) "", 0, 0);
      assertSame(writer0, segmentedStringWriter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter((BufferRecycler) null);
      segmentedStringWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      SegmentedStringWriter segmentedStringWriter0 = new SegmentedStringWriter(bufferRecycler0);
      // Undeclared exception!
      try { 
        segmentedStringWriter0.write("", 2000, 2000);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
