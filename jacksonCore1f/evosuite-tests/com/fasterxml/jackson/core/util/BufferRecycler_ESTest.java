/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:34:17 GMT 2023
 */

package com.fasterxml.jackson.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.util.BufferRecycler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BufferRecycler_ESTest extends BufferRecycler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      BufferRecycler.CharBufferType bufferRecycler_CharBufferType0 = BufferRecycler.CharBufferType.CONCAT_BUFFER;
      char[] charArray0 = bufferRecycler0.allocCharBuffer(bufferRecycler_CharBufferType0);
      BufferRecycler.CharBufferType bufferRecycler_CharBufferType1 = BufferRecycler.CharBufferType.NAME_COPY_BUFFER;
      bufferRecycler0.releaseCharBuffer(bufferRecycler_CharBufferType1, charArray0);
      char[] charArray1 = bufferRecycler0.allocCharBuffer(bufferRecycler_CharBufferType1, 302);
      assertEquals(2000, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      BufferRecycler.CharBufferType bufferRecycler_CharBufferType0 = BufferRecycler.CharBufferType.TEXT_BUFFER;
      char[] charArray0 = bufferRecycler0.allocCharBuffer(bufferRecycler_CharBufferType0, 200);
      assertEquals(200, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      BufferRecycler.ByteBufferType bufferRecycler_ByteBufferType0 = BufferRecycler.ByteBufferType.BASE64_CODEC_BUFFER;
      byte[] byteArray0 = new byte[0];
      bufferRecycler0.releaseByteBuffer(bufferRecycler_ByteBufferType0, byteArray0);
      byte[] byteArray1 = bufferRecycler0.allocByteBuffer(bufferRecycler_ByteBufferType0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      // Undeclared exception!
      try { 
        bufferRecycler0.releaseCharBuffer((BufferRecycler.CharBufferType) null, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.BufferRecycler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      // Undeclared exception!
      try { 
        bufferRecycler0.releaseByteBuffer((BufferRecycler.ByteBufferType) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.BufferRecycler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      // Undeclared exception!
      try { 
        bufferRecycler0.allocCharBuffer((BufferRecycler.CharBufferType) null, 2000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.BufferRecycler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      // Undeclared exception!
      try { 
        bufferRecycler0.allocCharBuffer((BufferRecycler.CharBufferType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.BufferRecycler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      // Undeclared exception!
      try { 
        bufferRecycler0.allocByteBuffer((BufferRecycler.ByteBufferType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.BufferRecycler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      BufferRecycler.CharBufferType bufferRecycler_CharBufferType0 = BufferRecycler.CharBufferType.CONCAT_BUFFER;
      char[] charArray0 = bufferRecycler0.allocCharBuffer(bufferRecycler_CharBufferType0);
      bufferRecycler0.releaseCharBuffer(bufferRecycler_CharBufferType0, charArray0);
      char[] charArray1 = bufferRecycler0.allocCharBuffer(bufferRecycler_CharBufferType0, 302);
      assertSame(charArray1, charArray0);
      assertEquals(2000, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      BufferRecycler.ByteBufferType bufferRecycler_ByteBufferType0 = BufferRecycler.ByteBufferType.WRITE_ENCODING_BUFFER;
      byte[] byteArray0 = bufferRecycler0.allocByteBuffer(bufferRecycler_ByteBufferType0);
      bufferRecycler0.releaseByteBuffer(bufferRecycler_ByteBufferType0, byteArray0);
      byte[] byteArray1 = bufferRecycler0.allocByteBuffer(bufferRecycler_ByteBufferType0);
      assertNotNull(byteArray1);
      assertEquals(4000, byteArray1.length);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      BufferRecycler.CharBufferType bufferRecycler_CharBufferType0 = BufferRecycler.CharBufferType.NAME_COPY_BUFFER;
      char[] charArray0 = bufferRecycler0.allocCharBuffer(bufferRecycler_CharBufferType0);
      bufferRecycler0.releaseCharBuffer(bufferRecycler_CharBufferType0, charArray0);
      assertEquals(200, charArray0.length);
      
      char[] charArray1 = bufferRecycler0.allocCharBuffer(bufferRecycler_CharBufferType0, 2000);
      assertEquals(2000, charArray1.length);
  }
}
