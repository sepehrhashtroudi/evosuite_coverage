/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 20:58:54 GMT 2023
 */

package com.fasterxml.jackson.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.JsonStreamContext;
import com.fasterxml.jackson.core.json.JsonReadContext;
import com.fasterxml.jackson.core.json.JsonWriteContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonStreamContext_ESTest extends JsonStreamContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = new JsonReadContext(jsonReadContext0, 4365, (-1), 4365);
      boolean boolean0 = jsonReadContext1.inObject();
      assertFalse(boolean0);
      assertFalse(jsonReadContext0.inObject());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = new JsonReadContext(jsonReadContext0, (-498), (-1526), (-498));
      boolean boolean0 = jsonReadContext1.inRoot();
      assertTrue(jsonReadContext0.inRoot());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonStreamContext jsonStreamContext0 = jsonReadContext0.getParent();
      assertNull(jsonStreamContext0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildObjectContext();
      JsonWriteContext jsonWriteContext2 = jsonWriteContext1.createChildArrayContext();
      JsonStreamContext jsonStreamContext0 = jsonWriteContext2.getParent();
      assertEquals("OBJECT", jsonStreamContext0.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildArrayContext();
      JsonWriteContext jsonWriteContext2 = jsonWriteContext1.createChildObjectContext();
      JsonStreamContext jsonStreamContext0 = jsonWriteContext2.getParent();
      assertSame(jsonStreamContext0, jsonWriteContext1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildArrayContext();
      jsonWriteContext0.writeValue();
      jsonWriteContext0.writeValue();
      JsonStreamContext jsonStreamContext0 = jsonWriteContext1.getParent();
      assertNotSame(jsonStreamContext0, jsonWriteContext1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext(80, 80);
      assertEquals(0, jsonReadContext0.getEntryCount());
      
      jsonReadContext0.expectComma();
      int int0 = jsonReadContext0.getEntryCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildObjectContext();
      JsonStreamContext jsonStreamContext0 = jsonWriteContext1.getParent();
      jsonStreamContext0._index = (-1391);
      int int0 = jsonStreamContext0.getEntryCount();
      assertEquals((-1390), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      String string0 = jsonWriteContext0.getCurrentName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      jsonReadContext0.setCurrentName(";$K)");
      String string0 = jsonReadContext0.getCurrentName();
      assertEquals(";$K)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext(0, 0);
      jsonReadContext0.setCurrentName("");
      String string0 = jsonReadContext0.getCurrentName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      jsonWriteContext0.writeValue();
      jsonWriteContext0.writeValue();
      int int0 = jsonWriteContext0.getCurrentIndex();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      int int0 = jsonWriteContext0.getCurrentIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      jsonReadContext0.expectComma();
      int int0 = jsonReadContext0.getCurrentIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = new JsonReadContext(jsonReadContext0, 1235, (-498), 1235);
      String string0 = jsonReadContext1.getTypeDesc();
      assertEquals("ROOT", jsonReadContext0.getTypeDesc());
      assertEquals("?", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildObjectContext();
      String string0 = jsonWriteContext1.getTypeDesc();
      assertEquals("OBJECT", string0);
      assertEquals("ROOT", jsonWriteContext0.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildArrayContext();
      String string0 = jsonWriteContext1.getTypeDesc();
      assertEquals("ARRAY", string0);
      assertEquals("ROOT", jsonWriteContext0.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      String string0 = jsonReadContext0.getTypeDesc();
      assertEquals("ROOT", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildArrayContext();
      jsonWriteContext0.createChildObjectContext();
      boolean boolean0 = jsonWriteContext1.inObject();
      assertFalse(jsonWriteContext0.inObject());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      boolean boolean0 = jsonWriteContext0.inObject();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      boolean boolean0 = jsonReadContext0.inRoot();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = new JsonReadContext(jsonReadContext0, 1232, 1232, 1232);
      boolean boolean0 = jsonReadContext1.inRoot();
      assertFalse(boolean0);
      assertTrue(jsonReadContext0.inRoot());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = JsonWriteContext.createRootContext();
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildArrayContext();
      boolean boolean0 = jsonWriteContext1.inArray();
      assertTrue(boolean0);
      assertFalse(jsonWriteContext0.inArray());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      boolean boolean0 = jsonReadContext0.inArray();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      int int0 = jsonReadContext0.getEntryCount();
      assertEquals(0, int0);
  }
}
