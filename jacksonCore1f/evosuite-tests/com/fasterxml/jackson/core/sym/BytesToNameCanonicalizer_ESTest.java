/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:24:33 GMT 2023
 */

package com.fasterxml.jackson.core.sym;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;
import com.fasterxml.jackson.core.sym.Name;
import com.fasterxml.jackson.core.sym.Name1;
import com.fasterxml.jackson.core.sym.Name3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BytesToNameCanonicalizer_ESTest extends BytesToNameCanonicalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Name name0 = BytesToNameCanonicalizer.getEmptyName();
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name0, (BytesToNameCanonicalizer.Bucket) null);
      int[] intArray0 = new int[7];
      bytesToNameCanonicalizer_Bucket0.find((-231), intArray0, (-1));
      assertEquals(1, bytesToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Name name0 = BytesToNameCanonicalizer.getEmptyName();
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name0, (BytesToNameCanonicalizer.Bucket) null);
      bytesToNameCanonicalizer_Bucket0.find(63, 608, 63);
      assertEquals(1, bytesToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-110);
      int[] intArray0 = BytesToNameCanonicalizer.calcQuads(byteArray0);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-1845493760), 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[6];
      intArray0[3] = 2184;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.calcHash(intArray0, 909);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((-2090));
      int[] intArray0 = new int[4];
      intArray0[2] = (-2090);
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(intArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(64);
      int[] intArray0 = new int[4];
      intArray0[0] = 64;
      intArray0[1] = 64;
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(intArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((-2090));
      int[] intArray0 = new int[4];
      intArray0[0] = (-2090);
      intArray0[1] = (-2090);
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(intArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((-726));
      int[] intArray0 = new int[9];
      intArray0[0] = (-726);
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(intArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(0);
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(0, (-3631));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((-2653));
      int[] intArray0 = new int[4];
      bytesToNameCanonicalizer0._mainHash = intArray0;
      intArray0[0] = 84583;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(4352);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      bytesToNameCanonicalizer1.addName("X", 304, 0);
      bytesToNameCanonicalizer1.release();
      int int0 = bytesToNameCanonicalizer0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      bytesToNameCanonicalizer0._longestCollisionList = 1999;
      int int0 = bytesToNameCanonicalizer0.maxCollisionLength();
      assertEquals(1999, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      bytesToNameCanonicalizer0._longestCollisionList = (-1364);
      int int0 = bytesToNameCanonicalizer0.maxCollisionLength();
      assertEquals((-1364), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((-1588));
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(true, true);
      assertEquals(0, bytesToNameCanonicalizer1.size());
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
      assertFalse(bytesToNameCanonicalizer1.maybeDirty());
      assertEquals((-1588), bytesToNameCanonicalizer1.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer1.collisionCount());
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((int) (byte) (-114));
      int int0 = bytesToNameCanonicalizer0.hashSeed();
      assertEquals(0, bytesToNameCanonicalizer0.size());
      assertEquals((-114), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis((-3128));
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      assertEquals((-3129), bytesToNameCanonicalizer0.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      bytesToNameCanonicalizer0._collCount = (-795);
      int int0 = bytesToNameCanonicalizer0.collisionCount();
      assertEquals((-795), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = BytesToNameCanonicalizer.calcQuads(byteArray0);
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(3);
      int[] intArray0 = new int[3];
      intArray0[0] = 3;
      intArray0[1] = 3;
      int int0 = bytesToNameCanonicalizer0.calcHash(intArray0, 3);
      assertEquals(100832458, int0);
      assertEquals(0, bytesToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int int0 = bytesToNameCanonicalizer0.calcHash(1646, 535);
      assertEquals(846458534, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int int0 = bytesToNameCanonicalizer0.calcHash((-68), 337);
      assertEquals((-812805320), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(618);
      int int0 = bytesToNameCanonicalizer0.calcHash(618);
      assertEquals(0, int0);
      assertEquals(0, bytesToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int int0 = bytesToNameCanonicalizer0.calcHash((-50));
      assertEquals(0, bytesToNameCanonicalizer0.size());
      assertEquals((-845877624), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      int int0 = bytesToNameCanonicalizer1.bucketCount();
      assertEquals(0, bytesToNameCanonicalizer1.size());
      assertEquals(64, int0);
      assertEquals(0, bytesToNameCanonicalizer1.collisionCount());
      assertFalse(bytesToNameCanonicalizer1.maybeDirty());
      assertEquals(839877741, bytesToNameCanonicalizer1.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      int[] intArray0 = new int[8];
      bytesToNameCanonicalizer1.addName("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo", intArray0, 3);
      assertEquals(1, bytesToNameCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, true);
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer1.makeChild(false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[6];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(intArray0, 660);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[0];
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName((-1659), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesToNameCanonicalizer.calcQuads((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.calcHash((int[]) null, 4077);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("x,X0#`4a;ia'~cx0", intArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Qlen must >= 3
         //
         verifyException("com.fasterxml.jackson.core.sym.NameN", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      Name[] nameArray0 = new Name[0];
      bytesToNameCanonicalizer0._mainNames = nameArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("M>na&KtgT[\"n^wK", (-2214), 3452);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(3);
      int[] intArray0 = new int[3];
      int int0 = bytesToNameCanonicalizer0.calcHash(intArray0, 3);
      assertEquals((-967365094), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[6];
      intArray0[0] = 33;
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName((-726), 64);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(17);
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(true, true);
      bytesToNameCanonicalizer1.findName(17, 0);
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
      assertEquals(17, bytesToNameCanonicalizer1.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      boolean boolean0 = bytesToNameCanonicalizer1.maybeDirty();
      assertEquals(839877741, bytesToNameCanonicalizer1.hashSeed());
      assertFalse(boolean0);
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
      assertEquals(0, bytesToNameCanonicalizer1.collisionCount());
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      boolean boolean0 = bytesToNameCanonicalizer0.maybeDirty();
      assertEquals(839877741, bytesToNameCanonicalizer0.hashSeed());
      assertTrue(boolean0);
      assertEquals(0, bytesToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Name1 name1_0 = Name1.sEmptyName;
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name1_0, (BytesToNameCanonicalizer.Bucket) null);
      int int0 = bytesToNameCanonicalizer_Bucket0.length();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int int0 = bytesToNameCanonicalizer0.calcHash(31);
      assertEquals(0, bytesToNameCanonicalizer0.size());
      assertEquals(840363877, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(64);
      int int0 = bytesToNameCanonicalizer0.calcHash(64, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Name name0 = BytesToNameCanonicalizer.getEmptyName();
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name0, (BytesToNameCanonicalizer.Bucket) null);
      int[] intArray0 = new int[7];
      Name name1 = bytesToNameCanonicalizer_Bucket0.find(0, intArray0, 0);
      assertNull(name1);
      assertEquals(1, bytesToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Name name0 = BytesToNameCanonicalizer.getEmptyName();
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name0, (BytesToNameCanonicalizer.Bucket) null);
      int[] intArray0 = new int[7];
      bytesToNameCanonicalizer_Bucket0.find(304, intArray0, 0);
      assertEquals(1, bytesToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Name name0 = BytesToNameCanonicalizer.getEmptyName();
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name0, (BytesToNameCanonicalizer.Bucket) null);
      Name name1 = bytesToNameCanonicalizer_Bucket0.find(0, (-618), 355);
      assertNull(name1);
      assertEquals(1, bytesToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Name3 name3_0 = new Name3("loU/r miUB", 2620, 0, 0, 0);
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name3_0, (BytesToNameCanonicalizer.Bucket) null);
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket1 = new BytesToNameCanonicalizer.Bucket(name3_0, bytesToNameCanonicalizer_Bucket0);
      assertEquals(2, bytesToNameCanonicalizer_Bucket1.length());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(3);
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", intArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(2);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", intArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[15];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("Es{:E", intArray0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      bytesToNameCanonicalizer1.addName("X", 304, (-1));
      bytesToNameCanonicalizer1.addName("VRS%939@xngHDFa", 63, 304);
      assertEquals(2, bytesToNameCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      int[] intArray0 = BytesToNameCanonicalizer.calcQuads(byteArray0);
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((int) (byte)19);
      bytesToNameCanonicalizer0._mainHashMask = (int) (byte)119;
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(1418);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int[] intArray0 = BytesToNameCanonicalizer.calcQuads(byteArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.calcHash(intArray0, (-1842));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(1);
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("JZE", intArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(17);
      int[] intArray0 = new int[6];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("ovmab7w.7", intArray0, 17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      int[] intArray0 = new int[9];
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer1.addName("Internal error: count after rehash ", intArray0, (-3474));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.addName("M>na&KtgT[\"n^wK", (-2214), 3452);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot((-2090));
      int[] intArray0 = new int[4];
      bytesToNameCanonicalizer0._mainHash = intArray0;
      bytesToNameCanonicalizer0.findName(intArray0, 3);
      assertEquals((-2090), bytesToNameCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(1698);
      int[] intArray0 = new int[5];
      intArray0[0] = 1132;
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(intArray0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(true, false);
      bytesToNameCanonicalizer1.findName((-1328), 0);
      assertEquals(839877741, bytesToNameCanonicalizer1.hashSeed());
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
      assertFalse(bytesToNameCanonicalizer1.maybeDirty());
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
      assertEquals(0, bytesToNameCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[2];
      intArray0[1] = 63;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName(intArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int[] intArray0 = new int[4];
      intArray0[0] = (-749);
      bytesToNameCanonicalizer0._mainHash = intArray0;
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.findName((-749));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(0);
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(true, true);
      bytesToNameCanonicalizer1.findName(0);
      assertEquals(0, bytesToNameCanonicalizer1.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer1.size());
      assertEquals(0, bytesToNameCanonicalizer1.collisionCount());
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      bytesToNameCanonicalizer1.findName((-864));
      assertEquals(0, bytesToNameCanonicalizer1.collisionCount());
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
      assertEquals(0, bytesToNameCanonicalizer1.size());
      assertEquals(839877741, bytesToNameCanonicalizer1.hashSeed());
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int int0 = bytesToNameCanonicalizer0.size();
      assertEquals(839877741, bytesToNameCanonicalizer0.hashSeed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      int int0 = bytesToNameCanonicalizer1.size();
      assertEquals(0, int0);
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
      assertEquals(0, bytesToNameCanonicalizer1.collisionCount());
      assertEquals(839877741, bytesToNameCanonicalizer1.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      bytesToNameCanonicalizer1.release();
      assertEquals(64, bytesToNameCanonicalizer1.bucketCount());
      assertEquals(0, bytesToNameCanonicalizer1.maxCollisionLength());
      assertEquals(0, bytesToNameCanonicalizer1.collisionCount());
      assertEquals(839877741, bytesToNameCanonicalizer1.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      bytesToNameCanonicalizer0.release();
      assertEquals(0, bytesToNameCanonicalizer0.size());
      assertEquals(839877741, bytesToNameCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.bucketCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        bytesToNameCanonicalizer0.reportTooManyCollisions(17);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Longest collision chain in symbol table (of size 0) now exceeds maximum, 17 -- suspect a DoS attack based on hash collisions
         //
         verifyException("com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(0);
      int int0 = bytesToNameCanonicalizer0.collisionCount();
      assertEquals(0, bytesToNameCanonicalizer0.size());
      assertEquals(0, bytesToNameCanonicalizer0.hashSeed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Name name0 = BytesToNameCanonicalizer.getEmptyName();
      BytesToNameCanonicalizer.Bucket bytesToNameCanonicalizer_Bucket0 = new BytesToNameCanonicalizer.Bucket(name0, (BytesToNameCanonicalizer.Bucket) null);
      bytesToNameCanonicalizer_Bucket0.find((-1), (-618), 355);
      assertEquals(1, bytesToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      int int0 = bytesToNameCanonicalizer0.maxCollisionLength();
      assertEquals(0, int0);
      assertEquals(839877741, bytesToNameCanonicalizer0.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot(17);
      int int0 = bytesToNameCanonicalizer0.hashSeed();
      assertEquals(17, int0);
      assertEquals(0, bytesToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      bytesToNameCanonicalizer1.addName("X", 304, 0);
      bytesToNameCanonicalizer1.release();
      bytesToNameCanonicalizer0.makeChild(false, false);
      assertEquals(1, bytesToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      BytesToNameCanonicalizer bytesToNameCanonicalizer1 = bytesToNameCanonicalizer0.makeChild(false, false);
      bytesToNameCanonicalizer1.addName("X", 304, 0);
      bytesToNameCanonicalizer1.addName("VRS%939@xngHDFa", 63, 304);
      int int0 = bytesToNameCanonicalizer1.collisionCount();
      assertTrue(bytesToNameCanonicalizer1.maybeDirty());
      assertEquals(1, int0);
  }
}
