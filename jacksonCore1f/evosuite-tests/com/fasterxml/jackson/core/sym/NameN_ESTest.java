/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:23:49 GMT 2023
 */

package com.fasterxml.jackson.core.sym;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.sym.NameN;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NameN_ESTest extends NameN_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[3] = 3248;
      NameN nameN0 = new NameN((String) null, 3248, intArray0, 3248);
      int[] intArray1 = new int[31];
      boolean boolean0 = nameN0.equals(intArray1, 3248);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NameN nameN0 = new NameN("", 1591, (int[]) null, 100);
      boolean boolean0 = nameN0.equals((int[]) null, 1591);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NameN nameN0 = new NameN("", 1591, (int[]) null, 100);
      // Undeclared exception!
      try { 
        nameN0.equals((int[]) null, 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.NameN", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[4];
      NameN nameN0 = new NameN("", 2012, intArray0, 2012);
      // Undeclared exception!
      try { 
        nameN0.equals(intArray0, 2012);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.fasterxml.jackson.core.sym.NameN", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[1];
      NameN nameN0 = new NameN("", 270, intArray0, 270);
      int[] intArray1 = new int[2];
      intArray1[0] = 534;
      boolean boolean0 = nameN0.equals(intArray1, 270);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[5];
      NameN nameN0 = new NameN("Tp?;k0L*:h/(jPG", 3, intArray0, 3);
      boolean boolean0 = nameN0.equals(intArray0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[5];
      NameN nameN0 = new NameN("Tp?;k0L*:h/(jPG", 3, intArray0, 3);
      boolean boolean0 = nameN0.equals(intArray0, 3);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[4];
      NameN nameN0 = null;
      try {
        nameN0 = new NameN((String) null, 0, intArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Qlen must >= 3
         //
         verifyException("com.fasterxml.jackson.core.sym.NameN", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NameN nameN0 = new NameN("", 1591, (int[]) null, 100);
      boolean boolean0 = nameN0.equals((-5780), (-3913));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NameN nameN0 = new NameN("", 1591, (int[]) null, 100);
      boolean boolean0 = nameN0.equals(825);
      assertFalse(boolean0);
  }
}
