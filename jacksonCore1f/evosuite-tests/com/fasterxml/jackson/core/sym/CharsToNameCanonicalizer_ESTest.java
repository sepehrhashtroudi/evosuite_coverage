/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:23:15 GMT 2023
 */

package com.fasterxml.jackson.core.sym;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharsToNameCanonicalizer_ESTest extends CharsToNameCanonicalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot(3133);
      int int0 = charsToNameCanonicalizer0.calcHash((char[]) null, 3133, (-1997));
      assertEquals(0, charsToNameCanonicalizer0.size());
      assertEquals(0, charsToNameCanonicalizer0.maxCollisionLength());
      assertEquals(3133, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(33);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      assertFalse(charsToNameCanonicalizer0.maybeDirty());
      assertEquals(0, charsToNameCanonicalizer0.maxCollisionLength());
      assertEquals(0, charsToNameCanonicalizer0.size());
      assertEquals(33, charsToNameCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot(1);
      charsToNameCanonicalizer0._size = 0;
      charsToNameCanonicalizer0._size = 1;
      int int0 = charsToNameCanonicalizer0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(false, false);
      assertEquals(0, charsToNameCanonicalizer1.size());
      
      charsToNameCanonicalizer1._size = (-1);
      int int0 = charsToNameCanonicalizer1.size();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      boolean boolean0 = charsToNameCanonicalizer0.maybeDirty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot(0);
      charsToNameCanonicalizer0._sizeThreshold = 0;
      charsToNameCanonicalizer0._longestCollisionList = 1494;
      charsToNameCanonicalizer0._size = 1494;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(false, false);
      charsToNameCanonicalizer0._indexMask = 0;
      CharsToNameCanonicalizer.createRoot(0);
      charsToNameCanonicalizer1._dirty = false;
      charsToNameCanonicalizer1._size = 1168;
      charsToNameCanonicalizer1._indexMask = 0;
      charsToNameCanonicalizer1.bucketCount();
      charsToNameCanonicalizer0._dirty = false;
      charsToNameCanonicalizer1.release();
      charsToNameCanonicalizer0.maxCollisionLength();
      charsToNameCanonicalizer0.calcHash("");
      charsToNameCanonicalizer0._hashToIndex(0);
      CharsToNameCanonicalizer charsToNameCanonicalizer2 = CharsToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer2.reportTooManyCollisions(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Longest collision chain in symbol table (of size 0) now exceeds maximum, 0 -- suspect a DoS attack based on hash collisions
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer0._dirty = false;
      charsToNameCanonicalizer0._size = (-553);
      charsToNameCanonicalizer0.collisionCount();
      charsToNameCanonicalizer0.release();
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(false, true);
      CharsToNameCanonicalizer charsToNameCanonicalizer2 = charsToNameCanonicalizer1.makeChild(false, false);
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer2.reportTooManyCollisions(32);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Longest collision chain in symbol table (of size -553) now exceeds maximum, 32 -- suspect a DoS attack based on hash collisions
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot(4939);
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot(33);
      CharsToNameCanonicalizer.Bucket[] charsToNameCanonicalizer_BucketArray0 = new CharsToNameCanonicalizer.Bucket[8];
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("", (CharsToNameCanonicalizer.Bucket) null);
      charsToNameCanonicalizer_BucketArray0[0] = charsToNameCanonicalizer_Bucket0;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket1 = new CharsToNameCanonicalizer.Bucket("G", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[1] = charsToNameCanonicalizer_Bucket1;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket2 = new CharsToNameCanonicalizer.Bucket("G", charsToNameCanonicalizer_Bucket1);
      charsToNameCanonicalizer_BucketArray0[2] = charsToNameCanonicalizer_Bucket2;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket3 = new CharsToNameCanonicalizer.Bucket("G", charsToNameCanonicalizer_Bucket1);
      charsToNameCanonicalizer_BucketArray0[3] = charsToNameCanonicalizer_Bucket3;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket4 = new CharsToNameCanonicalizer.Bucket("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", charsToNameCanonicalizer_Bucket3);
      charsToNameCanonicalizer_BucketArray0[4] = charsToNameCanonicalizer_Bucket4;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket5 = new CharsToNameCanonicalizer.Bucket("!^^ ?NVQ6@/'LWz$+", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[5] = charsToNameCanonicalizer_Bucket5;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket6 = new CharsToNameCanonicalizer.Bucket("1KM6A$EfK6)oR)", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[6] = charsToNameCanonicalizer_Bucket6;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket7 = new CharsToNameCanonicalizer.Bucket("G", charsToNameCanonicalizer_Bucket1);
      charsToNameCanonicalizer_BucketArray0[7] = charsToNameCanonicalizer_Bucket7;
      charsToNameCanonicalizer0._buckets = charsToNameCanonicalizer_BucketArray0;
      charsToNameCanonicalizer0._parent = charsToNameCanonicalizer1;
      charsToNameCanonicalizer0.collisionCount();
      CharsToNameCanonicalizer.createRoot();
      char[] charArray0 = new char[1];
      System.setCurrentTimeMillis(33);
      charsToNameCanonicalizer0.makeChild(false, false);
      assertEquals(20, charsToNameCanonicalizer0.collisionCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot(0);
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      assertEquals(839877741, charsToNameCanonicalizer1.hashSeed());
      
      charsToNameCanonicalizer0.hashSeed();
      boolean boolean0 = charsToNameCanonicalizer0.maybeDirty();
      assertFalse(boolean0);
      
      int int0 = charsToNameCanonicalizer0.calcHash("");
      assertEquals(0, charsToNameCanonicalizer0.maxCollisionLength());
      assertEquals(1, int0);
      assertEquals(0, charsToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot((-1));
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(true, true);
      int int0 = charsToNameCanonicalizer0.hashSeed();
      assertEquals((-1), int0);
      
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[2] = '\\';
      int int1 = charsToNameCanonicalizer1.calcHash(charArray0, 1016, 0);
      assertEquals((-1), int1);
      
      charsToNameCanonicalizer1.bucketCount();
      assertEquals(0, charsToNameCanonicalizer1.size());
      assertEquals(0, charsToNameCanonicalizer1.maxCollisionLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer0.makeChild(false, false);
      charsToNameCanonicalizer0._size = (-1391);
      charsToNameCanonicalizer0.release();
      charsToNameCanonicalizer0.calcHash("O+DWH~}uPSoq(GW");
      charsToNameCanonicalizer0.bucketCount();
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("]p*hQ]x=S(icJ", (CharsToNameCanonicalizer.Bucket) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = '`';
      charsToNameCanonicalizer_Bucket0.find(charArray0, 54, (-1391));
      CharsToNameCanonicalizer charsToNameCanonicalizer2 = CharsToNameCanonicalizer.createRoot(288);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "O+DWH~}uPSoq(GW";
      stringArray0[1] = "]p*hQ]x=S(icJ";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "]p*hQ]x=S(icJ";
      charsToNameCanonicalizer2._symbols = stringArray0;
      charsToNameCanonicalizer1._hashToIndex(0);
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer1.reportTooManyCollisions(15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Longest collision chain in symbol table (of size 0) now exceeds maximum, 15 -- suspect a DoS attack based on hash collisions
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer1._sizeThreshold = 33;
      charsToNameCanonicalizer0._size = 33;
      charsToNameCanonicalizer0._sizeThreshold = 33;
      String[] stringArray0 = new String[8];
      stringArray0[3] = "com.fasterxml.jackson.core.util.InternCache";
      stringArray0[4] = "F~54wI???|^~";
      stringArray0[5] = "7M$>Qx]CoUP$h;((g.";
      stringArray0[6] = "";
      stringArray0[7] = ".";
      charsToNameCanonicalizer1._symbols = stringArray0;
      charsToNameCanonicalizer0._hashToIndex((-1899));
      CharsToNameCanonicalizer charsToNameCanonicalizer2 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer2._dirty = true;
      charsToNameCanonicalizer2._longestCollisionList = 33;
      charsToNameCanonicalizer0.collisionCount();
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      charsToNameCanonicalizer0._dirty = true;
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol(charArray0, 20, 20, 63);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error on SymbolTable.rehash(): had 33 entries; now have 0.
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis((-893L));
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      char[] charArray0 = new char[8];
      charArray0[0] = 's';
      charArray0[1] = '+';
      charArray0[2] = 'C';
      charArray0[3] = 'T';
      charArray0[4] = 'a';
      charArray0[5] = 'E';
      charArray0[6] = '5';
      charArray0[7] = 'W';
      int int0 = (-1);
      charsToNameCanonicalizer0.findSymbol(charArray0, (-2601), (-1), (-1));
      int int1 = 537;
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol(charArray1, 537, 537, 1474);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot((-2494));
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(true, true);
      charsToNameCanonicalizer1._longestCollisionList = (-1136);
      charsToNameCanonicalizer1.maxCollisionLength();
      charsToNameCanonicalizer1._sizeThreshold = (-1136);
      charsToNameCanonicalizer0._longestCollisionList = 1;
      CharsToNameCanonicalizer charsToNameCanonicalizer2 = charsToNameCanonicalizer1.makeChild(true, true);
      charsToNameCanonicalizer2._sizeThreshold = (-1136);
      int int0 = charsToNameCanonicalizer0.calcHash("");
      assertEquals(1, charsToNameCanonicalizer0.maxCollisionLength());
      assertEquals((-2494), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      String[] stringArray0 = new String[0];
      charsToNameCanonicalizer0._symbols = stringArray0;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(false, false);
      charsToNameCanonicalizer0._hashToIndex((-1999));
      charsToNameCanonicalizer0.bucketCount();
      charsToNameCanonicalizer0._hashToIndex(48);
      charsToNameCanonicalizer0._longestCollisionList = 48;
      CharsToNameCanonicalizer charsToNameCanonicalizer2 = CharsToNameCanonicalizer.createRoot(48);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "y~P<\"dn";
      charsToNameCanonicalizer1._symbols = stringArray1;
      CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer0._longestCollisionList = 58;
      charsToNameCanonicalizer2.makeChild(true, true);
      charsToNameCanonicalizer2._parent = charsToNameCanonicalizer1;
      assertEquals(0, charsToNameCanonicalizer1.maxCollisionLength());
      
      CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer1._longestCollisionList = 1455;
      charsToNameCanonicalizer0.findSymbol((char[]) null, 16, (-1999), 48);
      CharsToNameCanonicalizer.createRoot();
      int int0 = charsToNameCanonicalizer1._hashToIndex(48);
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot((-1));
      charsToNameCanonicalizer0._symbols = null;
      charsToNameCanonicalizer0._indexMask = (-1);
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.makeChild(false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer1._sizeThreshold = 33;
      charsToNameCanonicalizer0.collisionCount();
      charsToNameCanonicalizer0._size = 0;
      charsToNameCanonicalizer0._sizeThreshold = 0;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer";
      stringArray0[1] = "rLNs*";
      stringArray0[2] = "7M$>Qx]CoUP$h;((g.";
      stringArray0[3] = "com.fasterxml.jackson.core.util.InternCache";
      stringArray0[4] = "F~54wI???|^~";
      stringArray0[5] = "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket";
      stringArray0[6] = "";
      stringArray0[7] = ".";
      charsToNameCanonicalizer1._symbols = stringArray0;
      charsToNameCanonicalizer0._hashToIndex((-1899));
      CharsToNameCanonicalizer charsToNameCanonicalizer2 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer2._dirty = true;
      charsToNameCanonicalizer2._longestCollisionList = 0;
      charsToNameCanonicalizer0.collisionCount();
      char[] charArray0 = new char[1];
      charArray0[0] = '2';
      charsToNameCanonicalizer1._parent = charsToNameCanonicalizer0;
      charsToNameCanonicalizer0._dirty = true;
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol(charArray0, 20, 20, 63);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot(983);
      assertEquals(0, charsToNameCanonicalizer0.size());
      assertEquals(0, charsToNameCanonicalizer0.maxCollisionLength());
      assertEquals(983, charsToNameCanonicalizer0.hashSeed());
      assertFalse(charsToNameCanonicalizer0.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.calcHash((char[]) null, 0, 33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.calcHash((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(false, true);
      charsToNameCanonicalizer1._symbols = null;
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer1.bucketCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("w", (CharsToNameCanonicalizer.Bucket) null);
      char[] charArray0 = new char[6];
      String string0 = charsToNameCanonicalizer_Bucket0.find(charArray0, 0, 1);
      assertEquals(1, charsToNameCanonicalizer_Bucket0.length());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      char[] charArray0 = new char[1];
      int int0 = charsToNameCanonicalizer0.calcHash(charArray0, 0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      char[] charArray0 = new char[3];
      charsToNameCanonicalizer0._parent = charsToNameCanonicalizer0;
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 2);
      charsToNameCanonicalizer0.release();
      assertEquals(1, charsToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      int int0 = charsToNameCanonicalizer0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("", (CharsToNameCanonicalizer.Bucket) null);
      charsToNameCanonicalizer_Bucket0.getNext();
      assertEquals(1, charsToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("N#4V@vCfD", (CharsToNameCanonicalizer.Bucket) null);
      int int0 = charsToNameCanonicalizer_Bucket0.length();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("r9LVp(nKB<\"U@)e", (CharsToNameCanonicalizer.Bucket) null);
      charsToNameCanonicalizer_Bucket0.getSymbol();
      assertEquals(1, charsToNameCanonicalizer_Bucket0.length());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      char[] charArray0 = new char[9];
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      charsToNameCanonicalizer0._symbols = stringArray0;
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
      charArray0[1] = '1';
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
      assertEquals(2, charsToNameCanonicalizer0.collisionCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      char[] charArray0 = new char[9];
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      charsToNameCanonicalizer0._symbols = stringArray0;
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
      assertEquals(1, charsToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer0._sizeThreshold = 0;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer1._parent = charsToNameCanonicalizer0;
      char[] charArray0 = new char[1];
      CharsToNameCanonicalizer.Bucket[] charsToNameCanonicalizer_BucketArray0 = new CharsToNameCanonicalizer.Bucket[9];
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("", (CharsToNameCanonicalizer.Bucket) null);
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket1 = new CharsToNameCanonicalizer.Bucket(".", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[1] = charsToNameCanonicalizer_Bucket1;
      charsToNameCanonicalizer1._parent._buckets = charsToNameCanonicalizer_BucketArray0;
      charsToNameCanonicalizer0._dirty = true;
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol(charArray0, 20, 20, 63);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      char[] charArray0 = new char[9];
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      charsToNameCanonicalizer0._symbols = stringArray0;
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
      charArray0[1] = '1';
      charsToNameCanonicalizer0._sizeThreshold = 1;
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error on SymbolTable.rehash(): had 1 entries; now have 2.
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      char[] charArray0 = new char[7];
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 1);
      assertEquals(1, charsToNameCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer0.collisionCount();
      charsToNameCanonicalizer0._sizeThreshold = 0;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer";
      stringArray0[1] = "rLNs*";
      stringArray0[2] = "rLNs*";
      stringArray0[3] = "com.fasterxml.jackson.core.util.InternCache";
      stringArray0[4] = "F~54wI???|^~";
      stringArray0[5] = "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket";
      stringArray0[6] = "";
      stringArray0[7] = ".";
      charsToNameCanonicalizer0._hashToIndex((-1899));
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer1._parent = charsToNameCanonicalizer0;
      charsToNameCanonicalizer1._dirty = true;
      charsToNameCanonicalizer1._longestCollisionList = 0;
      charsToNameCanonicalizer0.collisionCount();
      char[] charArray0 = new char[1];
      CharsToNameCanonicalizer.Bucket[] charsToNameCanonicalizer_BucketArray0 = new CharsToNameCanonicalizer.Bucket[9];
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("", (CharsToNameCanonicalizer.Bucket) null);
      charsToNameCanonicalizer_BucketArray0[0] = charsToNameCanonicalizer_Bucket0;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket1 = new CharsToNameCanonicalizer.Bucket(".", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[1] = charsToNameCanonicalizer_Bucket1;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket2 = new CharsToNameCanonicalizer.Bucket("", charsToNameCanonicalizer_Bucket1);
      charsToNameCanonicalizer_BucketArray0[2] = charsToNameCanonicalizer_Bucket2;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket3 = new CharsToNameCanonicalizer.Bucket("com.fasterxml.jackson.core.util.InternCache", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[3] = charsToNameCanonicalizer_Bucket3;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket4 = new CharsToNameCanonicalizer.Bucket("rLNs*", charsToNameCanonicalizer_Bucket3);
      charsToNameCanonicalizer_BucketArray0[4] = charsToNameCanonicalizer_Bucket4;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket5 = new CharsToNameCanonicalizer.Bucket("rLNs*", charsToNameCanonicalizer_Bucket1);
      charsToNameCanonicalizer_BucketArray0[5] = charsToNameCanonicalizer_Bucket5;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket6 = new CharsToNameCanonicalizer.Bucket("32irR'{_%r&JRK/u!z", charsToNameCanonicalizer_Bucket1);
      charsToNameCanonicalizer_BucketArray0[6] = charsToNameCanonicalizer_Bucket6;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket7 = new CharsToNameCanonicalizer.Bucket("^BX$aK6[3rX-", charsToNameCanonicalizer_Bucket4);
      charsToNameCanonicalizer_BucketArray0[7] = charsToNameCanonicalizer_Bucket7;
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket8 = new CharsToNameCanonicalizer.Bucket("com.fasterxml.jackson.core.util.InternCache", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[8] = charsToNameCanonicalizer_Bucket8;
      charsToNameCanonicalizer1._parent._buckets = charsToNameCanonicalizer_BucketArray0;
      charArray0[0] = '2';
      charsToNameCanonicalizer0._dirty = true;
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol(charArray0, 20, 20, 63);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer0._hashToIndex(1);
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charsToNameCanonicalizer0._size = (int) ',';
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer1._sizeThreshold = 1;
      charsToNameCanonicalizer1._indexMask = 44;
      charsToNameCanonicalizer0._parent = charsToNameCanonicalizer1;
      charArray0[1] = 'o';
      charArray0[2] = '<';
      charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 20);
      charsToNameCanonicalizer0.release();
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.calcHash(charArray0, 31, 770);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer0._hashToIndex(1);
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charsToNameCanonicalizer0._size = (-14);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|?exaRku]";
      charsToNameCanonicalizer0._symbols = stringArray0;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = CharsToNameCanonicalizer.createRoot();
      charsToNameCanonicalizer1._sizeThreshold = (-14);
      charsToNameCanonicalizer1._indexMask = (-14);
      charsToNameCanonicalizer0._parent = charsToNameCanonicalizer1;
      charArray0[1] = 'o';
      CharsToNameCanonicalizer.createRoot((-2416));
      charArray0[2] = ',';
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol(charArray0, 1, 1, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharsToNameCanonicalizer.Bucket[] charsToNameCanonicalizer_BucketArray0 = new CharsToNameCanonicalizer.Bucket[5];
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket0 = new CharsToNameCanonicalizer.Bucket("", (CharsToNameCanonicalizer.Bucket) null);
      CharsToNameCanonicalizer.Bucket charsToNameCanonicalizer_Bucket1 = new CharsToNameCanonicalizer.Bucket("", charsToNameCanonicalizer_Bucket0);
      charsToNameCanonicalizer_BucketArray0[1] = charsToNameCanonicalizer_Bucket1;
      char[] charArray0 = new char[5];
      String string0 = charsToNameCanonicalizer_BucketArray0[1].find(charArray0, 5972, (-605));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.reportTooManyCollisions(100);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Longest collision chain in symbol table (of size 0) now exceeds maximum, 100 -- suspect a DoS attack based on hash collisions
         //
         verifyException("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer0.findSymbol((char[]) null, 0, 3294, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.sBootstrapSymbolTable;
      CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(false, false);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        charsToNameCanonicalizer1.findSymbol(charArray0, 1, 33, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      int int0 = charsToNameCanonicalizer0.maxCollisionLength();
      assertEquals(839877741, charsToNameCanonicalizer0.hashSeed());
      assertEquals(0, charsToNameCanonicalizer0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      int int0 = charsToNameCanonicalizer0.hashSeed();
      assertEquals(0, charsToNameCanonicalizer0.maxCollisionLength());
      assertFalse(charsToNameCanonicalizer0.maybeDirty());
      assertEquals(839877741, int0);
      assertEquals(0, charsToNameCanonicalizer0.size());
  }
}
