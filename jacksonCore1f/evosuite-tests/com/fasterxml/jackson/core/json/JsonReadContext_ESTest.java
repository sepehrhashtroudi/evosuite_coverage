/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:06:57 GMT 2023
 */

package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.core.json.JsonReadContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonReadContext_ESTest extends JsonReadContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext(1894, 0);
      JsonReadContext jsonReadContext1 = new JsonReadContext(jsonReadContext0, (-1044), 0, 0);
      boolean boolean0 = jsonReadContext1.expectComma();
      assertEquals(1, jsonReadContext1.getEntryCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext((-866), (-1));
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildObjectContext(1088, (-866));
      assertTrue(jsonReadContext1.inObject());
      
      JsonReadContext jsonReadContext2 = jsonReadContext0.createChildObjectContext(0, 125);
      assertNotNull(jsonReadContext2);
      assertEquals(0, jsonReadContext2.getEntryCount());
      assertTrue(jsonReadContext0.inRoot());
      assertSame(jsonReadContext2, jsonReadContext1);
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertEquals("OBJECT", jsonReadContext2.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildObjectContext((-1374), (-1374));
      assertEquals("OBJECT", jsonReadContext1.getTypeDesc());
      
      JsonReadContext jsonReadContext2 = jsonReadContext0.createChildArrayContext((-1374), 0);
      assertNotNull(jsonReadContext2);
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertEquals("ARRAY", jsonReadContext2.getTypeDesc());
      assertSame(jsonReadContext2, jsonReadContext1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext(0, 0);
      JsonLocation jsonLocation0 = jsonReadContext0.getStartLocation("");
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertEquals("ROOT", jsonReadContext0.getTypeDesc());
      assertEquals((-1L), jsonLocation0.getCharOffset());
      assertEquals(0, jsonLocation0.getColumnNr());
      assertEquals(0, jsonLocation0.getLineNr());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildObjectContext(97, 12);
      JsonLocation jsonLocation0 = jsonReadContext1.getStartLocation(jsonReadContext0);
      assertEquals(0, jsonReadContext1.getEntryCount());
      assertEquals(97, jsonLocation0.getLineNr());
      assertEquals("OBJECT", jsonReadContext1.getTypeDesc());
      assertEquals(12, jsonLocation0.getColumnNr());
      assertEquals("ROOT", jsonReadContext0.getTypeDesc());
      assertEquals((-1L), jsonLocation0.getCharOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext((-692), (-692));
      Object object0 = new Object();
      JsonLocation jsonLocation0 = jsonReadContext0.getStartLocation(object0);
      assertEquals((-692), jsonLocation0.getLineNr());
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertEquals((-692), jsonLocation0.getColumnNr());
      assertEquals((-1L), jsonLocation0.getCharOffset());
      assertTrue(jsonReadContext0.inRoot());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildObjectContext(2106, 194);
      JsonReadContext jsonReadContext2 = jsonReadContext1.createChildObjectContext(2106, 1729);
      JsonReadContext jsonReadContext3 = jsonReadContext2.getParent();
      assertNotNull(jsonReadContext3);
      assertTrue(jsonReadContext3.inObject());
      assertEquals(0, jsonReadContext3.getEntryCount());
      assertTrue(jsonReadContext0.inRoot());
      assertSame(jsonReadContext3, jsonReadContext1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildArrayContext((-1990), (-1990));
      JsonReadContext jsonReadContext2 = jsonReadContext1.createChildArrayContext(128, (-2123));
      JsonReadContext jsonReadContext3 = jsonReadContext2.getParent();
      assertEquals(0, jsonReadContext3.getEntryCount());
      assertEquals("ROOT", jsonReadContext0.getTypeDesc());
      assertSame(jsonReadContext3, jsonReadContext1);
      assertNotNull(jsonReadContext3);
      assertEquals("ARRAY", jsonReadContext3.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = new JsonReadContext(jsonReadContext0, 1412, 0, 1412);
      JsonReadContext jsonReadContext2 = jsonReadContext1.getParent();
      assertEquals(0, jsonReadContext2.getEntryCount());
      assertEquals("?", jsonReadContext1.getTypeDesc());
      assertTrue(jsonReadContext2.inRoot());
      assertNotNull(jsonReadContext2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext((-1374), 0);
      jsonReadContext0._currentName = "P?4sbw\"QC>O&Qz Y~%N";
      jsonReadContext0.getCurrentName();
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertTrue(jsonReadContext0.inRoot());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext(116, 116);
      jsonReadContext0.setCurrentName("");
      String string0 = jsonReadContext0.getCurrentName();
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertNotNull(string0);
      assertEquals("ROOT", jsonReadContext0.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext((-2126), (-2126));
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildObjectContext((-2126), (-2126));
      jsonReadContext1._currentName = "/";
      String string0 = jsonReadContext1.toString();
      assertEquals(0, jsonReadContext1.getEntryCount());
      assertEquals("{\"/\"}", string0);
      assertEquals("ROOT", jsonReadContext0.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      assertEquals("ROOT", jsonReadContext0.getTypeDesc());
      
      jsonReadContext0.reset((-465), 158, (-465));
      jsonReadContext0.toString();
      assertEquals("?", jsonReadContext0.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildArrayContext((-1099), (-1099));
      assertNotNull(jsonReadContext1);
      
      String string0 = jsonReadContext1.toString();
      assertEquals("[0]", string0);
      assertEquals(0, jsonReadContext1.getEntryCount());
      assertFalse(jsonReadContext0.inArray());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      jsonReadContext0.expectComma();
      jsonReadContext0.expectComma();
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildObjectContext(0, 0);
      jsonReadContext1.getParent();
      assertEquals(2, jsonReadContext0.getEntryCount());
      assertTrue(jsonReadContext0.inRoot());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = jsonReadContext0.createChildObjectContext((-538), (-538));
      assertNotNull(jsonReadContext1);
      
      jsonReadContext1.expectComma();
      boolean boolean0 = jsonReadContext1.expectComma();
      assertEquals(1, jsonReadContext1.getCurrentIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      jsonReadContext0._child = jsonReadContext0;
      jsonReadContext0.createChildObjectContext((-1099), (-1099));
      jsonReadContext0.toString();
      assertTrue(jsonReadContext0.inObject());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      jsonReadContext0.getCurrentName();
      assertTrue(jsonReadContext0.inRoot());
      assertEquals(0, jsonReadContext0.getEntryCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext((-2126), (-2126));
      String string0 = jsonReadContext0.toString();
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      jsonReadContext0._child = jsonReadContext0;
      assertTrue(jsonReadContext0._child.inRoot());
      
      jsonReadContext0.createChildArrayContext((-1099), (-1099));
      assertTrue(jsonReadContext0.inArray());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JsonReadContext jsonReadContext0 = JsonReadContext.createRootContext();
      JsonReadContext jsonReadContext1 = jsonReadContext0.getParent();
      assertTrue(jsonReadContext0.inRoot());
      assertEquals(0, jsonReadContext0.getEntryCount());
      assertNull(jsonReadContext1);
  }
}
