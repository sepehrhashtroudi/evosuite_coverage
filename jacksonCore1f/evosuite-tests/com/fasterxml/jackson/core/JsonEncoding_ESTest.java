/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:09:15 GMT 2023
 */

package com.fasterxml.jackson.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.JsonEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonEncoding_ESTest extends JsonEncoding_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonEncoding[] jsonEncodingArray0 = JsonEncoding.values();
      assertEquals(5, jsonEncodingArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonEncoding jsonEncoding0 = JsonEncoding.valueOf("UTF32_BE");
      assertEquals("UTF-32BE", jsonEncoding0.getJavaName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonEncoding jsonEncoding0 = JsonEncoding.valueOf("UTF32_LE");
      assertFalse(jsonEncoding0.isBigEndian());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_BE;
      boolean boolean0 = jsonEncoding0.isBigEndian();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
      boolean boolean0 = jsonEncoding0.isBigEndian();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
      String string0 = jsonEncoding0.getJavaName();
      assertEquals("UTF-16LE", string0);
  }
}
