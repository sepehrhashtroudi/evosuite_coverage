/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 19:49:10 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.CharRange;
import org.apache.commons.lang3.CharSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class CharSet_ESTest extends CharSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "G0vSB|t%Q=LKpxgw-";
      CharSet charSet0 = new CharSet(stringArray0);
      charSet0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharSet charSet0 = CharSet.ASCII_ALPHA_LOWER;
      CharSet charSet1 = CharSet.ASCII_ALPHA;
      boolean boolean0 = charSet0.equals(charSet1);
      assertFalse(charSet1.equals((Object)charSet0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharSet charSet0 = CharSet.ASCII_NUMERIC;
      charSet0.add("-&n^v&r?(^CS%+-");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "0-9";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      assertNotNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CharSet charSet0 = new CharSet(stringArray0);
      charSet0.ASCII_ALPHA_LOWER.add("G0vSB|t%Q=LKpxgw-");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharSet charSet0 = CharSet.ASCII_NUMERIC;
      CharRange[] charRangeArray0 = charSet0.EMPTY.getCharRanges();
      assertEquals(0, charRangeArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSet charSet0 = null;
      try {
        charSet0 = new CharSet((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[5];
      CharSet charSet0 = new CharSet(stringArray0);
      CharSet charSet1 = CharSet.ASCII_ALPHA_LOWER;
      boolean boolean0 = charSet0.equals(charSet1);
      assertFalse(charSet1.equals((Object)charSet0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[0];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      boolean boolean0 = charSet0.equals(charSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CharSet charSet0 = new CharSet(stringArray0);
      boolean boolean0 = charSet0.equals("G0vSB|t%Q=LKpxgw-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CharSet charSet0 = new CharSet(stringArray0);
      boolean boolean0 = charSet0.ASCII_NUMERIC.contains('J');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[3] = "A-Z";
      CharSet charSet0 = new CharSet(stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "^Q-aw[16NS,H,d1Hi&";
      CharSet charSet0 = new CharSet(stringArray0);
      boolean boolean0 = charSet0.contains('q');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "G0vSB|t%Q=LKpxgw-";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      assertNotNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharSet charSet0 = CharSet.getInstance((String[]) null);
      assertNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      assertNotNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CharSet charSet0 = new CharSet(stringArray0);
      CharRange[] charRangeArray0 = charSet0.ASCII_NUMERIC.getCharRanges();
      assertEquals(1, charRangeArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CharSet charSet0 = new CharSet(stringArray0);
      String string0 = charSet0.toString();
      assertNotNull(string0);
  }
}
