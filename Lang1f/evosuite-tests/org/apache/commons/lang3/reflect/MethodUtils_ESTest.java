/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 19:56:14 GMT 2022
 */

package org.apache.commons.lang3.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import org.apache.commons.lang3.reflect.MethodUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class MethodUtils_ESTest extends MethodUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        MethodUtils.invokeStaticMethod(class0, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[2];
      try { 
        MethodUtils.invokeExactStaticMethod(class0, "C~6", objectArray0);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: C~6() on class: java.lang.Object
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        MethodUtils.invokeExactMethod((Object) null, (String) null, objectArray0, (Class<?>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 3);
      // Undeclared exception!
      try { 
        MethodUtils.getMatchingAccessibleMethod(class0, (String) null, classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      // Undeclared exception!
      try { 
        MethodUtils.getAccessibleMethod(class0, (String) null, classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<String> class0 = String.class;
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 7);
      Method method0 = MethodUtils.getMatchingAccessibleMethod(class0, "isEmpty", classArray0);
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 4);
      try { 
        MethodUtils.invokeStaticMethod(class0, "&!G9qI8xapwJLg", (Object[]) null, classArray0);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: &!G9qI8xapwJLg() on class: java.lang.Object
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      objectArray0[2] = (Object) "l0";
      // Undeclared exception!
      try { 
        MethodUtils.invokeMethod(objectArray0[2], "isEmpty", objectArray0, (Class<?>[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Method method0 = MethodUtils.getAccessibleMethod(class0, "", (Class<?>[]) null);
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 5);
      try { 
        MethodUtils.invokeMethod((Object) "chars", "chars", objectArray0, (Class<?>[]) classArray0);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: chars() on object: java.lang.String
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Method method0 = MethodUtils.getAccessibleMethod((Method) null);
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        MethodUtils.invokeExactStaticMethod(class0, (String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<String> class0 = String.class;
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        MethodUtils.invokeStaticMethod(class0, "length", objectArray0, (Class<?>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      try { 
        MethodUtils.invokeStaticMethod(class0, "", (Object[]) null);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: () on class: java.lang.Integer
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<String> class0 = String.class;
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        MethodUtils.invokeExactStaticMethod(class0, "isEmpty", objectArray0, (Class<?>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 5);
      try { 
        MethodUtils.invokeExactStaticMethod(class0, ">", (Object[]) null, classArray0);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: >() on class: java.lang.Object
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      try { 
        MethodUtils.invokeExactMethod(object0, "boymat", (Object[]) null, (Class<?>[]) null);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: boymat() on object: java.lang.Object
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodUtils.invokeExactMethod((Object) null, "x", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 3);
      try { 
        MethodUtils.invokeExactMethod((Object) class0, "", (Object[]) classArray0);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: () on object: java.lang.Class
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[0];
      try { 
        MethodUtils.invokeMethod(object0, "notifyAll", objectArray0);
        fail("Expecting exception: InvocationTargetException");
      
      } catch(InvocationTargetException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        MethodUtils.invokeMethod(objectArray0[1], "=I@.C2W`b.e2Bg8hf", (Object[]) null, (Class<?>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodUtils.invokeMethod((Object) null, (String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      try { 
        MethodUtils.invokeMethod((Object) ")jd+l/N7'9g4144cc>", "() on class: ", objectArray0);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: () on class: () on object: java.lang.String
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MethodUtils methodUtils0 = new MethodUtils();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 4);
      Class<Annotation> class0 = Annotation.class;
      try { 
        MethodUtils.invokeExactMethod((Object) class0, "6?$`f'", (Object[]) classArray0, (Class<?>[]) classArray0);
        fail("Expecting exception: NoSuchMethodException");
      
      } catch(NoSuchMethodException e) {
         //
         // No such accessible method: 6?$`f'() on object: java.lang.Class
         //
         verifyException("org.apache.commons.lang3.reflect.MethodUtils", e);
      }
  }
}
