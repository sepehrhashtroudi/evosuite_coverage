/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 19:55:31 GMT 2022
 */

package org.apache.commons.lang3.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import java.util.List;
import org.apache.commons.lang3.reflect.FieldUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldUtils_ESTest extends FieldUtils_ESTest_scaffolding {

//  @Test(timeout = 4000)
//  public void test00()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.writeField((Object) null, "", (Object) "");
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // target object must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test01()  throws Throwable  {
//      Class<String> class0 = String.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.writeField((Field) null, (Object) null, (Object) class0);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      Field field0 = FieldUtils.getDeclaredField(class0, "");
//      assertNull(field0);
//  }
//
//  @Test(timeout = 4000)
//  public void test03()  throws Throwable  {
//      Class<Object> class0 = Object.class;
//      List<Field> list0 = FieldUtils.getAllFieldsList(class0);
//      assertEquals(0, list0.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test04()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      Field[] fieldArray0 = FieldUtils.getAllFields(class0);
//      assertEquals(16, fieldArray0.length);
//  }
//
//  @Test(timeout = 4000)
//  public void test05()  throws Throwable  {
//      Class<Integer> class0 = Integer.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.writeDeclaredField((Object) class0, "^sl1nGQS7+", (Object) "^sl1nGQS7+", true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.Class.^sl1nGQS7+
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.writeDeclaredField((Object) null, "", (Object) "", true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // target object must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test07()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.writeField((Field) null, (Object) "The field name must not be null", (Object) null, false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test08()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.writeDeclaredStaticField((Class<?>) class0, "l", (Object) "l", true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.reflect.Field.l
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test09()  throws Throwable  {
//      Class<String> class0 = String.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.writeStaticField((Class<?>) class0, "ekw8", (Object) class0, false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate field ekw8 on class java.lang.String
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test10()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.writeStaticField((Field) null, (Object) null, false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test11()  throws Throwable  {
//      Class<String> class0 = String.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.readDeclaredField((Object) class0, "LwfEN/0", false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.Class.LwfEN/0
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test12()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readField((Object) null, "{YSnz1THpLU", true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // target object must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test13()  throws Throwable  {
//      Object object0 = new Object();
//      // Undeclared exception!
//      try {
//        FieldUtils.readField((Field) null, object0, true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test14()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.readDeclaredStaticField(class0, "rbENPW\"5x", false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.reflect.Field.rbENPW\"5x
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test15()  throws Throwable  {
//      Class<Object> class0 = Object.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.readStaticField(class0, "XWO,)T>P", true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate field XWO,)T>P on class java.lang.Object
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test16()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readStaticField((Field) null, false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test17()  throws Throwable  {
//      Class<String> class0 = String.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.getDeclaredField(class0, (String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field name must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test18()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      Field field0 = FieldUtils.getDeclaredField(class0, "org.apache.commons.lang3.reflect.MemberUtils", true);
//      assertNull(field0);
//  }
//
//  @Test(timeout = 4000)
//  public void test19()  throws Throwable  {
//      Class<String> class0 = String.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.getField(class0, (String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field name must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test20()  throws Throwable  {
//      Class<String> class0 = String.class;
//      Field field0 = FieldUtils.getField(class0, "", true);
//      assertNull(field0);
//  }
//
//  @Test(timeout = 4000)
//  public void test21()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.writeDeclaredField((Object) "", "", (Object) null);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.String.
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test22()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.writeField((Object) null, "D", (Object) "OBsKuNx", false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // target object must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test23()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readDeclaredField((Object) null, (String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // target object must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test24()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readField((Object) "goMbrr+1,#O!.)Ii^@<", "U!zdnIl7/+", false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate field U!zdnIl7/+ on class java.lang.String
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test25()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.readDeclaredStaticField(class0, "zDjTAGgYHdkJOI{{_jz");
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.reflect.Field.zDjTAGgYHdkJOI{{_jz
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test26()  throws Throwable  {
//      Class<String> class0 = String.class;
//      List<Field> list0 = FieldUtils.getAllFieldsList(class0);
//      assertEquals(5, list0.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test27()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.getAllFieldsList((Class<?>) null);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The class must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test28()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.getDeclaredField((Class<?>) null, "", true);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The class must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test29()  throws Throwable  {
//      Class<Integer> class0 = Integer.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.getField(class0, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field name must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test30()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readStaticField((Class<?>) null, "q");
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The class must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test31()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readDeclaredField((Object) "", "H7XaX4^vpn59");
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.String.H7XaX4^vpn59
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test32()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.readField((Field) null, (Object) class0);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test33()  throws Throwable  {
//      Class<Annotation> class0 = Annotation.class;
//      Field field0 = FieldUtils.getField(class0, "short");
//      assertNull(field0);
//  }
//
//  @Test(timeout = 4000)
//  public void test34()  throws Throwable  {
//      Class<String> class0 = String.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.writeField((Object) class0, "ej).\f;S.%.|H .%yu", (Object) class0);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.Class.ej).\f;S.%.|H .%yu
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test35()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.writeDeclaredStaticField((Class<?>) class0, "org.apache.commons.lang3.reflect.MemberUtils", (Object) null);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field java.lang.reflect.Field.org.apache.commons.lang3.reflect.MemberUtils
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test36()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readStaticField((Field) null);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test37()  throws Throwable  {
//      Class<Object> class0 = Object.class;
//      Field[] fieldArray0 = FieldUtils.getAllFields(class0);
//      assertEquals(0, fieldArray0.length);
//  }
//
//  @Test(timeout = 4000)
//  public void test38()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.readField((Object) null, "[#bNz&5|P#&6");
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // target object must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test39()  throws Throwable  {
//      FieldUtils fieldUtils0 = new FieldUtils();
//      // Undeclared exception!
//      try {
//        FieldUtils.writeField((Object) fieldUtils0, "", (Object) "boolean", false);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // Cannot locate declared field org.apache.commons.lang3.reflect.FieldUtils.
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test40()  throws Throwable  {
//      // Undeclared exception!
//      try {
//        FieldUtils.writeStaticField((Field) null, (Object) null);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test41()  throws Throwable  {
//      Class<Field> class0 = Field.class;
//      // Undeclared exception!
//      try {
//        FieldUtils.getDeclaredField(class0, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
//
//      } catch(IllegalArgumentException e) {
//         //
//         // The field name must not be null
//         //
//         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
//      }
//  }
//
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Class<String> class1 = String.class;
      // Undeclared exception!
      try {
        FieldUtils.writeStaticField((Class<?>) class1, "Nq:ZL7KTl{~/|0qS", (Object) class0);
        fail("Expecting exception: IllegalArgumentException");

      } catch(IllegalArgumentException e) {
         //
         // Cannot locate field Nq:ZL7KTl{~/|0qS on class java.lang.String
         //
         verifyException("org.apache.commons.lang3.reflect.FieldUtils", e);
      }
  }
}
