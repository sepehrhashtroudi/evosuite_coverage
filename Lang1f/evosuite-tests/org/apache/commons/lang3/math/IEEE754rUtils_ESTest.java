/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 20:04:21 GMT 2022
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.IEEE754rUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class IEEE754rUtils_ESTest extends IEEE754rUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float float0 = IEEE754rUtils.max(0.0F, 0.0F, 83.0F);
      assertEquals(83.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-1.0), (-3895.1903023747363), (-3895.1903023747363));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = IEEE754rUtils.min((-1.0), (-2170.811553751), 0.0);
      assertEquals((-2170.811553751), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = 955.6878F;
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(955.6878F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = (-102.0F);
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals((-102.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 202.5871674322;
      doubleArray0[1] = 202.5871674322;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 202.5871674322;
      doubleArray0[4] = 202.5871674322;
      doubleArray0[5] = 1.0;
      doubleArray0[6] = 202.5871674322;
      doubleArray0[7] = 1.0;
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1559.3798870021);
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals((-1559.3798870021), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float float0 = IEEE754rUtils.min(0.0F, 0.0F, 1012.7202F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      float float0 = IEEE754rUtils.min((-1.0F), (-1050.3F), (-1.0F));
      assertEquals((-1050.3F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      float float0 = IEEE754rUtils.min(3098.0F, 3098.0F);
      assertEquals(3098.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      float float0 = IEEE754rUtils.min((-547.04315F), 1220.9319F);
      assertEquals((-547.04315F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = IEEE754rUtils.min(0.0, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = IEEE754rUtils.min(0.0, (double) 1220.9319F);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) (-1050.3F), (double) (-1050.3F));
      assertEquals((-1050.300048828125), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = 955.6878F;
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(955.6878F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-1.0F);
      floatArray0[2] = (-1050.3F);
      floatArray0[3] = (-1050.3F);
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 43.562508;
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(43.562508, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (-745.42025395);
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      float float0 = IEEE754rUtils.max(0.0F, 0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-2234.332F), (-262.945F), (-2234.332F));
      assertEquals((-262.945F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-425.21793F), 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-901.3F), 69.079F);
      assertEquals(69.079F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = IEEE754rUtils.max(0.0, (double) 0.0F, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-1.0), (-3895.1903023747363), (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double double0 = IEEE754rUtils.max((double) 2177.327F, (double) 2177.327F);
      assertEquals(2177.326904296875, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-1559.3798870021), (-1559.3798870021));
      assertEquals((-1559.3798870021), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-262.945F), (-262.945F));
      assertEquals((-262.945F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = IEEE754rUtils.max(0.0, (-3244.7599265));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      float float0 = IEEE754rUtils.min(104.78F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) 955.6878F, (double) 955.6878F);
      assertEquals(955.6878051757812, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      float[] floatArray0 = new float[2];
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      float[] floatArray0 = new float[2];
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      float float0 = IEEE754rUtils.min(2177.327F, 2177.327F, 2177.327F);
      assertEquals(2177.327F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) 405.4F, (double) 405.4F, (double) 405.4F);
      assertEquals(405.3999938964844, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = IEEE754rUtils.max((double) 2177.327F, (double) 2177.327F, (double) 2177.327F);
      assertEquals(2177.326904296875, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IEEE754rUtils iEEE754rUtils0 = new IEEE754rUtils();
  }
}
