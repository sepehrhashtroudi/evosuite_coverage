/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 20:07:23 GMT 2022
 */

package org.apache.commons.lang3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Set;
import org.apache.commons.lang3.exception.ContextedException;
import org.apache.commons.lang3.exception.ContextedRuntimeException;
import org.apache.commons.lang3.exception.DefaultExceptionContext;
import org.apache.commons.lang3.exception.ExceptionContext;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class ContextedRuntimeException_ESTest extends ContextedRuntimeException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("Wt_9F88HE2{\"Fc2=");
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("org.apache.commons.lang3.exception.ContextedRuntimeException", mockThrowable0);
      String string0 = contextedRuntimeException0.getRawMessage();
      assertEquals("org.apache.commons.lang3.exception.ContextedRuntimeException", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("org.apache.commons.lang3.exception.ContextedRuntimeException");
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException(contextedException0);
      String string0 = contextedRuntimeException0.getMessage();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: org.apache.commons.lang3.exception.ContextedRuntimeException", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("", mockThrowable0);
      String string0 = contextedRuntimeException0.getFormattedExceptionMessage("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("Y");
      MockThrowable mockThrowable0 = new MockThrowable("", contextedException0);
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("Je>cJi)y+", mockThrowable0);
      contextedRuntimeException0.setContextValue("Je>cJi)y+", contextedException0);
      Object object0 = contextedRuntimeException0.getFirstContextValue("Je>cJi)y+");
      assertSame(object0, contextedException0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable(" Bg9<<)-IlhfyfxjI/O", (Throwable) null);
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("U8D=J1R }U#Y", mockThrowable0);
      Object object0 = new Object();
      ContextedRuntimeException contextedRuntimeException1 = contextedRuntimeException0.setContextValue(",31$,LC_\"43J'}J", object0);
      List<Object> list0 = contextedRuntimeException1.getContextValues(",31$,LC_\"43J'}J");
      assertFalse(list0.contains("U8D=J1R }U#Y"));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException(mockThrowable0);
      ContextedRuntimeException contextedRuntimeException1 = contextedRuntimeException0.addContextValue("", "");
      Set<String> set0 = contextedRuntimeException1.getContextLabels();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("");
      ContextedException contextedException0 = new ContextedException("", contextedRuntimeException0);
      ContextedException contextedException1 = contextedException0.setContextValue("", contextedRuntimeException0);
      ContextedRuntimeException contextedRuntimeException1 = new ContextedRuntimeException("", contextedException1, contextedException0);
      List<Pair<String, Object>> list0 = contextedRuntimeException1.getContextEntries();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("GZxjRF?`M1[", (Throwable) null, (ExceptionContext) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("V}t%=NsT2+S", mockThrowable0, defaultExceptionContext0);
      String string0 = contextedRuntimeException0.getFormattedExceptionMessage("V}t%=NsT2+S");
      assertEquals("V}t%=NsT2+S", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException((Throwable) null);
      Set<String> set0 = contextedRuntimeException0.getContextLabels();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      String string0 = contextedRuntimeException0.getRawMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("Wt_9F88HE2{\"Fc2=");
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("org.apache.commons.lang3.exception.ContextedRuntimeException", mockThrowable0);
      List<Pair<String, Object>> list0 = contextedRuntimeException0.getContextEntries();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("Y");
      MockThrowable mockThrowable0 = new MockThrowable("", contextedException0);
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("Je>cJi)y+", mockThrowable0);
      List<Object> list0 = contextedRuntimeException0.getContextValues("jj)-m");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException((Throwable) null);
      String string0 = contextedRuntimeException0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("");
      String string0 = contextedRuntimeException0.getRawMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("", mockThrowable0);
      Object object0 = contextedRuntimeException0.getFirstContextValue("");
      assertNull(object0);
  }
}
