/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 21:03:37 GMT 2022
 */

package org.apache.commons.lang3.tuple;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.tuple.MutablePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class MutablePair_ESTest extends MutablePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer((-611));
      MutablePair<Integer, String> mutablePair0 = new MutablePair<Integer, String>(integer0, "org.apache.commons.lang3.tuple.ImmutablePair");
      String string0 = mutablePair0.setValue("");
      assertEquals("org.apache.commons.lang3.tuple.ImmutablePair", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MutablePair<String, Object> mutablePair0 = new MutablePair<String, Object>();
      Integer integer0 = new Integer(0);
      Object object0 = mutablePair0.setValue(integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MutablePair<String, String> mutablePair0 = new MutablePair<String, String>("", (String) null);
      String string0 = mutablePair0.getRight();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MutablePair<String, Object> mutablePair0 = new MutablePair<String, Object>("", (Object) null);
      String string0 = mutablePair0.getLeft();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer(1509);
      MutablePair<String, Integer> mutablePair0 = MutablePair.of((String) null, integer0);
      String string0 = mutablePair0.getLeft();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MutablePair<String, Object> mutablePair0 = MutablePair.of("N^!Z1S|bwrI", (Object) "N^!Z1S|bwrI");
      Object object0 = mutablePair0.getRight();
      assertEquals("N^!Z1S|bwrI", object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MutablePair<Object, String> mutablePair0 = new MutablePair<Object, String>();
      mutablePair0.setRight("k7dKG~");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MutablePair<Object, String> mutablePair0 = new MutablePair<Object, String>(".:U@X!x(=7PFNJy7", ".:U@X!x(=7PFNJy7");
      mutablePair0.setLeft(".:U@X!x(=7PFNJy7");
  }
}
