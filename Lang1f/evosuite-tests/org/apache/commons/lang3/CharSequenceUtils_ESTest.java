/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 21:10:05 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.lang3.CharSequenceUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class CharSequenceUtils_ESTest extends CharSequenceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(2423);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, true, 0, charBuffer1, 0, 2423);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, (-1713), charBuffer0, (-1713), (-1713));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'T';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 'T', 'T');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2048);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 2048, 2048);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(755);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 1, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(659);
      CharSequence charSequence0 = CharSequenceUtils.subSequence(charBuffer0, 659);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, charSequence0, 1305);
      assertEquals(659, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer0, (-704));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, charBuffer0, (-2695));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, charBuffer1, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65);
      CharSequence charSequence0 = CharSequenceUtils.subSequence(charBuffer0, 65);
      int int0 = CharSequenceUtils.indexOf(charSequence0, charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4326);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.toCharArray((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4326);
      // Undeclared exception!
      try { 
        CharSequenceUtils.subSequence(charBuffer0, (-1723));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches((CharSequence) null, true, 1, (CharSequence) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2134);
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches(charBuffer0, true, 753, charBuffer0, (-1), 753);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.flip();
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf(charBuffer1, charBuffer1, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf((CharSequence) null, (CharSequence) null, (-150));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf((CharSequence) null, (-1869), (-1869));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2423);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.put('J');
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf(charBuffer1, 0, 2423);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '@';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      CharBuffer charBuffer1 = charBuffer0.compact();
      CharSequence charSequence0 = CharSequenceUtils.subSequence(charBuffer1, 1);
      boolean boolean0 = CharSequenceUtils.regionMatches(charSequence0, false, 0, charBuffer1, 0, 1);
      assertFalse(boolean0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000", charSequence0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2134);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, true, 753, charBuffer0, 4, 753);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '@';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      CharBuffer charBuffer1 = charBuffer0.compact();
      CharSequence charSequence0 = CharSequenceUtils.subSequence(charBuffer1, 1);
      boolean boolean0 = CharSequenceUtils.regionMatches(charSequence0, true, 0, charBuffer1, 0, '@');
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000", charSequence0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches("", false, 2677, charBuffer0, 0, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = CharSequenceUtils.toCharArray(charBuffer0);
      assertNotSame(charArray0, charArray1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      char[] charArray0 = CharSequenceUtils.toCharArray(charBuffer0);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'T';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2423);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 0, 2423);
      assertEquals(2422, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(659);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, (-684), (-684));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[1] = 'A';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      charBuffer0.compact();
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 0, 1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 103, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf((CharSequence) null, 3747, 1572);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharSequence charSequence0 = CharSequenceUtils.subSequence((CharSequence) null, (-1869));
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharSequenceUtils charSequenceUtils0 = new CharSequenceUtils();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf((CharSequence) null, charBuffer0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }
}
