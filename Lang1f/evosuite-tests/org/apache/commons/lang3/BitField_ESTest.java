/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 15 19:52:33 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.BitField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BitField_ESTest extends BitField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      boolean boolean0 = bitField0.isAllSet(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      boolean boolean0 = bitField0.isSet(321);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitField bitField0 = new BitField(1198);
      int int0 = bitField0.setValue(1198, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.setValue(0, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitField bitField0 = new BitField((-2017));
      short short0 = bitField0.setShortValue((short)1, (short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitField bitField0 = new BitField((-1330));
      short short0 = bitField0.setShortValue((short)113, (short)113);
      assertEquals((short)243, short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((short)0, false);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitField bitField0 = new BitField(2578);
      short short0 = bitField0.setShortBoolean((short) (-285), true);
      assertEquals((short) (-269), short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)2004);
      assertEquals((short)2004, short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByteBoolean((byte)1, false);
      assertEquals((byte)1, byte0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitField bitField0 = new BitField((-2017));
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte)31, byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitField bitField0 = new BitField((-1942));
      int int0 = bitField0.setBoolean((-246), false);
      assertEquals(1792, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitField bitField0 = new BitField(4285);
      int int0 = bitField0.set(4285);
      assertEquals(4285, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitField bitField0 = new BitField((-1942));
      int int0 = bitField0.getValue(1169);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BitField bitField0 = new BitField(2375);
      int int0 = bitField0.getValue(609);
      assertEquals(65, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BitField bitField0 = new BitField((-119));
      short short0 = bitField0.getShortValue((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BitField bitField0 = new BitField((-2526));
      short short0 = bitField0.getShortValue((short) (-1406));
      assertEquals((short) (-1791), short0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.getShortRawValue((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.getShortRawValue((short)401);
      assertEquals((short)401, short0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BitField bitField0 = new BitField(104);
      int int0 = bitField0.getRawValue(104);
      assertEquals(104, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BitField bitField0 = new BitField((-180));
      int int0 = bitField0.getRawValue((-180));
      assertEquals((-180), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BitField bitField0 = new BitField((-668));
      short short0 = bitField0.clearShort((short) (-1));
      assertEquals((short)667, short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.clearShort((short) (-2164));
      assertEquals((short) (-2164), short0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BitField bitField0 = new BitField((-2761));
      byte byte0 = bitField0.clearByte((byte)51);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.clearByte((byte) (-80));
      assertEquals((byte) (-80), byte0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BitField bitField0 = new BitField((-3057));
      int int0 = bitField0.clear((-3057));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.clear((-432));
      assertEquals((-432), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BitField bitField0 = new BitField((-2526));
      byte byte0 = bitField0.clearByte((byte)76);
      assertEquals((byte)76, byte0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BitField bitField0 = new BitField((-2017));
      short short0 = bitField0.setShort((short) (-742));
      assertEquals((short) (-737), short0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitField bitField0 = new BitField((-1942));
      int int0 = bitField0.clear((-2843));
      assertEquals(1157, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BitField bitField0 = new BitField((-1495));
      byte byte0 = bitField0.setByte((byte) (-95));
      assertEquals((byte) (-87), byte0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.getValue((-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BitField bitField0 = new BitField((-668));
      int int0 = bitField0.set((short) (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BitField bitField0 = new BitField((-668));
      int int0 = bitField0.setValue((short) (-1), 0);
      assertEquals(667, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.clearShort((short) (-509));
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BitField bitField0 = new BitField((-119));
      int int0 = bitField0.getRawValue((short)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      int int0 = bitField0.setBoolean((byte) (-10), true);
      assertEquals((-10), int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      int int0 = bitField0.setBoolean((short)1616, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BitField bitField0 = new BitField((-2074));
      boolean boolean0 = bitField0.isAllSet((-2074));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BitField bitField0 = new BitField(2425);
      boolean boolean0 = bitField0.isAllSet((-25));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      boolean boolean0 = bitField0.isSet((-10));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      boolean boolean0 = bitField0.isSet(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      short short0 = bitField0.getShortRawValue((byte) (-26));
      assertEquals((short) (-26), short0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((short)11, true);
      assertEquals((short)11, short0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      byte byte0 = bitField0.setByteBoolean((byte) (-26), false);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      short short0 = bitField0.getShortValue((short)3240);
      assertEquals((short)1616, short0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BitField bitField0 = new BitField((-2074));
      short short0 = bitField0.setShortValue((short) (-1764), (short) (-1764));
      assertEquals((short) (-1480), short0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BitField bitField0 = new BitField((-10));
      byte byte0 = bitField0.setByteBoolean((byte) (-26), true);
      assertEquals((byte) (-10), byte0);
  }
}
