/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 21:40:39 GMT 2023
 */

package com.google.javascript.rhino.jstype;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleSourceFile_ESTest extends SimpleSourceFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("qNrPbaQ),", false);
      simpleSourceFile0.toString();
      assertFalse(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      simpleSourceFile0.toString();
      assertFalse(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("h+kJ:#y,^", false);
      boolean boolean0 = simpleSourceFile0.isExtern();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      simpleSourceFile0.getName();
      assertFalse(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      simpleSourceFile0.getName();
      assertFalse(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("fMQT*PD7`6Z i*:H*", true);
      // Undeclared exception!
      try { 
        simpleSourceFile0.getLineOffset(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("fMQT*PD7`6Z i*:H*", true);
      int int0 = simpleSourceFile0.getLineOffset(1978);
      assertEquals(Integer.MIN_VALUE, int0);
      assertTrue(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      simpleSourceFile0.toString();
      assertTrue(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("fMQT*PD7`6Z i*:H*", true);
      int int0 = simpleSourceFile0.getLineOfOffset(1978);
      assertEquals(1, int0);
      assertTrue(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("fMQT*PD7`6Z i*:H*", true);
      int int0 = simpleSourceFile0.getColumnOfOffset(1978);
      assertEquals(0, int0);
      assertTrue(simpleSourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("fMQT*PD7`6Z i*:H*", true);
      boolean boolean0 = simpleSourceFile0.isExtern();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("fMQT*PD7`6Z i*:H*", true);
      simpleSourceFile0.getName();
      assertTrue(simpleSourceFile0.isExtern());
  }
}
