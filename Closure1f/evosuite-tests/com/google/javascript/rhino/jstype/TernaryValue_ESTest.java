/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 09:23:29 GMT 2023
 */

package com.google.javascript.rhino.jstype;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.jstype.TernaryValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TernaryValue_ESTest extends TernaryValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.FALSE;
      ternaryValue0.xor((TernaryValue) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TernaryValue[] ternaryValueArray0 = TernaryValue.values();
      assertEquals(3, ternaryValueArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.forBoolean(false);
      ternaryValue0.or((TernaryValue) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.TRUE;
      ternaryValue0.and((TernaryValue) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.forBoolean(false);
      TernaryValue ternaryValue1 = ternaryValue0.not();
      // Undeclared exception!
      try { 
        ternaryValue1.xor((TernaryValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.TernaryValue$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.forBoolean(false);
      TernaryValue ternaryValue1 = ternaryValue0.not();
      TernaryValue ternaryValue2 = ternaryValue0.xor(ternaryValue1);
      TernaryValue ternaryValue3 = TernaryValue.valueOf("UNKNOWN");
      TernaryValue ternaryValue4 = ternaryValue3.or(ternaryValue2);
      assertSame(ternaryValue4, ternaryValue1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.valueOf("UNKNOWN");
      TernaryValue ternaryValue1 = ternaryValue0.or(ternaryValue0);
      assertSame(ternaryValue1, ternaryValue0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.FALSE;
      TernaryValue ternaryValue1 = TernaryValue.UNKNOWN;
      TernaryValue ternaryValue2 = ternaryValue0.or(ternaryValue1);
      TernaryValue ternaryValue3 = ternaryValue2.and(ternaryValue0);
      assertSame(ternaryValue0, ternaryValue3);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.UNKNOWN;
      TernaryValue ternaryValue1 = ternaryValue0.and(ternaryValue0);
      assertSame(ternaryValue0, ternaryValue1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.forBoolean(true);
      TernaryValue ternaryValue1 = ternaryValue0.or(ternaryValue0);
      assertSame(ternaryValue0, ternaryValue1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.forBoolean(true);
      boolean boolean0 = ternaryValue0.toBoolean(true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.UNKNOWN;
      TernaryValue ternaryValue1 = ternaryValue0.not();
      assertSame(ternaryValue0, ternaryValue1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.UNKNOWN;
      TernaryValue ternaryValue1 = ternaryValue0.xor(ternaryValue0);
      assertSame(ternaryValue1, ternaryValue0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.UNKNOWN;
      boolean boolean0 = ternaryValue0.toBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.forBoolean(false);
      boolean boolean0 = ternaryValue0.toBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.forBoolean(false);
      TernaryValue ternaryValue1 = ternaryValue0.not();
      TernaryValue ternaryValue2 = ternaryValue1.xor(ternaryValue1);
      assertFalse(ternaryValue2.equals((Object)ternaryValue1));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TernaryValue ternaryValue0 = TernaryValue.FALSE;
      TernaryValue ternaryValue1 = ternaryValue0.and(ternaryValue0);
      assertSame(ternaryValue1, ternaryValue0);
  }
}
