/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 09:29:22 GMT 2023
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.InputId;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InputId_ESTest extends InputId_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InputId inputId0 = new InputId((String) null);
      String string0 = inputId0.getIdName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InputId inputId0 = new InputId("");
      String string0 = inputId0.getIdName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InputId inputId0 = new InputId((String) null);
      // Undeclared exception!
      try { 
        inputId0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.InputId", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InputId inputId0 = new InputId(";I[tLjF>C=}");
      InputId inputId1 = new InputId((String) null);
      // Undeclared exception!
      try { 
        inputId1.equals(inputId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InputId inputId0 = new InputId("kWii6b.wqN/[I,");
      String string0 = inputId0.getIdName();
      assertEquals("kWii6b.wqN/[I,", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InputId inputId0 = new InputId("InptId: %ehp&]8\"");
      InputId inputId1 = new InputId("InputId: InptId: %ehp&]8\"");
      boolean boolean0 = inputId0.equals(inputId1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InputId inputId0 = new InputId("~Re0?I?(M");
      boolean boolean0 = inputId0.equals("~Re0?I?(M");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InputId inputId0 = new InputId("~Re0?I?(M");
      boolean boolean0 = inputId0.equals(inputId0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InputId inputId0 = new InputId("InptId: %ehp&]8\"");
      boolean boolean0 = inputId0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InputId inputId0 = new InputId("InptId: %ehp&]8\"");
      String string0 = inputId0.toString();
      assertEquals("InputId: InptId: %ehp&]8\"", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InputId inputId0 = new InputId("InptId: %ehp&]8\"");
      inputId0.hashCode();
  }
}
