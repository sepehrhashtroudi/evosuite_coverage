/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 09:56:24 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Tracer;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Tracer_ESTest extends Tracer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tracer.getTypeToSilentMap();
      Tracer.logCurrentThreadTrace();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = new Tracer.ThreadTrace();
      // Undeclared exception!
      try { 
        tracer_ThreadTrace0.startEvent((Tracer) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      Tracer.appendSpaces(stringBuilder0, 5);
      assertEquals("     ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tracer.Stat tracer_Stat0 = new Tracer.Stat();
      tracer_Stat0.getSilentCount();
      Tracer.getTypeToSilentMap();
      Tracer.initCurrentThreadTrace(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      boolean boolean0 = tracer_ThreadTrace0.isInitialized();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tracer.AtomicTracerStatMap tracer_AtomicTracerStatMap0 = new Tracer.AtomicTracerStatMap();
      Map<String, Long> map0 = tracer_AtomicTracerStatMap0.getMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tracer.Stat tracer_Stat0 = Tracer.getStatsForType("");
      // Undeclared exception!
      try { 
        tracer_Stat0.getExtraInfo(2059);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Tracer$Stat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Tracer.addTracingStatistic((Tracer.TracingStatistic) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Tracer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer(",GM{ON&.h");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      tracer_ThreadTrace0.prettyPrint = false;
      tracer_ThreadTrace0.isInitialized = true;
      tracer_ThreadTrace0.isOutstandingEventsTruncated = false;
      tracer_ThreadTrace0.defaultSilenceThreshold = 0;
      tracer_ThreadTrace0.truncateEvents();
      tracer_ThreadTrace0.toString();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      tracer_ThreadTrace0.prettyPrint = false;
      tracer_ThreadTrace0.prettyPrint = true;
      tracer_ThreadTrace0.truncateEvents();
      Tracer.logCurrentThreadTrace();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        Tracer.shortName(object0, "");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      // Undeclared exception!
      try { 
        tracer_ThreadTrace0.toString();
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Joiner
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      boolean boolean0 = tracer_ThreadTrace0.isEmpty();
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis(181L);
      System.setCurrentTimeMillis(0L);
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      tracer_ThreadTrace0.isInitialized = false;
      tracer_ThreadTrace0.truncateOutstandingEvents();
      tracer_ThreadTrace0.isEmpty();
      tracer_ThreadTrace0.isEmpty();
      Tracer.InternalClock tracer_InternalClock0 = Tracer.clock;
      Object object0 = new Object();
      Tracer tracer0 = Tracer.shortName(object0, "");
      tracer_ThreadTrace0.endEvent(tracer0, (-492));
      tracer_InternalClock0.currentTimeMillis();
      Tracer tracer1 = new Tracer("|  ");
      assertFalse(tracer1.equals((Object)tracer0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      Tracer tracer0 = new Tracer("");
      // Undeclared exception!
      try { 
        tracer_ThreadTrace0.endEvent(tracer0, 0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tracer tracer0 = new Tracer("", " Unstopped timers:\n");
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      // Undeclared exception!
      try { 
        tracer_ThreadTrace0.endEvent(tracer0, 0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tracer.enableTypeMaps();
      Map<String, Long> map0 = Tracer.getTypeToTimeMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tracer.enableTypeMaps();
      Map<String, Long> map0 = Tracer.getTypeToSilentMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tracer.enableTypeMaps();
      Tracer.enableTypeMaps();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tracer.logCurrentThreadTrace();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tracer.initCurrentThreadTrace();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tracer.getTypeToSilentMap();
      Tracer.logAndClearCurrentThreadTrace();
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      tracer_ThreadTrace0.init();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("7u,");
      Tracer.appendSpaces(stringBuilder0, 990);
      assertEquals("7u,                ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        Tracer.appendSpaces((StringBuilder) null, 274);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Tracer.shortName("$9Y8!&XF;0{^9=y~", (String) null);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tracer.enableTypeMaps();
      Map<String, Long> map0 = Tracer.getTypeToCountMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tracer.getCurrentThreadTraceReport();
      Tracer.AtomicTracerStatMap tracer_AtomicTracerStatMap0 = new Tracer.AtomicTracerStatMap();
      tracer_AtomicTracerStatMap0.incrementBy("com.google.javascript.jscomp.Tracer$Event", (-251L));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tracer.setPrettyPrint(false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tracer.shortName((Object) null, "");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Tracer.Stat tracer_Stat0 = new Tracer.Stat();
      int int0 = tracer_Stat0.getCount();
      assertEquals(0, int0);
  }
}
