/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 22:01:36 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Tracer;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Tracer_ESTest extends Tracer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tracer.getThreadTrace();
      Tracer tracer0 = new Tracer("event not found, probably because the event stack overflowed and was truncated");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tracer.getThreadTrace();
      Tracer tracer0 = new Tracer(">0)");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tracer tracer0 = new Tracer("", "Aicuud");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      boolean boolean0 = tracer_ThreadTrace0.isInitialized();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      boolean boolean0 = tracer_ThreadTrace0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tracer.InternalClock tracer_InternalClock0 = Tracer.clock;
      long long0 = tracer_InternalClock0.currentTimeMillis();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tracer.AtomicTracerStatMap tracer_AtomicTracerStatMap0 = new Tracer.AtomicTracerStatMap();
      Map<String, Long> map0 = tracer_AtomicTracerStatMap0.getMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tracer.setDefaultSilenceThreshold(2);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tracer.clearThreadTrace();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "";
      Tracer.Stat tracer_Stat0 = Tracer.getStatsForType(string0);
      int int0 = tracer_Stat0.getTotalTime();
      // Undeclared exception!
      try { 
        tracer_Stat0.getExtraInfo(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Tracer$Stat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tracer.Stat tracer_Stat0 = Tracer.getStatsForType("");
      int int0 = tracer_Stat0.getCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tracer tracer0 = new Tracer("");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tracer tracer0 = new Tracer("tKqd?lge'Zmg/K%Y");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Tracer.appendSpaces((StringBuilder) null, 681);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Tracer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        Tracer.addTracingStatistic((Tracer.TracingStatistic) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Tracer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = new Tracer.ThreadTrace();
      int int0 = 3;
      Tracer.initCurrentThreadTrace(3);
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer((String) null, (String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      boolean boolean0 = false;
      tracer_ThreadTrace0.isInitialized = false;
      tracer_ThreadTrace0.toString();
      tracer_ThreadTrace0.isInitialized = false;
      tracer_ThreadTrace0.init();
      tracer_ThreadTrace0.toString();
      tracer_ThreadTrace0.toString();
      tracer_ThreadTrace0.truncateOutstandingEvents();
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tracer.initCurrentThreadTrace(2238);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer("2xO,(q");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer("/-zR*WzS0$ckc", "");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tracer.getThreadTrace();
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer("");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tracer.getThreadTrace();
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer((String) null);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tracer.getThreadTrace();
      Tracer tracer0 = null;
      try {
        tracer0 = new Tracer("", "");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        Tracer.shortName("", "");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tracer.enableTypeMaps();
      Map<String, Long> map0 = Tracer.getTypeToTimeMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Map<String, Long> map0 = Tracer.getTypeToTimeMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Map<String, Long> map0 = Tracer.getTypeToSilentMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tracer.enableTypeMaps();
      Map<String, Long> map0 = Tracer.getTypeToCountMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Map<String, Long> map0 = Tracer.getTypeToCountMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tracer.enableTypeMaps();
      Tracer.enableTypeMaps();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Tracer.logCurrentThreadTrace();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Tracer.getStatsForType("P");
      Tracer.logCurrentThreadTrace();
      Tracer.Stat tracer_Stat0 = new Tracer.Stat();
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      boolean boolean0 = false;
      tracer_ThreadTrace0.isInitialized = false;
      tracer_ThreadTrace0.isInitialized = false;
      tracer_ThreadTrace0.toString();
      Tracer tracer0 = new Tracer("P", "O8fAbr==QDD%2YqF[<");
      Tracer.setPrettyPrint(false);
      // Undeclared exception!
      try { 
        tracer_ThreadTrace0.startEvent(tracer0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Tracer.appendSpaces((StringBuilder) null, 0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Tracer.appendSpaces(stringBuilder0, 2);
      assertEquals("  ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Tracer.appendSpaces(stringBuilder0, 1110);
      assertEquals("                ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Tracer.initCurrentThreadTrace(0);
      Tracer.initCurrentThreadTrace();
      Tracer.clearTracingStatisticsTestingOnly();
      String string0 = Tracer.getCurrentThreadTraceReport();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        Tracer.shortName((Object) null, "");
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.Tracer$ThreadTrace", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Tracer.enableTypeMaps();
      Map<String, Long> map0 = Tracer.getTypeToSilentMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Tracer.clearCurrentThreadTrace();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Tracer tracer0 = new Tracer("", "");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Tracer.Stat tracer_Stat0 = Tracer.getStatsForType("");
      assertNotNull(tracer_Stat0);
      
      int int0 = tracer_Stat0.getSilentCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Tracer.ThreadTrace tracer_ThreadTrace0 = Tracer.getThreadTrace();
      tracer_ThreadTrace0.truncateEvents();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Tracer.AtomicTracerStatMap tracer_AtomicTracerStatMap0 = new Tracer.AtomicTracerStatMap();
      tracer_AtomicTracerStatMap0.incrementBy("`bG>;uY3iHcjxxH8", 0L);
      tracer_AtomicTracerStatMap0.incrementBy("`bG>;uY3iHcjxxH8", (-626L));
      tracer_AtomicTracerStatMap0.incrementBy(";dw)BlS%@\"ZgvM", 1L);
      tracer_AtomicTracerStatMap0.incrementBy(";dw)BlS%@\"ZgvM", (-626L));
      tracer_AtomicTracerStatMap0.incrementBy(";dw)BlS%@\"ZgvM", 1L);
      tracer_AtomicTracerStatMap0.incrementBy(";dw)BlS%@\"ZgvM", (-626L));
      Tracer tracer0 = new Tracer("tKqd?lge'Zmg/K%Y");
  }
}
