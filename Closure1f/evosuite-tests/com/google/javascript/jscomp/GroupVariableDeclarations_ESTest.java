/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 21:51:59 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.CheckSideEffects;
import com.google.javascript.jscomp.GroupVariableDeclarations;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GroupVariableDeclarations_ESTest extends GroupVariableDeclarations_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SyntheticAst syntheticAst0 = new SyntheticAst("@export only applies to symbols/properties defined in the global scope.");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      GroupVariableDeclarations groupVariableDeclarations0 = new GroupVariableDeclarations((AbstractCompiler) null);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(2190, nodeArray0);
      // Undeclared exception!
      try { 
        groupVariableDeclarations0.process(node0, node1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GroupVariableDeclarations groupVariableDeclarations0 = new GroupVariableDeclarations((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, groupVariableDeclarations0, (ScopeCreator) null);
      // Undeclared exception!
      try { 
        groupVariableDeclarations0.enterScope(nodeTraversal0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("com.google.javascript.jscomp.GroupVariableDeclarations", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CheckSideEffects.StripProtection checkSideEffects_StripProtection0 = new CheckSideEffects.StripProtection((AbstractCompiler) null);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkSideEffects_StripProtection0, syntacticScopeCreator0);
      GroupVariableDeclarations groupVariableDeclarations0 = new GroupVariableDeclarations((AbstractCompiler) null);
      groupVariableDeclarations0.visit(nodeTraversal0, (Node) null, (Node) null);
      assertEquals(0, nodeTraversal0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckSideEffects.StripProtection checkSideEffects_StripProtection0 = new CheckSideEffects.StripProtection((AbstractCompiler) null);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkSideEffects_StripProtection0, syntacticScopeCreator0);
      GroupVariableDeclarations groupVariableDeclarations0 = new GroupVariableDeclarations((AbstractCompiler) null);
      boolean boolean0 = groupVariableDeclarations0.shouldTraverse(nodeTraversal0, (Node) null, (Node) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GroupVariableDeclarations groupVariableDeclarations0 = new GroupVariableDeclarations((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, groupVariableDeclarations0, (ScopeCreator) null);
      groupVariableDeclarations0.exitScope(nodeTraversal0);
      assertEquals(0, nodeTraversal0.getLineNumber());
  }
}
