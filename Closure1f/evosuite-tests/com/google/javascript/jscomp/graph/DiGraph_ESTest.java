/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 17:01:16 GMT 2023
 */

package com.google.javascript.jscomp.graph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.graph.DiGraph;
import com.google.javascript.jscomp.graph.GraphColoring;
import com.google.javascript.jscomp.graph.LinkedDirectedGraph;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiGraph_ESTest extends DiGraph_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedDirectedGraph.LinkedDirectedGraphEdge<LinkedDirectedGraph.LinkedDirectedGraphEdge<Integer, Object>, Object> linkedDirectedGraph_LinkedDirectedGraphEdge0 = new LinkedDirectedGraph.LinkedDirectedGraphEdge<LinkedDirectedGraph.LinkedDirectedGraphEdge<Integer, Object>, Object>((DiGraph.DiGraphNode<LinkedDirectedGraph.LinkedDirectedGraphEdge<Integer, Object>, Object>) null, (Object) null, (DiGraph.DiGraphNode<LinkedDirectedGraph.LinkedDirectedGraphEdge<Integer, Object>, Object>) null);
      linkedDirectedGraph_LinkedDirectedGraphEdge0.setSource((DiGraph.DiGraphNode<LinkedDirectedGraph.LinkedDirectedGraphEdge<Integer, Object>, Object>) null);
      assertEquals("black", linkedDirectedGraph_LinkedDirectedGraphEdge0.getColor());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GraphColoring.Color graphColoring_Color0 = new GraphColoring.Color(1074);
      LinkedDirectedGraph.LinkedDirectedGraphEdge<String, GraphColoring.Color> linkedDirectedGraph_LinkedDirectedGraphEdge0 = new LinkedDirectedGraph.LinkedDirectedGraphEdge<String, GraphColoring.Color>((DiGraph.DiGraphNode<String, GraphColoring.Color>) null, graphColoring_Color0, (DiGraph.DiGraphNode<String, GraphColoring.Color>) null);
      linkedDirectedGraph_LinkedDirectedGraphEdge0.setDestination((DiGraph.DiGraphNode<String, GraphColoring.Color>) null);
      assertEquals("black", linkedDirectedGraph_LinkedDirectedGraphEdge0.getColor());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(0);
      LinkedDirectedGraph.LinkedDirectedGraphEdge<LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>, Integer> linkedDirectedGraph_LinkedDirectedGraphEdge0 = new LinkedDirectedGraph.LinkedDirectedGraphEdge<LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>, Integer>((DiGraph.DiGraphNode<LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>, Integer>) null, integer0, (DiGraph.DiGraphNode<LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>, Integer>) null);
      DiGraph.DiGraphNode<LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>, Integer> diGraph_DiGraphNode0 = linkedDirectedGraph_LinkedDirectedGraphEdge0.getSource();
      assertNull(diGraph_DiGraphNode0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GraphColoring.Color graphColoring_Color0 = new GraphColoring.Color(2369);
      LinkedDirectedGraph.AnnotatedLinkedDirectedGraphEdge<Integer, GraphColoring.Color> linkedDirectedGraph_AnnotatedLinkedDirectedGraphEdge0 = new LinkedDirectedGraph.AnnotatedLinkedDirectedGraphEdge<Integer, GraphColoring.Color>((DiGraph.DiGraphNode<Integer, GraphColoring.Color>) null, graphColoring_Color0, (DiGraph.DiGraphNode<Integer, GraphColoring.Color>) null);
      DiGraph.DiGraphNode<Integer, GraphColoring.Color> diGraph_DiGraphNode0 = linkedDirectedGraph_AnnotatedLinkedDirectedGraphEdge0.getDestination();
      assertNull(diGraph_DiGraphNode0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedDirectedGraph<LinkedDirectedGraph.AnnotatedLinkedDirectedGraphNode<Object, Object>, String> linkedDirectedGraph0 = null;
      try {
        linkedDirectedGraph0 = new LinkedDirectedGraph<LinkedDirectedGraph.AnnotatedLinkedDirectedGraphNode<Object, Object>, String>(true, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("com.google.javascript.jscomp.graph.LinkedDirectedGraph", e);
      }
  }
}
