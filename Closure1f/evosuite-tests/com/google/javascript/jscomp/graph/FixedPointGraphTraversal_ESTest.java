/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 17:03:48 GMT 2023
 */

package com.google.javascript.jscomp.graph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.graph.DiGraph;
import com.google.javascript.jscomp.graph.FixedPointGraphTraversal;
import com.google.javascript.jscomp.graph.LinkedDirectedGraph;
import com.google.javascript.jscomp.graph.LinkedUndirectedGraph;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FixedPointGraphTraversal_ESTest extends FixedPointGraphTraversal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FixedPointGraphTraversal.EdgeCallback<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>> fixedPointGraphTraversal_EdgeCallback0 = (FixedPointGraphTraversal.EdgeCallback<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>>) mock(FixedPointGraphTraversal.EdgeCallback.class, new ViolatedAssumptionAnswer());
      FixedPointGraphTraversal<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>> fixedPointGraphTraversal0 = FixedPointGraphTraversal.newTraversal((FixedPointGraphTraversal.EdgeCallback<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>>) fixedPointGraphTraversal_EdgeCallback0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        fixedPointGraphTraversal0.computeFixedPoint((DiGraph<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, Object>>) null, (Set<String>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.graph.FixedPointGraphTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FixedPointGraphTraversal.EdgeCallback<String, String> fixedPointGraphTraversal_EdgeCallback0 = (FixedPointGraphTraversal.EdgeCallback<String, String>) mock(FixedPointGraphTraversal.EdgeCallback.class, new ViolatedAssumptionAnswer());
      FixedPointGraphTraversal<String, String> fixedPointGraphTraversal0 = FixedPointGraphTraversal.newTraversal((FixedPointGraphTraversal.EdgeCallback<String, String>) fixedPointGraphTraversal_EdgeCallback0);
      // Undeclared exception!
      try { 
        fixedPointGraphTraversal0.computeFixedPoint((DiGraph<String, String>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("com.google.javascript.jscomp.graph.FixedPointGraphTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FixedPointGraphTraversal.EdgeCallback<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, String>> fixedPointGraphTraversal_EdgeCallback0 = (FixedPointGraphTraversal.EdgeCallback<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, String>>) mock(FixedPointGraphTraversal.EdgeCallback.class, new ViolatedAssumptionAnswer());
      FixedPointGraphTraversal<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, String>> fixedPointGraphTraversal0 = new FixedPointGraphTraversal<String, LinkedDirectedGraph.LinkedDirectedGraphNode<Object, String>>(fixedPointGraphTraversal_EdgeCallback0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FixedPointGraphTraversal.EdgeCallback<LinkedUndirectedGraph.LinkedUndirectedGraphNode<Integer, Object>, Object> fixedPointGraphTraversal_EdgeCallback0 = (FixedPointGraphTraversal.EdgeCallback<LinkedUndirectedGraph.LinkedUndirectedGraphNode<Integer, Object>, Object>) mock(FixedPointGraphTraversal.EdgeCallback.class, new ViolatedAssumptionAnswer());
      FixedPointGraphTraversal<LinkedUndirectedGraph.LinkedUndirectedGraphNode<Integer, Object>, Object> fixedPointGraphTraversal0 = FixedPointGraphTraversal.newTraversal((FixedPointGraphTraversal.EdgeCallback<LinkedUndirectedGraph.LinkedUndirectedGraphNode<Integer, Object>, Object>) fixedPointGraphTraversal_EdgeCallback0);
      // Undeclared exception!
      try { 
        fixedPointGraphTraversal0.computeFixedPoint((DiGraph<LinkedUndirectedGraph.LinkedUndirectedGraphNode<Integer, Object>, Object>) null, (LinkedUndirectedGraph.LinkedUndirectedGraphNode<Integer, Object>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("com.google.javascript.jscomp.graph.FixedPointGraphTraversal", e);
      }
  }
}
