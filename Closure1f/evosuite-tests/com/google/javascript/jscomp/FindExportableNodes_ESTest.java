/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 22:43:59 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.FindExportableNodes;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FindExportableNodes_ESTest extends FindExportableNodes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 63);
      Node node1 = new Node((-1063));
      FindExportableNodes.GenerateNodeContext findExportableNodes_GenerateNodeContext0 = new FindExportableNodes.GenerateNodeContext(node0, node1, node0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Node node0 = new Node(1199);
      FindExportableNodes.GenerateNodeContext findExportableNodes_GenerateNodeContext0 = new FindExportableNodes.GenerateNodeContext((Node) null, node0, node0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 63);
      FindExportableNodes.GenerateNodeContext findExportableNodes_GenerateNodeContext0 = new FindExportableNodes.GenerateNodeContext(node0, node0, node0);
      findExportableNodes_GenerateNodeContext0.getNode();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 63);
      FindExportableNodes.GenerateNodeContext findExportableNodes_GenerateNodeContext0 = new FindExportableNodes.GenerateNodeContext(node0, node0, node0);
      findExportableNodes_GenerateNodeContext0.getContextNode();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 63);
      FindExportableNodes.GenerateNodeContext findExportableNodes_GenerateNodeContext0 = new FindExportableNodes.GenerateNodeContext(node0, node0, node0);
      findExportableNodes_GenerateNodeContext0.getScriptNode();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FindExportableNodes findExportableNodes0 = null;
      try {
        findExportableNodes0 = new FindExportableNodes((AbstractCompiler) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("com.google.javascript.jscomp.FindExportableNodes", e);
      }
  }
}
