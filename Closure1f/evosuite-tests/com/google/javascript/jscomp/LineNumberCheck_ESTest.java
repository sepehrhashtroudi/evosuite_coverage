/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 17:26:03 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.LineNumberCheck;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LineNumberCheck_ESTest extends LineNumberCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, (NodeTraversal.Callback) null);
      Node node0 = new Node(383);
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      // Undeclared exception!
      try { 
        lineNumberCheck0.visit(nodeTraversal0, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.LineNumberCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, lineNumberCheck0);
      SyntheticAst syntheticAst0 = new SyntheticAst("JSC_MISSING_LINE_INFO");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      // Undeclared exception!
      try { 
        lineNumberCheck0.shouldTraverse(nodeTraversal0, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.LineNumberCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      Node node0 = new Node(55);
      // Undeclared exception!
      try { 
        lineNumberCheck0.process((Node) null, node0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, lineNumberCheck0, syntacticScopeCreator0);
      SyntheticAst syntheticAst0 = new SyntheticAst("goog.object.create");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      lineNumberCheck0.shouldTraverse(nodeTraversal0, node0, node0);
      Node node1 = new Node(40);
      // Undeclared exception!
      try { 
        lineNumberCheck0.visit(nodeTraversal0, node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.LineNumberCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, lineNumberCheck0, syntacticScopeCreator0);
      SyntheticAst syntheticAst0 = new SyntheticAst("goog.object.create");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      lineNumberCheck0.shouldTraverse(nodeTraversal0, node0, node0);
      Node node1 = new Node(0);
      // Undeclared exception!
      try { 
        lineNumberCheck0.visit(nodeTraversal0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, lineNumberCheck0);
      SyntheticAst syntheticAst0 = new SyntheticAst("JSC_MISSING_LINE_INFO");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      lineNumberCheck0.visit(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, lineNumberCheck0, syntacticScopeCreator0);
      Node node0 = new Node(2309);
      lineNumberCheck0.visit(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, lineNumberCheck0, syntacticScopeCreator0);
      Node node0 = new Node(2309);
      lineNumberCheck0.shouldTraverse(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LineNumberCheck lineNumberCheck0 = new LineNumberCheck((AbstractCompiler) null);
      SyntheticAst syntheticAst0 = new SyntheticAst("JSC_MISSING_LINE_INFO");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      // Undeclared exception!
      try { 
        lineNumberCheck0.setCheckSubTree(node0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }
}
