/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 22:57:19 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Region;
import com.google.javascript.jscomp.SourceFile;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.StringReader;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SourceFile_ESTest extends SourceFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("t+wpN", "t+wpN", "t?UZBV76w");
      Region region0 = sourceFile_Preloaded0.getRegion(1);
      assertNull(region0);
      assertFalse(sourceFile_Preloaded0.isExtern());
      assertEquals("t+wpN", sourceFile_Preloaded0.getOriginalPath());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      doReturn("|Gj").when(sourceFile_Generator0).getCode();
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("|2Jm8/yS]xL~~n}", "j[9C>I.(", sourceFile_Generator0);
      sourceFile_Generated0.getCode();
      assertEquals("j[9C>I.(", sourceFile_Generated0.getOriginalPath());
      assertFalse(sourceFile_Generated0.isExtern());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = MockFile.createTempFile("F-N_", "~MAQi`5)=6D~zdXh");
      Charset charset0 = Charset.defaultCharset();
      SourceFile.OnDisk sourceFile_OnDisk0 = null;
      try {
        sourceFile_OnDisk0 = new SourceFile.OnDisk(file0, "~MAQi`5)=6D~zdXh", charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$OnDisk", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("t+wpN", "t+wpN", "t?UZBV76w");
      int int0 = sourceFile_Preloaded0.getColumnOfOffset(3);
      assertEquals("t+wpN", sourceFile_Preloaded0.getOriginalPath());
      assertFalse(sourceFile_Preloaded0.isExtern());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("t+wpN", "t+wpN", "t?UZBV76w");
      String string0 = sourceFile_Preloaded0.getCodeNoCache();
      assertEquals("t?UZBV76w", string0);
      assertFalse(sourceFile_Preloaded0.isExtern());
      assertEquals("t+wpN", sourceFile_Preloaded0.getOriginalPath());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("Y", "", "");
      String string0 = sourceFile_Preloaded0.getCode();
      assertEquals("", sourceFile_Preloaded0.getOriginalPath());
      assertEquals("", string0);
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SourceFile sourceFile0 = new SourceFile("?6!a2gZ\":");
      // Undeclared exception!
      try { 
        sourceFile0.getRegion((-3240));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sourceFile_Generator0).getCode();
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("h/S", "", sourceFile_Generator0);
      // Undeclared exception!
      try { 
        sourceFile_Generated0.getNumLines();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SourceFile sourceFile0 = new SourceFile("_v ");
      // Undeclared exception!
      try { 
        sourceFile0.getLineOffset((-1610));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sourceFile_Generator0).getCode();
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("`Nq8PUH.MD5T-U-*", "`Nq8PUH.MD5T-U-*", sourceFile_Generator0);
      // Undeclared exception!
      try { 
        sourceFile_Generated0.getLineOfOffset((-762));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SourceFile sourceFile0 = new SourceFile("To^g4Kg+y?UPe]R?");
      // Undeclared exception!
      try { 
        sourceFile0.getLine(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SourceFile sourceFile0 = new SourceFile("4r+\"iyRzn`");
      // Undeclared exception!
      try { 
        sourceFile0.getColumnOfOffset(3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("com.google.javascript.jscomp.SourceFile$Preloaded", "G.%kn\"hV/RE+Wa", "AEyRJ-jL0{>");
      // Undeclared exception!
      try { 
        sourceFile_Preloaded0.getColumnOfOffset((-2080));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sourceFile_Generator0).getCode();
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("_-", "_-", sourceFile_Generator0);
      // Undeclared exception!
      try { 
        sourceFile_Generated0.getCodeReader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("t+wpN", "t+wpN", "t?UZBV76w");
      sourceFile_Preloaded0.getLineOfOffset(0);
      assertEquals("t+wpN", sourceFile_Preloaded0.getOriginalPath());
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SourceFile sourceFile0 = null;
      try {
        sourceFile0 = new SourceFile("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // a source must have a name
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("t+wpN", "t+wpN", "t?UZBV76w");
      assertEquals("t+wpN", sourceFile_Preloaded0.getOriginalPath());
      
      sourceFile_Preloaded0.setOriginalPath("");
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded");
      sourceFile_Preloaded0.getCode();
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SourceFile.Builder sourceFile_Builder0 = null;
      try {
        sourceFile_Builder0 = new SourceFile.Builder();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceFile.builder();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      doReturn("_-").when(sourceFile_Generator0).getCode();
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("_-", "_-", sourceFile_Generator0);
      sourceFile_Generated0.getCodeReader();
      Region region0 = sourceFile_Generated0.getRegion(0);
      assertNotNull(region0);
      assertEquals(1, region0.getEndingLineNumber());
      assertFalse(sourceFile_Generated0.isExtern());
      assertEquals("_-", region0.getSourceExcerpt());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded");
      Region region0 = sourceFile_Preloaded0.getRegion(2147483645);
      assertNull(region0);
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded");
      String string0 = sourceFile_Preloaded0.getLine((-2501));
      assertEquals("com.google.javascript.jscomp.SourceFile$Preloaded", string0);
      assertNotNull(string0);
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("Y", "", "");
      String string0 = sourceFile_Preloaded0.getLine(1);
      assertNull(string0);
      assertFalse(sourceFile_Preloaded0.isExtern());
      assertEquals("", sourceFile_Preloaded0.getOriginalPath());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      doReturn("`Nq8PUH.MDT-z-*").when(sourceFile_Generator0).getCode();
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("`Nq8PUH.MDT-z-*", "`Nq8PUH.MDT-z-*", sourceFile_Generator0);
      int int0 = sourceFile_Generated0.getLineOfOffset((-762));
      assertFalse(sourceFile_Generated0.isExtern());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("!0L/", "!0L/", "!0L/");
      boolean boolean0 = sourceFile_Preloaded0.hasSourceInMemory();
      assertFalse(sourceFile_Preloaded0.isExtern());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("H4hL wpv", "H4hL wpv", sourceFile_Generator0);
      boolean boolean0 = sourceFile_Generated0.hasSourceInMemory();
      assertFalse(sourceFile_Generated0.isExtern());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("_-", "_-", sourceFile_Generator0);
      sourceFile_Generated0.getOriginalPath();
      assertFalse(sourceFile_Generated0.isExtern());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SourceFile sourceFile0 = new SourceFile("KI*\":w^");
      String string0 = sourceFile0.getOriginalPath();
      assertNotNull(string0);
      assertFalse(sourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      doReturn("L{dYrHw").when(sourceFile_Generator0).getCode();
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("com.google.javascript.jscomp.SourceFile$OnDisk", "L{dYrHw", sourceFile_Generator0);
      // Undeclared exception!
      try { 
        sourceFile_Generated0.getLineOffset((-2337));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected line number between 1 and 1
         // Actual: -2337
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SourceFile sourceFile0 = null;
      try {
        sourceFile0 = new SourceFile((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // a source must have a name
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("H4hL wpv", "H4hL wpv", sourceFile_Generator0);
      boolean boolean0 = sourceFile_Generated0.isExtern();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        SourceFile.fromInputStream("", (InputStream) pipedInputStream0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        SourceFile.fromFile("\n", charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceFile.fromFile("&t}g5?$9;<GfXh10D");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        SourceFile.fromInputStream((String) null, "`Nq8PUH.MDT-z-*", (InputStream) byteArrayInputStream0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SourceFile sourceFile0 = new SourceFile("[MY_.-Lj9 jB*@^");
      sourceFile0.toString();
      assertFalse(sourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded");
      sourceFile_Preloaded0.setIsExtern(false);
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("Y", "", "");
      sourceFile_Preloaded0.getNumLines();
      String string0 = sourceFile_Preloaded0.getLine((-3248));
      assertNull(string0);
      assertEquals("", sourceFile_Preloaded0.getOriginalPath());
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded", "com.google.javascript.jscomp.SourceFile$Preloaded");
      sourceFile_Preloaded0.getName();
      assertFalse(sourceFile_Preloaded0.isExtern());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("H4hL wpv", "H4hL wpv", sourceFile_Generator0);
      sourceFile_Generated0.getCodeNoCache();
      assertFalse(sourceFile_Generated0.isExtern());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SourceFile sourceFile0 = new SourceFile("4r+\"iyRzn`");
      sourceFile0.clearCachedSource();
      assertFalse(sourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceFile.fromCode("\nActual: ", "\nActual: ");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      // Undeclared exception!
      try { 
        SourceFile.fromReader("Ry'Hg?ae.bMCn`|:h{ ", stringReader0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceFile.fromCode("b0", "b0", "b0");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        SourceFile.fromFile((File) null, charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SourceFile.Preloaded sourceFile_Preloaded0 = new SourceFile.Preloaded("t+wpN", "t+wpN", "t?UZBV76w");
      int int0 = sourceFile_Preloaded0.getColumnOfOffset(0);
      assertEquals("t+wpN", sourceFile_Preloaded0.getOriginalPath());
      assertFalse(sourceFile_Preloaded0.isExtern());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        SourceFile.fromGenerator("Q>V|f7[x$&&", sourceFile_Generator0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
      SourceFile.Generated sourceFile_Generated0 = new SourceFile.Generated("H4hL wpv", "H4hL wpv", sourceFile_Generator0);
      sourceFile_Generated0.clearCachedSource();
      assertFalse(sourceFile_Generated0.isExtern());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceFile.fromFile((File) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Charsets
         //
         verifyException("com.google.javascript.jscomp.SourceFile$Builder", e);
      }
  }
}
