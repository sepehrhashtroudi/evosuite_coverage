/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 17:51:36 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.DiagnosticGroup;
import com.google.javascript.jscomp.DiagnosticGroupWarningsGuard;
import com.google.javascript.jscomp.DiagnosticType;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.StrictWarningsGuard;
import com.google.javascript.jscomp.WarningsGuard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WarningsGuard_ESTest extends WarningsGuard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StrictWarningsGuard strictWarningsGuard0 = new StrictWarningsGuard();
      DiagnosticType diagnosticType0 = StrictWarningsGuard.UNRAISABLE_WARNING;
      String[] stringArray0 = new String[8];
      JSError jSError0 = JSError.make((String) null, 3517, (-2248), diagnosticType0, stringArray0);
      strictWarningsGuard0.level(jSError0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StrictWarningsGuard strictWarningsGuard0 = new StrictWarningsGuard();
      DiagnosticType diagnosticType0 = DiagnosticType.error("", ":>#uN9)x>Pa\"yj:(L");
      String[] stringArray0 = new String[4];
      JSError jSError0 = JSError.make("", 83, 83, diagnosticType0, stringArray0);
      CheckLevel checkLevel0 = strictWarningsGuard0.level(jSError0);
      assertEquals(CheckLevel.ERROR, checkLevel0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CheckLevel checkLevel0 = CheckLevel.ERROR;
      DiagnosticGroupWarningsGuard diagnosticGroupWarningsGuard0 = new DiagnosticGroupWarningsGuard((DiagnosticGroup) null, checkLevel0);
      DiagnosticType diagnosticType0 = AbstractCompiler.READ_ERROR;
      String[] stringArray0 = new String[0];
      JSError jSError0 = JSError.make("sanityCheck", 0, 0, checkLevel0, diagnosticType0, stringArray0);
      // Undeclared exception!
      try { 
        diagnosticGroupWarningsGuard0.level(jSError0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DiagnosticGroupWarningsGuard", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      DiagnosticGroupWarningsGuard diagnosticGroupWarningsGuard0 = new DiagnosticGroupWarningsGuard((DiagnosticGroup) null, checkLevel0);
      // Undeclared exception!
      try { 
        diagnosticGroupWarningsGuard0.enables((DiagnosticGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DiagnosticGroupWarningsGuard", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CheckLevel checkLevel0 = CheckLevel.OFF;
      DiagnosticGroupWarningsGuard diagnosticGroupWarningsGuard0 = new DiagnosticGroupWarningsGuard((DiagnosticGroup) null, checkLevel0);
      // Undeclared exception!
      try { 
        diagnosticGroupWarningsGuard0.disables((DiagnosticGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DiagnosticGroupWarningsGuard", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WarningsGuard.Priority warningsGuard_Priority0 = WarningsGuard.Priority.MIN;
      int int0 = warningsGuard_Priority0.getValue();
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CheckLevel checkLevel0 = CheckLevel.OFF;
      DiagnosticGroupWarningsGuard diagnosticGroupWarningsGuard0 = new DiagnosticGroupWarningsGuard((DiagnosticGroup) null, checkLevel0);
      int int0 = diagnosticGroupWarningsGuard0.getPriority();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StrictWarningsGuard strictWarningsGuard0 = new StrictWarningsGuard();
      boolean boolean0 = strictWarningsGuard0.enables((DiagnosticGroup) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StrictWarningsGuard strictWarningsGuard0 = new StrictWarningsGuard();
      boolean boolean0 = strictWarningsGuard0.disables((DiagnosticGroup) null);
      assertFalse(boolean0);
  }
}
