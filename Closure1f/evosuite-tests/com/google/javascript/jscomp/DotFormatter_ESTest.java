/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 22:58:53 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.DotFormatter;
import com.google.javascript.jscomp.graph.GraphvizGraph;
import com.google.javascript.rhino.Node;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DotFormatter_ESTest extends DotFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Node node0 = new Node(25);
      MockPrintStream mockPrintStream0 = new MockPrintStream("digraph AST {\n  node [color=lightblue2, style=filled];\n  node0 [label=\"MOD\"];\n}\n");
      DotFormatter.appendDot(node0, (ControlFlowGraph<Node>) null, mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.newInstanceForTesting();
      Node node0 = new Node(33);
      dotFormatter0.key(node0);
      Node node1 = new Node(40, 623, 51);
      dotFormatter0.key(node1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Node node0 = new Node(1, 1, 0);
      // Undeclared exception!
      try { 
        DotFormatter.toDot(node0, (ControlFlowGraph<Node>) null, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        DotFormatter.toDot((Node) null, (ControlFlowGraph<Node>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DotFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2329, nodeArray0, (-4172), (-109));
      // Undeclared exception!
      try { 
        DotFormatter.toDot(node0, (ControlFlowGraph<Node>) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2329
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DotFormatter.toDot((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DotFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DotFormatter.toDot((GraphvizGraph) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DotFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.newInstanceForTesting();
      // Undeclared exception!
      try { 
        dotFormatter0.key((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DotFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.newInstanceForTesting();
      Node node0 = new Node(1837, 0, 1837);
      // Undeclared exception!
      try { 
        dotFormatter0.key(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1837
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      // Undeclared exception!
      try { 
        DotFormatter.appendDot((Node) null, (ControlFlowGraph<Node>) null, charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        DotFormatter.appendDot((Node) null, (ControlFlowGraph<Node>) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DotFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Node node0 = new Node(12);
      DotFormatter.toDot(node0, (ControlFlowGraph<Node>) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Node node0 = new Node(122);
      DotFormatter.toDot(node0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Node node0 = new Node(44);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        DotFormatter.appendDot(node0, (ControlFlowGraph<Node>) null, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Node node0 = new Node(1499);
      // Undeclared exception!
      try { 
        DotFormatter.toDot(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1499
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Node node0 = new Node(33);
      DotFormatter.toDot(node0, (ControlFlowGraph<Node>) null, true);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.newInstanceForTesting();
      Node node0 = new Node(44);
      dotFormatter0.key(node0);
      dotFormatter0.key(node0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DotFormatter.toDot((Node) null, (ControlFlowGraph<Node>) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DotFormatter", e);
      }
  }
}
