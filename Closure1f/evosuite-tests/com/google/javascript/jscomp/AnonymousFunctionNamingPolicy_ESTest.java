/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 10:19:52 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.AnonymousFunctionNamingPolicy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AnonymousFunctionNamingPolicy_ESTest extends AnonymousFunctionNamingPolicy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AnonymousFunctionNamingPolicy[] anonymousFunctionNamingPolicyArray0 = AnonymousFunctionNamingPolicy.values();
      assertEquals(3, anonymousFunctionNamingPolicyArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy0 = AnonymousFunctionNamingPolicy.valueOf("OFF");
      assertEquals(AnonymousFunctionNamingPolicy.OFF, anonymousFunctionNamingPolicy0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy0 = AnonymousFunctionNamingPolicy.MAPPED;
      char[] charArray0 = anonymousFunctionNamingPolicy0.getReservedCharacters();
      assertArrayEquals(new char[] {'$'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy0 = AnonymousFunctionNamingPolicy.OFF;
      char[] charArray0 = anonymousFunctionNamingPolicy0.getReservedCharacters();
      assertNull(charArray0);
  }
}
