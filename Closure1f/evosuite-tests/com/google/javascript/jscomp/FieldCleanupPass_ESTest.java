/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 18:01:52 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.FieldCleanupPass;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldCleanupPass_ESTest extends FieldCleanupPass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldCleanupPass fieldCleanupPass0 = new FieldCleanupPass((AbstractCompiler) null);
      SyntheticAst syntheticAst0 = new SyntheticAst("com.google.javascript.jscomp.FieldCleanupPass$QualifiedNameSearchTraversal");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      // Undeclared exception!
      try { 
        fieldCleanupPass0.hotSwapScript(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.FieldCleanupPass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldCleanupPass.QualifiedNameSearchTraversal fieldCleanupPass_QualifiedNameSearchTraversal0 = new FieldCleanupPass.QualifiedNameSearchTraversal((JSTypeRegistry) null, "_S");
      Node node0 = new Node((-1));
      fieldCleanupPass_QualifiedNameSearchTraversal0.visit((NodeTraversal) null, node0, node0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldCleanupPass fieldCleanupPass0 = new FieldCleanupPass((AbstractCompiler) null);
      fieldCleanupPass0.process((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldCleanupPass fieldCleanupPass0 = new FieldCleanupPass((AbstractCompiler) null);
      SyntheticAst syntheticAst0 = new SyntheticAst("com.google.javascript.jscomp.FieldCleanupPass$QualifiedNameSearchTraversal");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      // Undeclared exception!
      try { 
        fieldCleanupPass0.hotSwapScript(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.FieldCleanupPass", e);
      }
  }
}
