/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 16 18:35:29 GMT 2023
 */

package com.google.debugging.sourcemap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.debugging.sourcemap.SourceMapLineDecoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SourceMapLineDecoder_ESTest extends SourceMapLineDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = SourceMapLineDecoder.getIdFromRelativeId(0, 0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SourceMapLineDecoder.LineEntry sourceMapLineDecoder_LineEntry0 = SourceMapLineDecoder.decodeLineEntry(" TvRmKN:#4f+;&Sz", 2303);
      assertNotNull(sourceMapLineDecoder_LineEntry0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SourceMapLineDecoder.StringParser sourceMapLineDecoder_StringParser0 = new SourceMapLineDecoder.StringParser("com.google.debugging.sourcemap.SourceMapLineDecoder");
      char char0 = sourceMapLineDecoder_StringParser0.peek();
      assertEquals('c', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SourceMapLineDecoder.StringParser sourceMapLineDecoder_StringParser0 = new SourceMapLineDecoder.StringParser(">");
      sourceMapLineDecoder_StringParser0.next();
      boolean boolean0 = sourceMapLineDecoder_StringParser0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = SourceMapLineDecoder.getIdFromRelativeId(0, 4039, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = SourceMapLineDecoder.getIdFromRelativeId(512, 512, 512);
      assertEquals(1023, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SourceMapLineDecoder.LineEntry sourceMapLineDecoder_LineEntry0 = new SourceMapLineDecoder.LineEntry(0, 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SourceMapLineDecoder.StringParser sourceMapLineDecoder_StringParser0 = new SourceMapLineDecoder.StringParser("hp1RC,+a$tR");
      boolean boolean0 = sourceMapLineDecoder_StringParser0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SourceMapLineDecoder.StringParser sourceMapLineDecoder_StringParser0 = new SourceMapLineDecoder.StringParser("]");
      boolean boolean0 = sourceMapLineDecoder_StringParser0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SourceMapLineDecoder.LineEntry sourceMapLineDecoder_LineEntry0 = SourceMapLineDecoder.decodeLineEntry("IqLOo%Rum", (-3242));
      assertNotNull(sourceMapLineDecoder_LineEntry0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceMapLineDecoder.decodeLine("]");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Lists
         //
         verifyException("com.google.debugging.sourcemap.SourceMapLineDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceMapLineDecoder.decodeLineEntry("!zCC%AqGT1'^&Z", 3740);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceMapLineDecoder.decodeLineEntry((String) null, (-564));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.debugging.sourcemap.SourceMapLineDecoder$StringParser", e);
      }
  }
}
