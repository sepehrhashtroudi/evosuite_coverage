/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 20 00:59:58 GMT 2022
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.GnuParser;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GnuParser_ESTest extends GnuParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = gnuParser0.flatten((Options) null, stringArray0, true);
      assertNotSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Bh:\"V6";
      stringArray0[1] = "-,3 Bh=I&:J:/w";
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      Options options1 = options0.addOption("D", false, "-oz?M{Hu-K");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "-D^~)`[jTyr";
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options1, stringArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "1";
      stringArray0[1] = "CF G~";
      stringArray0[2] = "1";
      stringArray0[3] = "-";
      // Undeclared exception!
      try { 
        gnuParser0.parse(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "--";
      String[] stringArray1 = gnuParser0.flatten((Options) null, stringArray0, true);
      assertEquals(5, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "-D^~)`[jTyr";
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, true);
      assertEquals(5, stringArray1.length);
  }
}
