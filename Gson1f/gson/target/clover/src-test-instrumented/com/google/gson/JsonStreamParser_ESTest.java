/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 05 09:55:18 GMT 2023
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonStreamParser;
import java.io.Reader;
import java.io.StringReader;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonStreamParser_ESTest extends JsonStreamParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":Eutv.,Stiw/6");
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser(stringReader0);
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected literal value near :Eutv.,Stiw/6
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("5d[,");
      jsonStreamParser0.next();
      JsonElement jsonElement0 = jsonStreamParser0.next();
      assertTrue(jsonElement0.isJsonNull());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("5d[,");
      boolean boolean0 = jsonStreamParser0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser(stringReader0);
      // Undeclared exception!
      try { 
        jsonStreamParser0.hasNext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.EOFException: End of input
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = null;
      try {
        jsonStreamParser0 = new JsonStreamParser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = null;
      try {
        jsonStreamParser0 = new JsonStreamParser((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // in == null
         //
         verifyException("com.google.gson.stream.JsonReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("{A[");
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected ':' near {A[
         //
         verifyException("com.google.gson.Streams", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("Expected ':'");
      jsonStreamParser0.next();
      jsonStreamParser0.next();
      // Undeclared exception!
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser(">");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jsonStreamParser0.forEachRemaining(consumer0);
      boolean boolean0 = jsonStreamParser0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser(">");
      // Undeclared exception!
      try { 
        jsonStreamParser0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("*/");
      jsonStreamParser0.next();
      // Undeclared exception!
      try { 
        jsonStreamParser0.hasNext();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.google.gson.stream.JsonReader", e);
      }
  }
}
