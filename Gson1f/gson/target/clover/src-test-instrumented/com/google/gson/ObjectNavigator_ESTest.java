/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 05 09:39:45 GMT 2023
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.AnonymousAndLocalClassExclusionStrategy;
import com.google.gson.DisjunctionExclusionStrategy;
import com.google.gson.ExclusionStrategy;
import com.google.gson.GenericArrayTypeImpl;
import com.google.gson.MemoryRefStack;
import com.google.gson.ObjectNavigator;
import com.google.gson.ObjectTypePair;
import java.lang.reflect.Type;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectNavigator_ESTest extends ObjectNavigator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MemoryRefStack memoryRefStack0 = new MemoryRefStack();
      GenericArrayTypeImpl genericArrayTypeImpl0 = new GenericArrayTypeImpl((Type) null);
      ObjectTypePair objectTypePair0 = new ObjectTypePair(memoryRefStack0, genericArrayTypeImpl0, true);
      LinkedList<ExclusionStrategy> linkedList0 = new LinkedList<ExclusionStrategy>();
      DisjunctionExclusionStrategy disjunctionExclusionStrategy0 = new DisjunctionExclusionStrategy(linkedList0);
      ObjectNavigator objectNavigator0 = new ObjectNavigator(objectTypePair0, disjunctionExclusionStrategy0);
      // Undeclared exception!
      try { 
        objectNavigator0.accept((ObjectNavigator.Visitor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Type 'null' is not a Class, ParameterizedType, or GenericArrayType. Can't extract class.
         //
         verifyException("com.google.gson.TypeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Byte> class0 = Byte.TYPE;
      ObjectTypePair objectTypePair0 = new ObjectTypePair("com.google.gson.ObjectNavigator", class0, false);
      ObjectNavigator objectNavigator0 = null;
      try {
        objectNavigator0 = new ObjectNavigator(objectTypePair0, (ExclusionStrategy) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // condition failed: false
         //
         verifyException("com.google.gson.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AnonymousAndLocalClassExclusionStrategy anonymousAndLocalClassExclusionStrategy0 = new AnonymousAndLocalClassExclusionStrategy();
      Class<Long> class0 = Long.TYPE;
      ObjectTypePair objectTypePair0 = new ObjectTypePair(anonymousAndLocalClassExclusionStrategy0, class0, false);
      ObjectNavigator objectNavigator0 = new ObjectNavigator(objectTypePair0, anonymousAndLocalClassExclusionStrategy0);
      // Undeclared exception!
      try { 
        objectNavigator0.accept((ObjectNavigator.Visitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.ObjectNavigator", e);
      }
  }
}
