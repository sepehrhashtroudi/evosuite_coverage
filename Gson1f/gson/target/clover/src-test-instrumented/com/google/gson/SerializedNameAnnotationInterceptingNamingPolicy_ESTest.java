/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 05 10:07:54 GMT 2023
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.FieldAttributes;
import com.google.gson.FieldNamingStrategy;
import com.google.gson.FieldNamingStrategy2Adapter;
import com.google.gson.SerializedNameAnnotationInterceptingNamingPolicy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializedNameAnnotationInterceptingNamingPolicy_ESTest extends SerializedNameAnnotationInterceptingNamingPolicy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldNamingStrategy fieldNamingStrategy0 = mock(FieldNamingStrategy.class, new ViolatedAssumptionAnswer());
      FieldNamingStrategy2Adapter fieldNamingStrategy2Adapter0 = new FieldNamingStrategy2Adapter(fieldNamingStrategy0);
      SerializedNameAnnotationInterceptingNamingPolicy serializedNameAnnotationInterceptingNamingPolicy0 = new SerializedNameAnnotationInterceptingNamingPolicy(fieldNamingStrategy2Adapter0);
      // Undeclared exception!
      try { 
        serializedNameAnnotationInterceptingNamingPolicy0.translateName((FieldAttributes) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // condition failed: false
         //
         verifyException("com.google.gson.Preconditions", e);
      }
  }
}
