/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 03 21:51:06 GMT 2023
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonStreamParser;
import java.io.PipedReader;
import java.io.Reader;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonStreamParser_ESTest extends JsonStreamParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("7[z}`z");
      boolean boolean0 = jsonStreamParser0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("Ox");
      jsonStreamParser0.next();
      boolean boolean0 = jsonStreamParser0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("'[5%DJN|ra\"|5p");
      // Undeclared exception!
      try { 
        jsonStreamParser0.hasNext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Unterminated string near 
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = null;
      try {
        jsonStreamParser0 = new JsonStreamParser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = null;
      try {
        jsonStreamParser0 = new JsonStreamParser((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // in == null
         //
         verifyException("com.google.gson.stream.JsonReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(101);
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser(pipedReader0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("Ox");
      jsonStreamParser0.next();
      // Undeclared exception!
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("7[z}`z");
      // Undeclared exception!
      try { 
        jsonStreamParser0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("");
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.EOFException: End of input
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }
}
