/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 03 21:33:11 GMT 2023
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.DisjunctionExclusionStrategy;
import com.google.gson.ExclusionStrategy;
import com.google.gson.FieldAttributes;
import com.google.gson.InnerClassExclusionStrategy;
import com.google.gson.SyntheticFieldExclusionStrategy;
import java.lang.annotation.Annotation;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DisjunctionExclusionStrategy_ESTest extends DisjunctionExclusionStrategy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<ExclusionStrategy> linkedList0 = new LinkedList<ExclusionStrategy>();
      SyntheticFieldExclusionStrategy syntheticFieldExclusionStrategy0 = new SyntheticFieldExclusionStrategy(true);
      linkedList0.add((ExclusionStrategy) syntheticFieldExclusionStrategy0);
      DisjunctionExclusionStrategy disjunctionExclusionStrategy0 = new DisjunctionExclusionStrategy(linkedList0);
      // Undeclared exception!
      try { 
        disjunctionExclusionStrategy0.shouldSkipField((FieldAttributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.SyntheticFieldExclusionStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<ExclusionStrategy> linkedList0 = new LinkedList<ExclusionStrategy>();
      linkedList0.offerFirst((ExclusionStrategy) null);
      DisjunctionExclusionStrategy disjunctionExclusionStrategy0 = new DisjunctionExclusionStrategy(linkedList0);
      Class<InnerClassExclusionStrategy> class0 = InnerClassExclusionStrategy.class;
      // Undeclared exception!
      try { 
        disjunctionExclusionStrategy0.shouldSkipClass(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.DisjunctionExclusionStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<ExclusionStrategy> linkedList0 = new LinkedList<ExclusionStrategy>();
      SyntheticFieldExclusionStrategy syntheticFieldExclusionStrategy0 = new SyntheticFieldExclusionStrategy(false);
      linkedList0.add((ExclusionStrategy) syntheticFieldExclusionStrategy0);
      DisjunctionExclusionStrategy disjunctionExclusionStrategy0 = new DisjunctionExclusionStrategy(linkedList0);
      Class<Annotation> class0 = Annotation.class;
      boolean boolean0 = disjunctionExclusionStrategy0.shouldSkipClass(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<ExclusionStrategy> linkedList0 = new LinkedList<ExclusionStrategy>();
      SyntheticFieldExclusionStrategy syntheticFieldExclusionStrategy0 = new SyntheticFieldExclusionStrategy(false);
      linkedList0.add((ExclusionStrategy) syntheticFieldExclusionStrategy0);
      DisjunctionExclusionStrategy disjunctionExclusionStrategy0 = new DisjunctionExclusionStrategy(linkedList0);
      boolean boolean0 = disjunctionExclusionStrategy0.shouldSkipField((FieldAttributes) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DisjunctionExclusionStrategy disjunctionExclusionStrategy0 = null;
      try {
        disjunctionExclusionStrategy0 = new DisjunctionExclusionStrategy((Collection<ExclusionStrategy>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // condition failed: false
         //
         verifyException("com.google.gson.Preconditions", e);
      }
  }
}
