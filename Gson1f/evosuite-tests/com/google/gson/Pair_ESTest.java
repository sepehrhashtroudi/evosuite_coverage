/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 03 22:00:25 GMT 2023
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.gson.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pair_ESTest extends Pair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-2486));
      Pair<Integer, Object> pair0 = new Pair<Integer, Object>(integer0, integer1);
      String string0 = pair0.toString();
      assertEquals("{0,-2486}", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(1553);
      Pair<String, Integer> pair0 = new Pair<String, Integer>("Q", integer0);
      Pair<String, Object> pair1 = new Pair<String, Object>("Q", integer0);
      boolean boolean0 = pair1.equals(pair0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Pair<Object, Integer> pair0 = new Pair<Object, Integer>(integer0, integer0);
      Integer integer1 = new Integer(0);
      Pair<Integer, Object> pair1 = new Pair<Integer, Object>(integer1, pair0);
      boolean boolean0 = pair0.equals(pair1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Pair<Object, Object> pair0 = new Pair<Object, Object>("rTZ!:", "rTZ!:");
      Pair<String, String> pair1 = new Pair<String, String>((String) null, "rTZ!:");
      boolean boolean0 = pair1.equals(pair0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pair<Object, Object> pair0 = new Pair<Object, Object>("rTZ!:", "rTZ!:");
      Pair<Object, String> pair1 = new Pair<Object, String>(pair0, (String) null);
      boolean boolean0 = pair1.equals("{rTZ!:,rTZ!:}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer(1553);
      Pair<Integer, Pair<Integer, Object>> pair0 = new Pair<Integer, Pair<Integer, Object>>(integer0, (Pair<Integer, Object>) null);
      pair0.hashCode();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Pair<Object, Integer> pair0 = new Pair<Object, Integer>(integer0, integer0);
      pair0.hashCode();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Pair<String, String> pair0 = new Pair<String, String>((String) null, "rTZ!:");
      pair0.hashCode();
  }
}
