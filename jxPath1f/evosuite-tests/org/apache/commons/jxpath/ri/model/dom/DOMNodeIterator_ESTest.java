/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 02:09:52 GMT 2023
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMNodeIterator_ESTest extends DOMNodeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLt", ">0qG# A$xVu}j DJTLt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("<<unknown namespace>>");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, true, nodePointer1);
      dOMNodeIterator0.getNodePointer();
      dOMNodeIterator0.getNodePointer();
      assertEquals(1, dOMNodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLt", ">0qG# A$xVu}j DJTLt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("<<unknown namespace>>");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, true, nodePointer1);
      dOMNodeIterator0.getNodePointer();
      int int0 = dOMNodeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLt", ">0qG# A$xVu}j DJTLt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("<<unknown namespace>>");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, true, nodePointer1);
      dOMNodeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = dOMNodeIterator0.getPosition();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("xmlns:");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodeIterator dOMNodeIterator0 = null;
      try {
        dOMNodeIterator0 = new DOMNodeIterator(variablePointer0, nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: xmlns:
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1542);
      DOMNodeIterator dOMNodeIterator0 = null;
      try {
        dOMNodeIterator0 = new DOMNodeIterator((NodePointer) null, nodeTypeTest0, true, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("]`0t_i70L0gN!0t7", "]`0t_i70L0gN!0t7");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      DOMNodeIterator dOMNodeIterator0 = null;
      try {
        dOMNodeIterator0 = new DOMNodeIterator(variablePointer0, nodeTypeTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ']`0t_i70L0gN!0t7:]`0t_i70L0gN!0t7'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("AI!,V}&h");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) qName0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      DOMNodeIterator dOMNodeIterator0 = null;
      try {
        dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, false, nodePointer1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.QName cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("]");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("r,p,*zd,l$");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, iIOMetadataNode0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "]");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer0, nodeNameTest0, false, nodePointer1);
      dOMNodeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        dOMNodeIterator0.setPosition(66);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("F3K");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer0, nodeTypeTest0, true, (NodePointer) null);
      assertEquals(0, dOMNodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("G3!2S+");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer0, processingInstructionTest0, true, variablePointer0);
      // Undeclared exception!
      try { 
        dOMNodeIterator0.getNodePointer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLt", ">0qG# A$xVu}j DJTLt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("<<unknown namespace>>");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer0, processingInstructionTest0, true, variablePointer0);
      dOMNodeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        dOMNodeIterator0.setPosition(833);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) iIOMetadataNode0);
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("n%`/9Dhh4P&Q,qnc");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      List list0 = jXPathContext0.selectNodes("CGWw0Y7d");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLM", ">0qG# A$xVu}j DJTLM");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("<<unknown namespace>>");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLM");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, false, nodePointer1);
      dOMNodeIterator0.getNodePointer();
      // Undeclared exception!
      try { 
        dOMNodeIterator0.setPosition(101);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0sG# A$xVu}j D!(Lt", ">0sG# A$xVu}j D!(Lt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("<<unknown namespace>>");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0sG# A$xVu}j D!(Lt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, true, nodePointer1);
      dOMNodeIterator0.setPosition(551);
      boolean boolean0 = dOMNodeIterator0.setPosition(1);
      assertEquals(1, dOMNodeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLM", ">0qG# A$xVu}j DJTLM");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("<<unknown namespace>>");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLM");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, false, nodePointer1);
      dOMNodeIterator0.getNodePointer();
      assertEquals(1, dOMNodeIterator0.getPosition());
      
      boolean boolean0 = dOMNodeIterator0.setPosition(Integer.MIN_VALUE);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLt", ">0qG# A$xVu}j DJTLt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, false, nodePointer1);
      dOMNodeIterator0.setPosition(Integer.MIN_VALUE);
      dOMNodeIterator0.getNodePointer();
      assertEquals((-1), dOMNodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLt", ">0qG# A$xVu}j DJTLt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, false, nodePointer1);
      int int0 = dOMNodeIterator0.getPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(">0qG# A$xVu}j DJTLt", ">0qG# A$xVu}j DJTLt");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
      NodePointer nodePointer1 = nodePointer0.getValuePointer();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(">0qG# A$xVu}j DJTLt");
      DOMNodeIterator dOMNodeIterator0 = new DOMNodeIterator(nodePointer1, processingInstructionTest0, false, nodePointer1);
      dOMNodeIterator0.setPosition(Integer.MIN_VALUE);
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      boolean boolean0 = dOMNodeIterator0.setPosition(Integer.MIN_VALUE);
      assertEquals((-2), dOMNodeIterator0.getPosition());
      assertFalse(boolean0);
  }
}
