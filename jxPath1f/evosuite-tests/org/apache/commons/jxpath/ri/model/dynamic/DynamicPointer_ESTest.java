/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 02:11:08 GMT 2023
 */

package org.apache.commons.jxpath.ri.model.dynamic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.DynamicPropertyHandler;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.MapDynamicPropertyHandler;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.PropertyPointer;
import org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicPointer_ESTest extends DynamicPointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("TYM\u0002$yj", "TYM\u0002$yj");
      Object object0 = new Object();
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.PRC;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, object0, mapDynamicPropertyHandler0, locale0);
      PropertyPointer propertyPointer0 = dynamicPointer0.getPropertyPointer();
      DynamicPointer dynamicPointer1 = new DynamicPointer(propertyPointer0, (QName) null, dynamicPointer0, mapDynamicPropertyHandler0);
      QName qName1 = dynamicPointer1.getName();
      assertNull(qName1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, (Object) null, mapDynamicPropertyHandler0, locale0);
      Object object0 = dynamicPointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName(" could not create an object for path: ", " could not create an object for path: ");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.forLanguageTag(" could not create an object for path: ");
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, qName0, mapDynamicPropertyHandler0, locale0);
      NodeIterator nodeIterator0 = dynamicPointer0.createNodeIterator("@HWJss", false, (NodePointer) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("TYM\u0002$yj", "TYM\u0002$yj");
      Object object0 = new Object();
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.PRC;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, object0, mapDynamicPropertyHandler0, locale0);
      PropertyPointer propertyPointer0 = dynamicPointer0.getPropertyPointer();
      DynamicPointer dynamicPointer1 = new DynamicPointer(propertyPointer0, (QName) null, dynamicPointer0, mapDynamicPropertyHandler0);
      // Undeclared exception!
      try { 
        dynamicPointer1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.ROOT;
      DynamicPointer dynamicPointer0 = new DynamicPointer((QName) null, (Object) null, mapDynamicPropertyHandler0, locale0);
      DynamicPointer dynamicPointer1 = new DynamicPointer(dynamicPointer0, (QName) null, (Object) null, mapDynamicPropertyHandler0);
      // Undeclared exception!
      try { 
        dynamicPointer0.equals(dynamicPointer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.ENGLISH;
      DynamicPointer dynamicPointer0 = new DynamicPointer((QName) null, (Object) null, mapDynamicPropertyHandler0, locale0);
      // Undeclared exception!
      try { 
        dynamicPointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, (DynamicPropertyHandler) null, locale0);
      PropertyPointer propertyPointer0 = dynamicPointer0.getPropertyPointer();
      DynamicPointer dynamicPointer1 = new DynamicPointer(propertyPointer0, qName0, "", (DynamicPropertyHandler) null);
      // Undeclared exception!
      try { 
        dynamicPointer1.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.US;
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      Object object0 = new Object();
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName(".Ew?m82he^t6h");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      variablePointer0.setIndex(69);
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(variablePointer0, qName0, object0, mapDynamicPropertyHandler0);
      // Undeclared exception!
      try { 
        dynamicPointer0.asPath();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '.Ew?m82he^t6h'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      QName qName0 = new QName("", "q` ^;jNH0-.Y ");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, "q` ^;jNH0-.Y ", mapDynamicPropertyHandler0, locale0);
      PropertyPointer propertyPointer0 = dynamicPointer0.getPropertyPointer();
      DynamicPointer dynamicPointer1 = new DynamicPointer(propertyPointer0, qName0, "q` ^;jNH0-.Y ", mapDynamicPropertyHandler0);
      // Undeclared exception!
      try { 
        dynamicPointer1.asPath();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Map
         //
         verifyException("org.apache.commons.jxpath.MapDynamicPropertyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.JAPAN;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, "", mapDynamicPropertyHandler0, locale0);
      Object object0 = dynamicPointer0.getBaseValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      PropertyPointer propertyPointer0 = dynamicPointer0.getPropertyPointer();
      // Undeclared exception!
      try { 
        dynamicPointer0.createNodeIterator("<<unknown namespace>>", true, propertyPointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.util.Map
         //
         verifyException("org.apache.commons.jxpath.MapDynamicPropertyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("", "");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = new Locale("", "");
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      DynamicPointer dynamicPointer1 = new DynamicPointer(dynamicPointer0, qName0, locale0, mapDynamicPropertyHandler0);
      boolean boolean0 = dynamicPointer0.equals(dynamicPointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = new Locale("", "");
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      DynamicPointer dynamicPointer1 = new DynamicPointer(dynamicPointer0, (QName) null, locale0, mapDynamicPropertyHandler0);
      boolean boolean0 = dynamicPointer0.equals(dynamicPointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, (DynamicPropertyHandler) null, locale0);
      boolean boolean0 = dynamicPointer0.equals("italiano");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      DynamicPointer dynamicPointer1 = new DynamicPointer(dynamicPointer0, qName0, qName0, mapDynamicPropertyHandler0);
      dynamicPointer0.compareTo(dynamicPointer1);
      assertFalse(dynamicPointer1.equals((Object)dynamicPointer0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.UK;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, "", mapDynamicPropertyHandler0, locale0);
      DynamicPointer dynamicPointer1 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      boolean boolean0 = dynamicPointer0.equals(dynamicPointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      DynamicPointer dynamicPointer1 = new DynamicPointer(dynamicPointer0, qName0, qName0, mapDynamicPropertyHandler0);
      String string0 = dynamicPointer1.asPath();
      assertEquals("/org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest:org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      String string0 = dynamicPointer0.asPath();
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      boolean boolean0 = dynamicPointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.ENGLISH;
      DynamicPointer dynamicPointer0 = new DynamicPointer((QName) null, (Object) null, mapDynamicPropertyHandler0, locale0);
      boolean boolean0 = dynamicPointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName qName0 = new QName("TYM\u0002$yj", "TYM\u0002$yj");
      Object object0 = new Object();
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.PRC;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, object0, mapDynamicPropertyHandler0, locale0);
      dynamicPointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.ENGLISH;
      DynamicPointer dynamicPointer0 = new DynamicPointer((QName) null, (Object) null, mapDynamicPropertyHandler0, locale0);
      int int0 = dynamicPointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, mapDynamicPropertyHandler0, locale0);
      NodeIterator nodeIterator0 = dynamicPointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(variablePointer0, qName0, "", mapDynamicPropertyHandler0);
      boolean boolean0 = dynamicPointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QName qName0 = new QName("TYM\u0002$yj", "TYM\u0002$yj");
      Object object0 = new Object();
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.PRC;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, object0, mapDynamicPropertyHandler0, locale0);
      boolean boolean0 = dynamicPointer0.isDynamicPropertyDeclarationSupported();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QName qName0 = new QName("TYM\u0002$yj", "TYM\u0002$yj");
      Object object0 = new Object();
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.PRC;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, object0, mapDynamicPropertyHandler0, locale0);
      QName qName1 = dynamicPointer0.getName();
      assertEquals("TYM\u0002$yj", qName1.getPrefix());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, locale0, (DynamicPropertyHandler) null, locale0);
      boolean boolean0 = dynamicPointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QName qName0 = new QName(")");
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      Locale locale0 = Locale.CANADA_FRENCH;
      DynamicPointer dynamicPointer0 = new DynamicPointer(qName0, (Object) null, mapDynamicPropertyHandler0, locale0);
      PropertyPointer propertyPointer0 = dynamicPointer0.getPropertyPointer();
      Object object0 = new Object();
      DynamicPointer dynamicPointer1 = new DynamicPointer(propertyPointer0, qName0, object0, mapDynamicPropertyHandler0);
      // Undeclared exception!
      try { 
        dynamicPointer0.createNodeIterator("", false, dynamicPointer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.MapDynamicPropertyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      MapDynamicPropertyHandler mapDynamicPropertyHandler0 = new MapDynamicPropertyHandler();
      DynamicPointer dynamicPointer0 = new DynamicPointer(variablePointer0, qName0, "", mapDynamicPropertyHandler0);
      // Undeclared exception!
      try { 
        dynamicPointer0.createNodeIterator("$/", true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }
}
