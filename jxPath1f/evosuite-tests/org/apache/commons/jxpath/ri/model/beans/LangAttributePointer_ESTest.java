/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 02:26:35 GMT 2023
 */

package org.apache.commons.jxpath.ri.model.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.LangAttributePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LangAttributePointer_ESTest extends LangAttributePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      LangAttributePointer langAttributePointer1 = new LangAttributePointer(langAttributePointer0);
      String string0 = langAttributePointer1.toString();
      assertEquals("'l0n`'/@xml:lang/@xml:lang", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      Object object0 = langAttributePointer0.getImmediateNode();
      assertEquals("zh-CN", object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(")BU'YR*");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(variablePointer0);
      // Undeclared exception!
      try { 
        langAttributePointer0.getBaseValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.LangAttributePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(")BU'YR*");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(variablePointer0);
      String string0 = langAttributePointer0.asPath();
      assertEquals("$)BU'YR*/@xml:lang", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("p0uz");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, "p0uz");
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      LangAttributePointer langAttributePointer1 = new LangAttributePointer(variablePointer0);
      boolean boolean0 = langAttributePointer0.equals(langAttributePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      LangAttributePointer langAttributePointer1 = new LangAttributePointer(langAttributePointer0);
      int int0 = langAttributePointer0.compareTo(langAttributePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      boolean boolean0 = langAttributePointer0.equals(locale0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("z>++oN/{#@/Su.)9]", "z>++oN/{#@/Su.)9]");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      String string0 = langAttributePointer0.asPath();
      assertEquals("/@xml:lang", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LangAttributePointer langAttributePointer0 = new LangAttributePointer((NodePointer) null);
      String string0 = langAttributePointer0.asPath();
      assertEquals("@xml:lang", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("z>++oN/{#@/Su.)9]", "z>++oN/{#@/Su.)9]");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      // Undeclared exception!
      try { 
        langAttributePointer0.getImmediateNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.LangAttributePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      int int0 = langAttributePointer0.compareChildNodePointers(langAttributePointer0, nodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LangAttributePointer langAttributePointer0 = new LangAttributePointer((NodePointer) null);
      boolean boolean0 = langAttributePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(variablePointer0);
      int int0 = langAttributePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      // Undeclared exception!
      try { 
        langAttributePointer0.setValue("l0n`");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot change locale using the 'lang' attribute
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.LangAttributePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      QName qName1 = langAttributePointer0.getName();
      assertEquals("xml", qName1.getPrefix());
      assertEquals("lang", qName1.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LangAttributePointer langAttributePointer0 = new LangAttributePointer((NodePointer) null);
      String string0 = langAttributePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      Object object0 = langAttributePointer0.getBaseValue();
      assertEquals("ko-KR", object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(variablePointer0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      boolean boolean0 = langAttributePointer0.testNode(processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(variablePointer0);
      boolean boolean0 = langAttributePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = new QName("l0n`", "l0n`");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "l0n`", locale0);
      LangAttributePointer langAttributePointer0 = new LangAttributePointer(nodePointer0);
      langAttributePointer0.hashCode();
  }
}
