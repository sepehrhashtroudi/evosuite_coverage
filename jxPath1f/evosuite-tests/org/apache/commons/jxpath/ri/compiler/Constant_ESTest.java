/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 01:33:09 GMT 2023
 */

package org.apache.commons.jxpath.ri.compiler;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Constant_ESTest extends Constant_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Float float0 = new Float(1728.7858863);
      Constant constant0 = new Constant(float0);
      String string0 = constant0.toString();
      assertEquals("1728.785888671875", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Constant constant0 = new Constant((Number) null);
      Object object0 = constant0.computeValue((EvalContext) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Constant constant0 = new Constant("Rq`Z<");
      Object object0 = constant0.compute((EvalContext) null);
      assertEquals("Rq`Z<", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Constant constant0 = new Constant((Number) null);
      Object object0 = constant0.compute((EvalContext) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Double double0 = Expression.ONE;
      Constant constant0 = new Constant(double0);
      String string0 = constant0.toString();
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Float float0 = new Float((-80.672874F));
      Constant constant0 = new Constant(float0);
      String string0 = constant0.toString();
      assertEquals("-80.6728744506836", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Float float0 = new Float((-80.672874F));
      Constant constant0 = new Constant(float0);
      boolean boolean0 = constant0.computeContextDependent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Constant constant0 = new Constant("64W<Yx42D5)E|gC");
      String string0 = constant0.toString();
      assertEquals("'64W<Yx42D5)E|gC'", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Float float0 = new Float((-80.672874F));
      Constant constant0 = new Constant(float0);
      Object object0 = constant0.computeValue((EvalContext) null);
      assertEquals((-80.672874F), object0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Double double0 = Expression.ONE;
      Constant constant0 = new Constant(double0);
      boolean boolean0 = constant0.isContextDependent();
      assertFalse(boolean0);
  }
}
