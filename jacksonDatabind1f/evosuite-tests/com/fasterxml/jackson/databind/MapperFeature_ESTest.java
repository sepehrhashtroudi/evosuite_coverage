/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:39:58 GMT 2023
 */

package com.fasterxml.jackson.databind;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.MapperFeature;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MapperFeature_ESTest extends MapperFeature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MapperFeature[] mapperFeatureArray0 = MapperFeature.values();
      assertEquals(15, mapperFeatureArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MapperFeature mapperFeature0 = MapperFeature.valueOf("AUTO_DETECT_SETTERS");
      assertTrue(mapperFeature0.enabledByDefault());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MapperFeature mapperFeature0 = MapperFeature.valueOf("USE_WRAPPER_NAME_AS_PROPERTY_NAME");
      assertFalse(mapperFeature0.enabledByDefault());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MapperFeature mapperFeature0 = MapperFeature.REQUIRE_SETTERS_FOR_GETTERS;
      boolean boolean0 = mapperFeature0.enabledByDefault();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MapperFeature mapperFeature0 = MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;
      int int0 = mapperFeature0.getMask();
      assertEquals(256, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MapperFeature mapperFeature0 = MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;
      boolean boolean0 = mapperFeature0.enabledByDefault();
      assertTrue(boolean0);
  }
}
