/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:50:01 GMT 2023
 */

package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.util.ArrayBuilders;
import com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrimitiveArrayBuilder_ESTest extends PrimitiveArrayBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayBuilders.ShortBuilder arrayBuilders_ShortBuilder0 = new ArrayBuilders.ShortBuilder();
      short[] shortArray0 = new short[6];
      arrayBuilders_ShortBuilder0.appendCompletedChunk(shortArray0, 1);
      arrayBuilders_ShortBuilder0.appendCompletedChunk(shortArray0, (short)0);
      short[] shortArray1 = arrayBuilders_ShortBuilder0.completeAndClearBuffer(shortArray0, 0);
      assertEquals(1, shortArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayBuilders.LongBuilder arrayBuilders_LongBuilder0 = new ArrayBuilders.LongBuilder();
      long[] longArray0 = new long[4];
      long[] longArray1 = arrayBuilders_LongBuilder0.appendCompletedChunk(longArray0, 686);
      assertEquals(1372, longArray1.length);
      
      PrimitiveArrayBuilder.Node<long[]> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<long[]>(longArray0, 0);
      arrayBuilders_LongBuilder0._bufferHead = primitiveArrayBuilder_Node0;
      long[] longArray2 = arrayBuilders_LongBuilder0.resetAndStart();
      assertEquals(4, longArray2.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayBuilders.LongBuilder arrayBuilders_LongBuilder0 = new ArrayBuilders.LongBuilder();
      long[] longArray0 = new long[4];
      PrimitiveArrayBuilder.Node<long[]> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<long[]>(longArray0, 0);
      arrayBuilders_LongBuilder0._bufferHead = primitiveArrayBuilder_Node0;
      long[] longArray1 = arrayBuilders_LongBuilder0.resetAndStart();
      assertNotNull(longArray1);
      assertEquals(12, longArray1.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayBuilders.ShortBuilder arrayBuilders_ShortBuilder0 = new ArrayBuilders.ShortBuilder();
      short[] shortArray0 = new short[6];
      arrayBuilders_ShortBuilder0._bufferedEntryCount = 1350;
      arrayBuilders_ShortBuilder0.appendCompletedChunk(shortArray0, (short)2);
      // Undeclared exception!
      try { 
        arrayBuilders_ShortBuilder0.completeAndClearBuffer(shortArray0, 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should have gotten 1352 entries, got 2
         //
         verifyException("com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayBuilders.DoubleBuilder arrayBuilders_DoubleBuilder0 = new ArrayBuilders.DoubleBuilder();
      double[] doubleArray0 = new double[6];
      arrayBuilders_DoubleBuilder0.appendCompletedChunk(doubleArray0, 696);
      // Undeclared exception!
      try { 
        arrayBuilders_DoubleBuilder0.completeAndClearBuffer(doubleArray0, 754);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayBuilders.BooleanBuilder arrayBuilders_BooleanBuilder0 = new ArrayBuilders.BooleanBuilder();
      arrayBuilders_BooleanBuilder0._bufferedEntryCount = (-2095);
      boolean[] booleanArray0 = new boolean[5];
      boolean[] booleanArray1 = arrayBuilders_BooleanBuilder0.appendCompletedChunk(booleanArray0, 262144);
      assertEquals(327680, booleanArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayBuilders.ByteBuilder arrayBuilders_ByteBuilder0 = new ArrayBuilders.ByteBuilder();
      arrayBuilders_ByteBuilder0._reset();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayBuilders.ShortBuilder arrayBuilders_ShortBuilder0 = new ArrayBuilders.ShortBuilder();
      short[] shortArray0 = new short[6];
      PrimitiveArrayBuilder.Node<short[]> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<short[]>(shortArray0, 0);
      arrayBuilders_ShortBuilder0._bufferHead = primitiveArrayBuilder_Node0;
      primitiveArrayBuilder_Node0._next = arrayBuilders_ShortBuilder0._bufferHead;
      // Undeclared exception!
      arrayBuilders_ShortBuilder0.completeAndClearBuffer(shortArray0, 1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayBuilders.ByteBuilder arrayBuilders_ByteBuilder0 = new ArrayBuilders.ByteBuilder();
      // Undeclared exception!
      try { 
        arrayBuilders_ByteBuilder0.completeAndClearBuffer((byte[]) null, 485);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayBuilders.ShortBuilder arrayBuilders_ShortBuilder0 = new ArrayBuilders.ShortBuilder();
      short[] shortArray0 = new short[3];
      PrimitiveArrayBuilder.Node<short[]> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<short[]>(shortArray0, (short) (-1));
      arrayBuilders_ShortBuilder0._bufferHead = primitiveArrayBuilder_Node0;
      // Undeclared exception!
      try { 
        arrayBuilders_ShortBuilder0.appendCompletedChunk(shortArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayBuilders.ByteBuilder arrayBuilders_ByteBuilder0 = new ArrayBuilders.ByteBuilder();
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        arrayBuilders_ByteBuilder0.appendCompletedChunk(byteArray0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrimitiveArrayBuilder.Node<String> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<String>("Should have gotten ", 1414);
      PrimitiveArrayBuilder.Node<String> primitiveArrayBuilder_Node1 = new PrimitiveArrayBuilder.Node<String>("Should have gotten ", (-793));
      primitiveArrayBuilder_Node0._next = primitiveArrayBuilder_Node1;
      // Undeclared exception!
      try { 
        primitiveArrayBuilder_Node0.linkNext(primitiveArrayBuilder_Node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(12);
      PrimitiveArrayBuilder.Node<Integer> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<Integer>(integer0, 12);
      // Undeclared exception!
      try { 
        primitiveArrayBuilder_Node0.copyData(integer0, (-4649));
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-3807));
      PrimitiveArrayBuilder.Node<Integer> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<Integer>(integer0, 905);
      Integer integer1 = primitiveArrayBuilder_Node0.getData();
      assertEquals((-3807), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[7];
      PrimitiveArrayBuilder.Node<float[]> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<float[]>(floatArray0, 0);
      PrimitiveArrayBuilder.Node<float[]> primitiveArrayBuilder_Node1 = primitiveArrayBuilder_Node0.next();
      assertNull(primitiveArrayBuilder_Node1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayBuilders.IntBuilder arrayBuilders_IntBuilder0 = new ArrayBuilders.IntBuilder();
      int[] intArray0 = new int[6];
      PrimitiveArrayBuilder.Node<int[]> primitiveArrayBuilder_Node0 = new PrimitiveArrayBuilder.Node<int[]>(intArray0, (-5));
      arrayBuilders_IntBuilder0._bufferHead = primitiveArrayBuilder_Node0;
      primitiveArrayBuilder_Node0.linkNext(arrayBuilders_IntBuilder0._bufferHead);
      arrayBuilders_IntBuilder0._bufferTail = primitiveArrayBuilder_Node0;
      // Undeclared exception!
      try { 
        arrayBuilders_IntBuilder0.appendCompletedChunk(intArray0, (-4021));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayBuilders.FloatBuilder arrayBuilders_FloatBuilder0 = new ArrayBuilders.FloatBuilder();
      arrayBuilders_FloatBuilder0._bufferedEntryCount = 3991;
      float[] floatArray0 = new float[8];
      // Undeclared exception!
      try { 
        arrayBuilders_FloatBuilder0.completeAndClearBuffer(floatArray0, 1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should have gotten 3992 entries, got 1
         //
         verifyException("com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayBuilders.FloatBuilder arrayBuilders_FloatBuilder0 = new ArrayBuilders.FloatBuilder();
      float[] floatArray0 = new float[5];
      float[] floatArray1 = arrayBuilders_FloatBuilder0.appendCompletedChunk(floatArray0, 16384);
      assertEquals(20480, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayBuilders.BooleanBuilder arrayBuilders_BooleanBuilder0 = new ArrayBuilders.BooleanBuilder();
      boolean[] booleanArray0 = new boolean[2];
      // Undeclared exception!
      try { 
        arrayBuilders_BooleanBuilder0.completeAndClearBuffer(booleanArray0, (-5119));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder", e);
      }
  }
}
