/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:44:24 GMT 2023
 */

package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.util.NameTransformer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NameTransformer_ESTest extends NameTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("[ChainedTransformer([PrefixTransformer('K$nI')], [PrefixTransformer('K$nI')])]", "[PrefixTransformer('");
      assertNotNull(nameTransformer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("", "");
      NameTransformer nameTransformer1 = NameTransformer.chainedTransformer(nameTransformer0, nameTransformer0);
      String string0 = nameTransformer1.transform((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.NOP;
      NameTransformer nameTransformer1 = NameTransformer.chainedTransformer(nameTransformer0, nameTransformer0);
      String string0 = nameTransformer1.transform("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.chainedTransformer((NameTransformer) null, (NameTransformer) null);
      // Undeclared exception!
      try { 
        nameTransformer0.transform("N@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.NameTransformer$Chained", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.NOP;
      NameTransformer nameTransformer1 = NameTransformer.chainedTransformer(nameTransformer0, nameTransformer0);
      NameTransformer nameTransformer2 = NameTransformer.simpleTransformer("(mo_{Gg^0t|,Za,", "(mo_{Gg^0t|,Za,");
      NameTransformer nameTransformer3 = NameTransformer.chainedTransformer(nameTransformer2, nameTransformer1);
      // Undeclared exception!
      try { 
        nameTransformer3.reverse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("4", "4");
      NameTransformer nameTransformer1 = NameTransformer.simpleTransformer("", "4");
      NameTransformer nameTransformer2 = NameTransformer.chainedTransformer(nameTransformer1, nameTransformer0);
      String string0 = nameTransformer2.reverse("4[ChainedTransformer([SuffixTransformer('4')], [PreAndSuffixTransformer('4','4')])]4");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("", "4");
      String string0 = nameTransformer0.reverse("|qo6ko4oj7EWs1fUC5");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("", (String) null);
      assertNotNull(nameTransformer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("=", "");
      String string0 = nameTransformer0.reverse("=");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("=", "");
      String string0 = nameTransformer0.reverse(">w@uY3x,_fCC@oX");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("4", "4");
      String string0 = nameTransformer0.reverse("4[ChainedTransformer([SuffixTransformer('4')], [PreAndSuffixTransformer('4','4')])]4");
      assertEquals("[ChainedTransformer([SuffixTransformer('4')], [PreAndSuffixTransformer('4','4')])]", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("h", "h");
      NameTransformer.Chained nameTransformer_Chained0 = new NameTransformer.Chained(nameTransformer0, nameTransformer0);
      String string0 = nameTransformer_Chained0.reverse("h");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("dT*V*>Kv(", "dT*V*>Kv(");
      NameTransformer.Chained nameTransformer_Chained0 = new NameTransformer.Chained(nameTransformer0, nameTransformer0);
      String string0 = nameTransformer_Chained0.reverse("com.fasterxml.jackson.databind.util.NameTransformer$Chained");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("9v9", (String) null);
      NameTransformer.Chained nameTransformer_Chained0 = new NameTransformer.Chained(nameTransformer0, nameTransformer0);
      String string0 = nameTransformer_Chained0.toString();
      assertEquals("[ChainedTransformer([PrefixTransformer('9v9')], [PrefixTransformer('9v9')])]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("=", "");
      String string0 = nameTransformer0.transform(">w@uY3x,_fCC@oX");
      assertEquals("=>w@uY3x,_fCC@oX", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("h", "h");
      NameTransformer nameTransformer1 = NameTransformer.simpleTransformer((String) null, "go3V4c@H:gdEnw+P5");
      NameTransformer.Chained nameTransformer_Chained0 = new NameTransformer.Chained(nameTransformer0, nameTransformer1);
      String string0 = nameTransformer_Chained0.transform("h");
      assertEquals("hhgo3V4c@H:gdEnw+P5h", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("4", "4");
      NameTransformer nameTransformer1 = NameTransformer.simpleTransformer("", "4");
      NameTransformer nameTransformer2 = NameTransformer.chainedTransformer(nameTransformer1, nameTransformer0);
      String string0 = ((NameTransformer.Chained) nameTransformer2).toString();
      assertEquals("[ChainedTransformer([SuffixTransformer('4')], [PreAndSuffixTransformer('4','4')])]", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("dT*V*>Kv(", "dT*V*>Kv(");
      NameTransformer.Chained nameTransformer_Chained0 = new NameTransformer.Chained(nameTransformer0, nameTransformer0);
      String string0 = nameTransformer_Chained0.NOP.reverse("com.fasterxml.jackson.databind.util.NameTransformer$Chained");
      assertEquals("com.fasterxml.jackson.databind.util.NameTransformer$Chained", string0);
  }
}
