/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:48:09 GMT 2023
 */

package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.util.LinkedNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinkedNode_ESTest extends LinkedNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedNode<Object> linkedNode0 = new LinkedNode<Object>((Object) null, (LinkedNode<Object>) null);
      Object object0 = linkedNode0.value();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedNode<String> linkedNode0 = new LinkedNode<String>("", (LinkedNode<String>) null);
      LinkedNode<String> linkedNode1 = new LinkedNode<String>("", linkedNode0);
      LinkedNode<String> linkedNode2 = linkedNode1.next();
      assertNotSame(linkedNode2, linkedNode1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedNode<String> linkedNode0 = new LinkedNode<String>("", (LinkedNode<String>) null);
      String string0 = linkedNode0.value();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LinkedNode<Integer> linkedNode0 = new LinkedNode<Integer>(integer0, (LinkedNode<Integer>) null);
      LinkedNode<Integer> linkedNode1 = linkedNode0.next();
      assertNull(linkedNode1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LinkedNode<Integer> linkedNode0 = new LinkedNode<Integer>(integer0, (LinkedNode<Integer>) null);
      boolean boolean0 = LinkedNode.contains(linkedNode0, integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LinkedNode<Integer> linkedNode0 = new LinkedNode<Integer>(integer0, (LinkedNode<Integer>) null);
      boolean boolean0 = LinkedNode.contains(linkedNode0, (Integer) null);
      assertFalse(boolean0);
  }
}
