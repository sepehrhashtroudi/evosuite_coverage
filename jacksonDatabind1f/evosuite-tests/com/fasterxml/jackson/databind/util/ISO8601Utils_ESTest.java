/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:47:58 GMT 2023
 */

package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.util.ISO8601Utils;
import java.util.Date;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ISO8601Utils_ESTest extends ISO8601Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2147483645, 2147483645, (-1045));
      String string0 = ISO8601Utils.format((Date) mockDate0, true);
      assertEquals("214898647-10-27T19:17:34.848Z", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        ISO8601Utils.parse(".sss");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Failed to parse date .sss
         //
         verifyException("com.fasterxml.jackson.databind.util.ISO8601Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), 0, (-1), (-1));
      String string0 = ISO8601Utils.format((Date) mockDate0);
      assertEquals("1898-11-28T23:58:59Z", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ISO8601Utils.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.util.ISO8601Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-555), (-555), (-555), 0, 0, (-1));
      // Undeclared exception!
      try { 
        ISO8601Utils.format((Date) mockDate0, true, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ISO8601Utils.format((Date) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ISO8601Utils.format((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = ISO8601Utils.parse("1970-01-01T00:00:00.012+00:00");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimeZone timeZone0 = ISO8601Utils.timeZoneGMT();
      MockDate mockDate0 = new MockDate(0, 0, 284, 0, (-866));
      String string0 = ISO8601Utils.format((Date) mockDate0, false, timeZone0);
      assertEquals("1900-10-10T09:34:00Z", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimeZone timeZone0 = ISO8601Utils.timeZoneGMT();
      MockDate mockDate0 = new MockDate(962, 962, 1461);
      String string0 = ISO8601Utils.format((Date) mockDate0, true, timeZone0);
      assertEquals("2946-02-28T00:00:00.000Z", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ISO8601Utils.parse("1HJ'vTV+@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Failed to parse date 1HJ'vTV+@
         //
         verifyException("com.fasterxml.jackson.databind.util.ISO8601Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ISO8601Utils.parse("d");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Failed to parse date d
         //
         verifyException("com.fasterxml.jackson.databind.util.ISO8601Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ISO8601Utils.parse("209019176-10-01T19:17:34+00:00");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Failed to parse date 209019176-10-01T19:17:34+00:00
         //
         verifyException("com.fasterxml.jackson.databind.util.ISO8601Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = ISO8601Utils.parse("2014-02-14T20:21:21+00:00");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ISO8601Utils iSO8601Utils0 = new ISO8601Utils();
  }
}
