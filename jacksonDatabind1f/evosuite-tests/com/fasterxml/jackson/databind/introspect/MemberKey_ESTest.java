/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 06:04:29 GMT 2023
 */

package com.fasterxml.jackson.databind.introspect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.introspect.MemberKey;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemberKey_ESTest extends MemberKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 5);
      MemberKey memberKey0 = new MemberKey("", classArray0);
      Class<Object>[] classArray1 = (Class<Object>[]) Array.newInstance(Class.class, 6);
      MemberKey memberKey1 = new MemberKey("", classArray1);
      boolean boolean0 = memberKey0.equals(memberKey1);
      assertFalse(memberKey1.equals((Object)memberKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 2);
      MemberKey memberKey0 = new MemberKey((String) null, classArray0);
      // Undeclared exception!
      try { 
        memberKey0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.MemberKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      Class<String> class0 = String.class;
      classArray0[0] = class0;
      MemberKey memberKey0 = new MemberKey(":", classArray0);
      Class<Integer>[] classArray1 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      Class<Integer> class1 = Integer.class;
      classArray1[0] = class1;
      MemberKey memberKey1 = new MemberKey(":", classArray1);
      boolean boolean0 = memberKey0.equals(memberKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      Class<String> class0 = String.class;
      classArray0[0] = class0;
      MemberKey memberKey0 = new MemberKey(":", classArray0);
      Class<Integer>[] classArray1 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      MemberKey memberKey1 = new MemberKey(":", classArray1);
      // Undeclared exception!
      try { 
        memberKey0.equals(memberKey1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.MemberKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 7);
      MemberKey memberKey0 = new MemberKey("", classArray0);
      Class<Object>[] classArray1 = (Class<Object>[]) Array.newInstance(Class.class, 6);
      MemberKey memberKey1 = new MemberKey("", classArray1);
      boolean boolean0 = memberKey0.equals(memberKey1);
      assertFalse(memberKey1.equals((Object)memberKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 15);
      MemberKey memberKey0 = new MemberKey("g", classArray0);
      MemberKey memberKey1 = new MemberKey("R", classArray0);
      boolean boolean0 = memberKey0.equals(memberKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      MemberKey memberKey0 = new MemberKey(":", classArray0);
      Class<Integer>[] classArray1 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      MemberKey memberKey1 = new MemberKey(":", classArray1);
      boolean boolean0 = memberKey0.equals(memberKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 4);
      MemberKey memberKey0 = new MemberKey("(", classArray0);
      boolean boolean0 = memberKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 6);
      MemberKey memberKey0 = new MemberKey("9Rq0", classArray0);
      boolean boolean0 = memberKey0.equals(memberKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 4);
      Class<String> class0 = String.class;
      MemberKey memberKey0 = new MemberKey("(", classArray0);
      boolean boolean0 = memberKey0.equals(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MemberKey memberKey0 = new MemberKey("Jr\u0000.]B", (Class<?>[]) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 4);
      MemberKey memberKey0 = new MemberKey("(", classArray0);
      memberKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 4);
      MemberKey memberKey0 = new MemberKey("(", classArray0);
      String string0 = memberKey0.toString();
      assertEquals("((4-args)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MemberKey memberKey0 = null;
      try {
        memberKey0 = new MemberKey((Constructor<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.MemberKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MemberKey memberKey0 = null;
      try {
        memberKey0 = new MemberKey((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.MemberKey", e);
      }
  }
}
