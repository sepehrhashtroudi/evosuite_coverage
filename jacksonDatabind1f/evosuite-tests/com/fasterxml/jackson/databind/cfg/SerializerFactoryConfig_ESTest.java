/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:36:13 GMT 2023
 */

package com.fasterxml.jackson.databind.cfg;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
import com.fasterxml.jackson.databind.ser.BeanSerializerModifier;
import com.fasterxml.jackson.databind.ser.Serializers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializerFactoryConfig_ESTest extends SerializerFactoryConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      Serializers.Base serializers_Base0 = new Serializers.Base();
      SerializerFactoryConfig serializerFactoryConfig1 = serializerFactoryConfig0.withAdditionalKeySerializers(serializers_Base0);
      serializerFactoryConfig1.keySerializers();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Serializers[] serializersArray0 = new Serializers[0];
      BeanSerializerModifier[] beanSerializerModifierArray0 = new BeanSerializerModifier[0];
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig(serializersArray0, serializersArray0, beanSerializerModifierArray0);
      Iterable<Serializers> iterable0 = serializerFactoryConfig0.keySerializers();
      assertNotNull(iterable0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      Serializers.Base serializers_Base0 = new Serializers.Base();
      SerializerFactoryConfig serializerFactoryConfig1 = serializerFactoryConfig0.withAdditionalSerializers(serializers_Base0);
      serializerFactoryConfig1.serializers();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      Serializers.Base serializers_Base0 = new Serializers.Base();
      SerializerFactoryConfig serializerFactoryConfig1 = serializerFactoryConfig0.withAdditionalSerializers(serializers_Base0);
      serializerFactoryConfig1.withAdditionalKeySerializers(serializers_Base0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      Serializers.Base serializers_Base0 = new Serializers.Base();
      SerializerFactoryConfig serializerFactoryConfig1 = serializerFactoryConfig0.withAdditionalKeySerializers(serializers_Base0);
      serializerFactoryConfig1.withAdditionalSerializers(serializers_Base0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Serializers.Base serializers_Base0 = new Serializers.Base();
      BeanSerializerModifier[] beanSerializerModifierArray0 = new BeanSerializerModifier[7];
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig((Serializers[]) null, (Serializers[]) null, beanSerializerModifierArray0);
      serializerFactoryConfig0.withAdditionalSerializers(serializers_Base0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Serializers[] serializersArray0 = new Serializers[4];
      Serializers.Base serializers_Base0 = new Serializers.Base();
      serializersArray0[0] = (Serializers) serializers_Base0;
      BeanSerializerModifier[] beanSerializerModifierArray0 = new BeanSerializerModifier[0];
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig(serializersArray0, serializersArray0, beanSerializerModifierArray0);
      serializerFactoryConfig0.withAdditionalSerializers(serializersArray0[0]);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Serializers[] serializersArray0 = new Serializers[4];
      Serializers.Base serializers_Base0 = new Serializers.Base();
      serializersArray0[3] = (Serializers) serializers_Base0;
      BeanSerializerModifier[] beanSerializerModifierArray0 = new BeanSerializerModifier[0];
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig(serializersArray0, serializersArray0, beanSerializerModifierArray0);
      serializerFactoryConfig0.withAdditionalKeySerializers(serializersArray0[3]);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Serializers.Base serializers_Base0 = new Serializers.Base();
      BeanSerializerModifier[] beanSerializerModifierArray0 = new BeanSerializerModifier[7];
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig((Serializers[]) null, (Serializers[]) null, beanSerializerModifierArray0);
      SerializerFactoryConfig serializerFactoryConfig1 = serializerFactoryConfig0.withAdditionalKeySerializers(serializers_Base0);
      serializerFactoryConfig1.serializers();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeanSerializerModifier[] beanSerializerModifierArray0 = new BeanSerializerModifier[5];
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig((Serializers[]) null, (Serializers[]) null, beanSerializerModifierArray0);
      boolean boolean0 = serializerFactoryConfig0.hasSerializerModifiers();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      boolean boolean0 = serializerFactoryConfig0.hasSerializerModifiers();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      boolean boolean0 = serializerFactoryConfig0.hasKeySerializers();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      boolean boolean0 = serializerFactoryConfig0.hasSerializers();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig((Serializers[]) null, (Serializers[]) null, (BeanSerializerModifier[]) null);
      // Undeclared exception!
      try { 
        serializerFactoryConfig0.withSerializerModifier((BeanSerializerModifier) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null modifier
         //
         verifyException("com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      // Undeclared exception!
      try { 
        serializerFactoryConfig0.withAdditionalKeySerializers((Serializers) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null Serializers
         //
         verifyException("com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      Serializers.Base serializers_Base0 = new Serializers.Base();
      SerializerFactoryConfig serializerFactoryConfig1 = serializerFactoryConfig0.withAdditionalKeySerializers(serializers_Base0);
      serializerFactoryConfig1.hasKeySerializers();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      // Undeclared exception!
      try { 
        serializerFactoryConfig0.withAdditionalSerializers((Serializers) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null Serializers
         //
         verifyException("com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();
      Serializers.Base serializers_Base0 = new Serializers.Base();
      SerializerFactoryConfig serializerFactoryConfig1 = serializerFactoryConfig0.withAdditionalSerializers(serializers_Base0);
      serializerFactoryConfig1.hasSerializers();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BeanSerializerModifier[] beanSerializerModifierArray0 = new BeanSerializerModifier[5];
      SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig((Serializers[]) null, (Serializers[]) null, beanSerializerModifierArray0);
      serializerFactoryConfig0.serializerModifiers();
      assertTrue(serializerFactoryConfig0.hasSerializerModifiers());
  }
}
