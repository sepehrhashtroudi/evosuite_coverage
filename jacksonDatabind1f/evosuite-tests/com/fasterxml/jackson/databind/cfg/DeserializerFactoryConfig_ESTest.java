/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:37:39 GMT 2023
 */

package com.fasterxml.jackson.databind.cfg;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.AbstractTypeResolver;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerModifier;
import com.fasterxml.jackson.databind.deser.Deserializers;
import com.fasterxml.jackson.databind.deser.KeyDeserializers;
import com.fasterxml.jackson.databind.deser.ValueInstantiators;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers;
import com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeserializerFactoryConfig_ESTest extends DeserializerFactoryConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
      DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);
      deserializerFactoryConfig1.abstractTypeResolvers();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[2];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[9];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[3];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      deserializerFactoryConfig0.deserializerModifiers();
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
      assertTrue(deserializerFactoryConfig0.hasValueInstantiators());
      assertFalse(deserializerFactoryConfig0.hasKeyDeserializers());
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[2];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[1];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[4];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      deserializerFactoryConfig0.deserializers();
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
      assertTrue(deserializerFactoryConfig0.hasValueInstantiators());
      assertFalse(deserializerFactoryConfig0.hasKeyDeserializers());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[22];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[8];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[5];
      ValueInstantiators.Base valueInstantiators_Base0 = new ValueInstantiators.Base();
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, (BeanDeserializerModifier[]) null, abstractTypeResolverArray0, valueInstantiatorsArray0);
      DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withValueInstantiators(valueInstantiators_Base0);
      assertTrue(deserializerFactoryConfig1.hasAbstractTypeResolvers());
      assertTrue(deserializerFactoryConfig1.hasDeserializers());
      assertTrue(deserializerFactoryConfig1.hasValueInstantiators());
      assertFalse(deserializerFactoryConfig1.hasKeyDeserializers());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[6];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[4];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[3];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[3];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[1];
      ValueInstantiators.Base valueInstantiators_Base0 = new ValueInstantiators.Base();
      valueInstantiatorsArray0[0] = (ValueInstantiators) valueInstantiators_Base0;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withValueInstantiators(valueInstantiatorsArray0[0]);
      assertTrue(deserializerFactoryConfig1.hasDeserializerModifiers());
      assertTrue(deserializerFactoryConfig1.hasAbstractTypeResolvers());
      assertTrue(deserializerFactoryConfig1.hasValueInstantiators());
      assertTrue(deserializerFactoryConfig1.hasDeserializers());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StdKeyDeserializers stdKeyDeserializers0 = new StdKeyDeserializers();
      Deserializers[] deserializersArray0 = new Deserializers[6];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[4];
      keyDeserializersArray0[0] = (KeyDeserializers) stdKeyDeserializers0;
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[3];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[3];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[1];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      deserializerFactoryConfig0.withAdditionalKeyDeserializers(keyDeserializersArray0[0]);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[3];
      Deserializers.Base deserializers_Base0 = new Deserializers.Base();
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[0];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[4];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, (AbstractTypeResolver[]) null, valueInstantiatorsArray0);
      deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Deserializers.Base deserializers_Base0 = new Deserializers.Base();
      Deserializers[] deserializersArray0 = new Deserializers[6];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[4];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[3];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[3];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[1];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[2];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[1];
      SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[4];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
      Deserializers[] deserializersArray0 = new Deserializers[0];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[6];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[2];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[5];
      abstractTypeResolverArray0[1] = (AbstractTypeResolver) simpleAbstractTypeResolver0;
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[6];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      deserializerFactoryConfig0.withAbstractTypeResolver(abstractTypeResolverArray0[1]);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[8];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[0];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, (AbstractTypeResolver[]) null, (ValueInstantiators[]) null);
      assertFalse(deserializerFactoryConfig0.hasKeyDeserializers());
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[4];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[9];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[5];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, (KeyDeserializers[]) null, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
      assertTrue(deserializerFactoryConfig0.hasValueInstantiators());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[9];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[3];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[0];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig((Deserializers[]) null, keyDeserializersArray0, (BeanDeserializerModifier[]) null, abstractTypeResolverArray0, valueInstantiatorsArray0);
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[22];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[8];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[5];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, (BeanDeserializerModifier[]) null, abstractTypeResolverArray0, valueInstantiatorsArray0);
      boolean boolean0 = deserializerFactoryConfig0.hasValueInstantiators();
      assertFalse(deserializerFactoryConfig0.hasKeyDeserializers());
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
      assertTrue(boolean0);
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      boolean boolean0 = deserializerFactoryConfig0.hasValueInstantiators();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      boolean boolean0 = deserializerFactoryConfig0.hasAbstractTypeResolvers();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[6];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[4];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[3];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[3];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[1];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, abstractTypeResolverArray0, valueInstantiatorsArray0);
      boolean boolean0 = deserializerFactoryConfig0.hasDeserializerModifiers();
      assertTrue(deserializerFactoryConfig0.hasValueInstantiators());
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
      assertTrue(boolean0);
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      boolean boolean0 = deserializerFactoryConfig0.hasDeserializerModifiers();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      boolean boolean0 = deserializerFactoryConfig0.hasKeyDeserializers();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[22];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[8];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[5];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, (BeanDeserializerModifier[]) null, abstractTypeResolverArray0, valueInstantiatorsArray0);
      boolean boolean0 = deserializerFactoryConfig0.hasKeyDeserializers();
      assertTrue(deserializerFactoryConfig0.hasValueInstantiators());
      assertFalse(boolean0);
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      boolean boolean0 = deserializerFactoryConfig0.hasDeserializers();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      // Undeclared exception!
      try { 
        deserializerFactoryConfig0.withValueInstantiators((ValueInstantiators) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null resolver
         //
         verifyException("com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      ValueInstantiators.Base valueInstantiators_Base0 = new ValueInstantiators.Base();
      DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withValueInstantiators(valueInstantiators_Base0);
      deserializerFactoryConfig1.valueInstantiators();
      assertTrue(deserializerFactoryConfig1.hasValueInstantiators());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      // Undeclared exception!
      try { 
        deserializerFactoryConfig0.withAbstractTypeResolver((AbstractTypeResolver) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null resolver
         //
         verifyException("com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
      DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);
      deserializerFactoryConfig1.hasAbstractTypeResolvers();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      // Undeclared exception!
      try { 
        deserializerFactoryConfig0.withDeserializerModifier((BeanDeserializerModifier) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null modifier
         //
         verifyException("com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      // Undeclared exception!
      try { 
        deserializerFactoryConfig0.withAdditionalKeyDeserializers((KeyDeserializers) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null KeyDeserializers
         //
         verifyException("com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      // Undeclared exception!
      try { 
        deserializerFactoryConfig0.withAdditionalDeserializers((Deserializers) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not pass null Deserializers
         //
         verifyException("com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      Deserializers.Base deserializers_Base0 = new Deserializers.Base();
      DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
      deserializerFactoryConfig1.hasDeserializers();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      StdKeyDeserializers stdKeyDeserializers0 = new StdKeyDeserializers();
      DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalKeyDeserializers(stdKeyDeserializers0);
      deserializerFactoryConfig1.keyDeserializers();
  }
}
