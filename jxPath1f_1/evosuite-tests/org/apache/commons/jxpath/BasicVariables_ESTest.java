/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 02:31:16 GMT 2023
 */

package org.apache.commons.jxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jxpath.BasicVariables;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicVariables_ESTest extends BasicVariables_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      basicVariables0.declareVariable("", "");
      boolean boolean0 = basicVariables0.isDeclaredVariable("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      basicVariables0.declareVariable("BM)xPa:*NCXxwo@@", (Object) null);
      Object object0 = basicVariables0.getVariable("BM)xPa:*NCXxwo@@");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      // Undeclared exception!
      try { 
        basicVariables0.getVariable("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ''
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      String string0 = basicVariables0.toString();
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      basicVariables0.undeclareVariable("ec,:q;");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      boolean boolean0 = basicVariables0.isDeclaredVariable("ec,:q;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      basicVariables0.declareVariable("{}", "ec,:q;");
      Object object0 = basicVariables0.getVariable("{}");
      assertEquals("ec,:q;", object0);
  }
}
