/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 01:59:03 GMT 2023
 */

package org.apache.commons.jxpath.ri;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jxpath.ri.QName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QName_ESTest extends QName_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName((String) null, (String) null);
      String string0 = qName0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("");
      String string0 = qName0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName(">]>%Y", "");
      String string0 = qName0.getPrefix();
      assertEquals(">]>%Y", string0);
      assertEquals("", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName(":J");
      qName0.getPrefix();
      assertEquals("J", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName((String) null, (String) null);
      String string0 = qName0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName(">]>%Y", "");
      String string0 = qName0.getName();
      assertEquals(">]>%Y", qName0.getPrefix());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("", (String) null);
      // Undeclared exception!
      try { 
        qName0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName((String) null, (String) null);
      QName qName1 = new QName("", "8ksS-sAo");
      // Undeclared exception!
      try { 
        qName0.equals(qName1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = null;
      try {
        qName0 = new QName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("r", "r");
      QName qName1 = new QName("r:r");
      boolean boolean0 = qName0.equals(qName1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("io");
      QName qName1 = new QName("io");
      boolean boolean0 = qName0.equals(qName1);
      assertTrue(boolean0);
      assertEquals("io", qName1.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("r", "r");
      QName qName1 = new QName("s", "r");
      boolean boolean0 = qName0.equals(qName1);
      assertEquals("r", qName1.getName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("io");
      QName qName1 = new QName("io", "io");
      boolean boolean0 = qName0.equals(qName1);
      assertFalse(boolean0);
      assertEquals("io", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName(":J");
      QName qName1 = new QName("", (String) null);
      boolean boolean0 = qName0.equals(qName1);
      assertFalse(boolean0);
      assertEquals("J", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName(":J");
      boolean boolean0 = qName0.equals(":J");
      assertFalse(boolean0);
      assertEquals("J", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName(":J");
      boolean boolean0 = qName0.equals(qName0);
      assertEquals("J", qName0.getName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("io");
      String string0 = qName0.toString();
      assertEquals("io", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName(":J");
      String string0 = qName0.toString();
      assertEquals("J", qName0.getName());
      assertEquals(":J", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QName qName0 = new QName("io");
      String string0 = qName0.getName();
      assertEquals("io", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = new QName("io");
      qName0.hashCode();
      assertEquals("io", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName qName0 = new QName("io");
      String string0 = qName0.getPrefix();
      assertNull(string0);
      assertEquals("io", qName0.getName());
  }
}
