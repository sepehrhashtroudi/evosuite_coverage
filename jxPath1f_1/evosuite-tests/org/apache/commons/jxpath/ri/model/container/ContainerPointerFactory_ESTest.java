/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 02:04:54 GMT 2023
 */

package org.apache.commons.jxpath.ri.model.container;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Locale;
import javax.xml.transform.stream.StreamSource;
import org.apache.commons.jxpath.XMLDocumentContainer;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContainerPointerFactory_ESTest extends ContainerPointerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContainerPointerFactory containerPointerFactory0 = new ContainerPointerFactory();
      QName qName0 = new QName("Ldy5q R%", "<)M(T@@q_*HriqO<8$");
      StreamSource streamSource0 = new StreamSource("comment");
      XMLDocumentContainer xMLDocumentContainer0 = new XMLDocumentContainer(streamSource0);
      NodePointer nodePointer0 = containerPointerFactory0.createNodePointer((NodePointer) null, qName0, (Object) xMLDocumentContainer0);
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ContainerPointerFactory containerPointerFactory0 = new ContainerPointerFactory();
      QName qName0 = new QName("");
      StreamSource streamSource0 = new StreamSource("");
      XMLDocumentContainer xMLDocumentContainer0 = new XMLDocumentContainer(streamSource0);
      NodePointer nodePointer0 = containerPointerFactory0.createNodePointer(qName0, (Object) xMLDocumentContainer0, (Locale) null);
      NodePointer nodePointer1 = containerPointerFactory0.createNodePointer(nodePointer0, qName0, (Object) xMLDocumentContainer0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ContainerPointerFactory containerPointerFactory0 = new ContainerPointerFactory();
      QName qName0 = new QName("");
      StreamSource streamSource0 = new StreamSource("");
      XMLDocumentContainer xMLDocumentContainer0 = new XMLDocumentContainer(streamSource0);
      NodePointer nodePointer0 = containerPointerFactory0.createNodePointer(qName0, (Object) xMLDocumentContainer0, (Locale) null);
      NodePointer nodePointer1 = containerPointerFactory0.createNodePointer(nodePointer0, qName0, (Object) qName0);
      assertNull(nodePointer1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContainerPointerFactory containerPointerFactory0 = new ContainerPointerFactory();
      QName qName0 = new QName("");
      StreamSource streamSource0 = new StreamSource("");
      NodePointer nodePointer0 = containerPointerFactory0.createNodePointer(qName0, (Object) streamSource0, (Locale) null);
      assertNull(nodePointer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ContainerPointerFactory containerPointerFactory0 = new ContainerPointerFactory();
      int int0 = containerPointerFactory0.getOrder();
      assertEquals(200, int0);
  }
}
