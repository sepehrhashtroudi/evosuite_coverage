/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 02:27:46 GMT 2023
 */

package org.apache.commons.jxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.net.URLStreamHandler;
import javax.xml.transform.Source;
import javax.xml.transform.sax.SAXSource;
import javax.xml.transform.stream.StreamSource;
import org.apache.commons.jxpath.XMLDocumentContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;
import org.xml.sax.InputSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLDocumentContainer_ESTest extends XMLDocumentContainer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("JDOM", "JDOM");
      StreamSource streamSource0 = new StreamSource(mockFile0);
      XMLDocumentContainer xMLDocumentContainer0 = new XMLDocumentContainer(streamSource0);
      // Undeclared exception!
      try { 
        xMLDocumentContainer0.getValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot read XML from: file:/home/sepehr/masters/d4j-test-generation/evosuite_coverage/jxPath1f/JDOM/JDOM; java.io.FileNotFoundException: /home/sepehr/masters/d4j-test-generation/evosuite_coverage/jxPath1f/JDOM/JDOM (No such file or directory)
         //
         verifyException("org.apache.commons.jxpath.XMLDocumentContainer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("h<7Td2\"Y?1;1T", "h<7Td2\"Y?1;1T", 1153, "h<7Td2\"Y?1;1T", uRLStreamHandler0);
      XMLDocumentContainer xMLDocumentContainer0 = new XMLDocumentContainer(uRL0);
      // Undeclared exception!
      try { 
        xMLDocumentContainer0.getValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot read XML from: <<undefined source>>; Cannot read XML from: null; java.lang.NullPointerException
         //
         verifyException("org.apache.commons.jxpath.XMLDocumentContainer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SAXSource sAXSource0 = new SAXSource((InputSource) null);
      XMLDocumentContainer xMLDocumentContainer0 = new XMLDocumentContainer(sAXSource0);
      Object object0 = xMLDocumentContainer0.getValue();
      Object object1 = xMLDocumentContainer0.getValue();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XMLDocumentContainer xMLDocumentContainer0 = null;
      try {
        xMLDocumentContainer0 = new XMLDocumentContainer((Source) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Source is null
         //
         verifyException("org.apache.commons.jxpath.XMLDocumentContainer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SAXSource sAXSource0 = new SAXSource((InputSource) null);
      XMLDocumentContainer xMLDocumentContainer0 = new XMLDocumentContainer(sAXSource0);
      // Undeclared exception!
      try { 
        xMLDocumentContainer0.setValue((Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.XMLDocumentContainer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XMLDocumentContainer xMLDocumentContainer0 = null;
      try {
        xMLDocumentContainer0 = new XMLDocumentContainer((URL) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML URL is null
         //
         verifyException("org.apache.commons.jxpath.xml.DocumentContainer", e);
      }
  }
}
