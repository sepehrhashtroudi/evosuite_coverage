/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:33:34 GMT 2022
 */

package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.block.Block;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.CenterArrangement;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.data.Range;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CenterArrangement_ESTest extends CenterArrangement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      BlockContainer blockContainer1 = new BlockContainer();
      blockContainer0.add((Block) blockContainer1, (Object) null);
      // Undeclared exception!
      try { 
        centerArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      labelBlock0.setMargin(rectangleInsets0);
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 2104.495638);
      Size2D size2D0 = centerArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
      assertEquals(2.0, size2D0.width, 0.01);
      assertEquals(2.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      labelBlock0.setMargin((-2944.0), 344.90059071, 0.0, (-3335.533933));
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 2104.495638);
      Size2D size2D0 = centerArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
      assertEquals((-2944.0), size2D0.height, 0.01);
      assertEquals((-2990.63334229), size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      Size2D size2D0 = centerArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(0.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("<");
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 2104.495638);
      Size2D size2D0 = centerArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
      assertEquals((-4.0), size2D0.width, 0.01);
      assertEquals(11.640625, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      labelBlock0.setPadding((-4128.255), 599.5630322063217, 599.5630322063217, (-2301.43508656482));
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 2104.495638);
      Size2D size2D0 = centerArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
      assertEquals((-3528.6919677936785), size2D0.height, 0.01);
      assertEquals(850.9360271792491, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      Size2D size2D0 = centerArrangement0.arrange(blockContainer0, graphics2D0, rectangleConstraint0);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals(0.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.8, (Range) null);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeRR((BlockContainer) null, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1.5, (-670.83000719962));
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeRR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 1);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeRN(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 2104.495638);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeRN(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeRF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BufferedImage bufferedImage0 = new BufferedImage(483, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeNN((BlockContainer) null, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer(centerArrangement0);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeNF((BlockContainer) null, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Range range0 = new Range((-888.0), (-888.0));
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, 1470.56940432);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeNF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeFR(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer(centerArrangement0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (-2950.0));
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeFN((BlockContainer) null, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeFF((BlockContainer) null, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      CenterArrangement centerArrangement1 = new CenterArrangement();
      boolean boolean0 = centerArrangement0.equals(centerArrangement1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      boolean boolean0 = centerArrangement0.equals(centerArrangement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      LabelBlock labelBlock0 = new LabelBlock("");
      blockContainer0.add((Block) labelBlock0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      Size2D size2D0 = centerArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
      boolean boolean0 = centerArrangement0.equals(size2D0);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(0.0, size2D0.height, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      // Undeclared exception!
      try { 
        centerArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null);
      // Undeclared exception!
      try { 
        centerArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 2104.495638);
      // Undeclared exception!
      try { 
        centerArrangement0.arrange(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null);
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        centerArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.CenterArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, 0.0);
      // Undeclared exception!
      try { 
        centerArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      centerArrangement0.clear();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 778, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 1);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1025.09, (Range) null);
      // Undeclared exception!
      try { 
        centerArrangement0.arrangeRF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CenterArrangement centerArrangement0 = new CenterArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Object object0 = new Object();
      centerArrangement0.add(blockContainer0, object0);
      assertTrue(blockContainer0.isEmpty());
  }
}
