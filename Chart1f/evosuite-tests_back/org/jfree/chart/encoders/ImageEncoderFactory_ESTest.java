/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:10:17 GMT 2022
 */

package org.jfree.chart.encoders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.encoders.ImageEncoderFactory;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImageEncoderFactory_ESTest extends ImageEncoderFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("org.jfree.chart.encoders.SunPNGEncoderAdapter", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - org.jfree.chart.encoders.SunPNGEncoderAdapter
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("org.jfree.chart.encoders.SunPNGEncoderAdapter");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - org.jfree.chart.encoders.SunPNGEncoderAdapter
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.setImageEncoder((String) null, ">7`^N_y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = null;
      float float0 = (-1.0F);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance(string0, float0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("", 0.0F, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - 
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance((String) null, 1982.2F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("m`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - m`
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - 
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = true;
      String string0 = "ZHE8y ,^~RcP";
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance(string0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - ZHE8y ,^~RcP
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "org.jfree.chart.encoders.SunJPEGEncoderAdapter";
      ImageEncoderFactory.setImageEncoder(string0, string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("", 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - 
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImageEncoderFactory imageEncoderFactory0 = new ImageEncoderFactory();
  }
}
