/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:27:12 GMT 2022
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.XYCoordinateType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYCoordinateType_ESTest extends XYCoordinateType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XYCoordinateType xYCoordinateType0 = XYCoordinateType.INDEX;
      XYCoordinateType xYCoordinateType1 = XYCoordinateType.DATA;
      boolean boolean0 = xYCoordinateType0.equals(xYCoordinateType1);
      assertFalse(boolean0);
      assertFalse(xYCoordinateType1.equals((Object)xYCoordinateType0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XYCoordinateType xYCoordinateType0 = XYCoordinateType.RELATIVE;
      String string0 = xYCoordinateType0.toString();
      assertEquals("XYCoordinateType.RELATIVE", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XYCoordinateType xYCoordinateType0 = XYCoordinateType.DATA;
      Object object0 = new Object();
      boolean boolean0 = xYCoordinateType0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XYCoordinateType xYCoordinateType0 = XYCoordinateType.INDEX;
      boolean boolean0 = xYCoordinateType0.equals(xYCoordinateType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XYCoordinateType xYCoordinateType0 = XYCoordinateType.DATA;
      XYCoordinateType xYCoordinateType1 = XYCoordinateType.INDEX;
      boolean boolean0 = xYCoordinateType0.equals(xYCoordinateType1);
      assertFalse(xYCoordinateType1.equals((Object)xYCoordinateType0));
      assertFalse(boolean0);
  }
}
