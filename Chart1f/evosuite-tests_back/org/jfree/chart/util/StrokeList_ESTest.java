/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:17:10 GMT 2022
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Stroke;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.StrokeList;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrokeList_ESTest extends StrokeList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      BasicStroke basicStroke0 = new BasicStroke(1568.676F, 0, 0);
      strokeList0.setStroke(0, basicStroke0);
      strokeList0.getStroke(0);
      assertEquals(1, strokeList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      // Undeclared exception!
      try { 
        strokeList0.setStroke((-943), (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      strokeList0.set(0, "");
      // Undeclared exception!
      try { 
        strokeList0.getStroke(0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.awt.Stroke
         //
         verifyException("org.jfree.chart.util.StrokeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      strokeList0.setStroke(3134, (Stroke) null);
      Object object0 = strokeList0.clone();
      // Undeclared exception!
      strokeList0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      boolean boolean0 = strokeList0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      boolean boolean0 = strokeList0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      boolean boolean0 = strokeList0.equals(strokeList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      strokeList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StrokeList strokeList0 = new StrokeList();
      Stroke stroke0 = strokeList0.getStroke(0);
      assertNull(stroke0);
  }
}
