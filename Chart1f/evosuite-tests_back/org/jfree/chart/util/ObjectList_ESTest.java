/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:41:52 GMT 2022
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.ObjectList;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectList_ESTest extends ObjectList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObjectList objectList0 = new ObjectList(255);
      objectList0.set(255, "");
      objectList0.get(255);
      assertEquals(256, objectList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ObjectList objectList0 = new ObjectList(0);
      // Undeclared exception!
      try { 
        objectList0.set((-1), (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ObjectList objectList0 = new ObjectList(0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        objectList0.set(0, object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ObjectList objectList0 = new ObjectList(185);
      objectList0.set(185, "");
      objectList0.indexOf((Object) null);
      assertEquals(186, objectList0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObjectList objectList0 = new ObjectList();
      int int0 = objectList0.indexOf("B|^. ");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ObjectList objectList0 = null;
      try {
        objectList0 = new ObjectList((-3667));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ObjectList objectList0 = new ObjectList();
      Object object0 = objectList0.get(11);
      assertNull(object0);
  }
}
