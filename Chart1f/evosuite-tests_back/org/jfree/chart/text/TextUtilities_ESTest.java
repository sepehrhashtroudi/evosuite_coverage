/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:30:38 GMT 2022
 */

package org.jfree.chart.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.SystemColor;
import java.awt.geom.Path2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.table.JTableHeader;
import javax.swing.text.AttributeSet;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.text.G2TextMeasurer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextMeasurer;
import org.jfree.chart.text.TextUtilities;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TextUtilities_ESTest extends TextUtilities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      Path2D.Double path2D_Double0 = (Path2D.Double)TextUtilities.calculateRotatedStringBounds("QthYb!+#/Z+O", graphics2D0, 6025.364F, 0.0F, textAnchor0, 0.8, textAnchor0);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("The 'data' array must have length == 3.", 0, 0);
      Color color0 = Color.blue;
      G2TextMeasurer g2TextMeasurer0 = new G2TextMeasurer((Graphics2D) null);
      // Undeclared exception!
      try { 
        TextUtilities.createTextBlock("The 'data' array must have length == 3.", font0, (Paint) color0, (float) 0, 0, (TextMeasurer) g2TextMeasurer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextUtilities.setUseFontMetricsGetStringBounds(false);
      boolean boolean0 = TextUtilities.getUseFontMetricsGetStringBounds();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString(";`;bPFo66+d>H]i", graphics2D0, (-0.112305015F), 0.0F, textAnchor0);
      assertEquals((-106.1123046875), rectangle2D_Double0.x, 0.01);
      assertEquals(2.830078125, rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      String string0 = "q'nn(AR}LDVe\\u?7E";
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString(string0, graphics2D0, 0.0F, 0.0F, textAnchor0);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-6.984375), rectangle2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString(";`;bPFo66+d>H]i", graphics2D0, 0.0F, 0.0F, textAnchor0);
      assertEquals((-106.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-4.154296875), rectangle2D_Double0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        TextUtilities.getTextBounds("&RHRqgktJo>U%zC", (Graphics2D) null, (FontMetrics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      // Undeclared exception!
      try { 
        TextUtilities.drawRotatedString("tI_[[?sq", (Graphics2D) null, (-329.7521F), (-329.7521F), (TextAnchor) null, 28.3, textAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        TextUtilities.drawRotatedString("Ok\"/ Sj<H18&8", (Graphics2D) null, (-1304.9192F), (-1304.9192F), (TextAnchor) null, (double) (-1304.9192F), 0.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        TextUtilities.drawRotatedString("qH6`kk^u32/BQu!%jtD", (Graphics2D) null, 0.0F, (-769.5661F), (double) (-769.5661F), 1116.8F, (-2102.34F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "q'nn(AR}LDVe\\u?7E";
      // Undeclared exception!
      try { 
        TextUtilities.drawRotatedString(string0, (Graphics2D) null, 0.0, 0.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      // Undeclared exception!
      try { 
        TextUtilities.drawAlignedString("LblLIe@}M", (Graphics2D) null, 1511.808F, 0.0F, textAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
      try { 
        TextUtilities.calculateRotatedStringBounds("]^h", (Graphics2D) null, (-1.0F), (-1.0F), textAnchor0, (-1045.750755521988), textAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        TextUtilities.calculateRotatedStringBounds("bin width", (Graphics2D) null, (-1698.0F), (-1698.0F), (double) (-1698.0F), (-1698.0F), (-1698.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextUtilities.drawRotatedString("g/oi{48z fEy$Ihz&_", (Graphics2D) sunGraphics2D0, 929.6551F, 2.0F, (double) (-1503.878F), 88.0F, (-3850.2285F));
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StyleContext styleContext0 = new StyleContext();
      Hashtable<AttributedCharacterIterator.Attribute, JTableHeader> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, JTableHeader>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      FontMetrics fontMetrics0 = styleContext0.getFontMetrics(font0);
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)TextUtilities.getTextBounds("DefaultIntervalCategoryDataset.setValue: unrecognised category.", graphics2D0, fontMetrics0);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      Font font0 = styleContext0.getFont((AttributeSet) styleContext_NamedStyle0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      TextBlock textBlock0 = TextUtilities.createTextBlock("", font0, (Paint) color0, 904.72F, (-1338), (TextMeasurer) null);
      assertNotNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Hashtable<AttributedCharacterIterator.Attribute, SequenceInputStream> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, SequenceInputStream>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      G2TextMeasurer g2TextMeasurer0 = new G2TextMeasurer(graphics2D0);
      TextBlock textBlock0 = TextUtilities.createTextBlock("fR_Vxd:&gz", font0, ((SunGraphics2D) graphics2D0).paint, (float) (-1), 366, (TextMeasurer) g2TextMeasurer0);
      assertNotNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Shape shape0 = TextUtilities.calculateRotatedStringBounds("", graphics2D0, 104.0F, 286.498F, (-1048.0), (-363.3632F), (-1503.878F));
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Shape shape0 = TextUtilities.calculateRotatedStringBounds((String) null, (Graphics2D) null, (-2225.0017F), 1.0F, 0.0, 1.0F, 0.0F);
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      TextAnchor textAnchor1 = TextAnchor.CENTER_RIGHT;
      Path2D.Double path2D_Double0 = (Path2D.Double)TextUtilities.calculateRotatedStringBounds(">'*X:m\"<x~\"xo[v", graphics2D0, (float) 0, 0.0F, textAnchor0, (double) 0, textAnchor1);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_CENTER;
      TextUtilities.drawRotatedString("fJDB", (Graphics2D) sunGraphics2D0, 88.0F, (-1503.878F), textAnchor0, (double) 2435.9849F, textAnchor0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      TextAnchor textAnchor1 = TextAnchor.TOP_CENTER;
      Path2D.Double path2D_Double0 = (Path2D.Double)TextUtilities.calculateRotatedStringBounds(">'*X:m\"<x~\"xo[v", graphics2D0, (float) 0, 0.0F, textAnchor0, (double) 0, textAnchor1);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      TextUtilities.drawRotatedString("*/CQ0& KG:Or", (Graphics2D) sunGraphics2D0, 0.0F, 0.0F, textAnchor0, (double) 0, textAnchor0);
      assertEquals(1, sunGraphics2D0.antialiasHint);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_LEFT;
      Path2D.Double path2D_Double0 = (Path2D.Double)TextUtilities.calculateRotatedStringBounds("org.jfree.chart.text.TextUtilities", graphics2D0, (-4359.097F), 1.0F, textAnchor0, (double) (-4359.097F), textAnchor0);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      String string0 = "q'nn(AR}LDVe\\u?7E";
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      TextUtilities.drawRotatedString(string0, (Graphics2D) sunGraphics2D0, (-2757.5F), 2.0F, textAnchor0, (double) 2.0F, 2034.0F, 1200.058F);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      TextAnchor textAnchor1 = TextAnchor.HALF_ASCENT_RIGHT;
      TextUtilities.drawRotatedString("*/CQ0& KG:Or", (Graphics2D) sunGraphics2D0, 0.0F, 0.0F, textAnchor1, (double) 0, textAnchor0);
      assertEquals(0, sunGraphics2D0.transX);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      TextAnchor textAnchor1 = TextAnchor.CENTER_RIGHT;
      TextUtilities.drawRotatedString("*/CQ0& KG:Or", (Graphics2D) sunGraphics2D0, 0.0F, 0.0F, textAnchor1, (double) 0, textAnchor0);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(91, 10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      TextUtilities.drawRotatedString("D", (Graphics2D) sunGraphics2D0, (float) 10, (float) 91, textAnchor0, 472.622, (TextAnchor) null);
      assertEquals(0, sunGraphics2D0.clipState);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 12, 12);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      TextUtilities.drawRotatedString("I[e^hP@&qOF\"8^vU{", (Graphics2D) sunGraphics2D0, (float) 12, (float) 1, textAnchor0, (double) 12, textAnchor0);
      assertEquals(0, sunGraphics2D0.clipState);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_CENTER;
      TextUtilities.drawRotatedString("fJDB", (Graphics2D) sunGraphics2D0, (float) 10, 1128.1F, textAnchor0, 2.0, (-542.218F), 929.6551F);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      TextAnchor textAnchor1 = TextAnchor.TOP_CENTER;
      TextUtilities.drawRotatedString(">'*X:m\"<x~\"xo[v", (Graphics2D) sunGraphics2D0, (-1746.4F), (-1.0F), textAnchor1, (double) 0, textAnchor0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      Shape shape0 = TextUtilities.calculateRotatedStringBounds("", (Graphics2D) null, 0.0F, 1118.54F, textAnchor0, 0.0, textAnchor0);
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.TOP_LEFT;
      Shape shape0 = TextUtilities.calculateRotatedStringBounds((String) null, (Graphics2D) null, 1.0F, 0.0F, textAnchor0, 2082.361, textAnchor0);
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      TextUtilities.drawRotatedString("", (Graphics2D) null, (-1833.0F), (-1833.0F), textAnchor0, 659.2, textAnchor0);
      assertEquals("TextAnchor.BASELINE_RIGHT", textAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.TOP_CENTER;
      TextUtilities.drawRotatedString((String) null, (Graphics2D) null, (float) 910, (-752.5F), textAnchor0, (double) 910, textAnchor0);
      assertEquals("TextAnchor.TOP_CENTER", textAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TextUtilities.drawRotatedString("", (Graphics2D) null, (-295.75867F), 0.0F, (TextAnchor) null, (double) 2907.0F, 0.0F, 1010.9F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      TextUtilities.drawRotatedString((String) null, (Graphics2D) null, 2.0F, 2.0F, textAnchor0, (-2338.37206297075), 2.0F, 2.0F);
      assertEquals("TextAnchor.CENTER_RIGHT", textAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TextUtilities.drawRotatedString("", (Graphics2D) null, 2907.0F, 2907.0F, 1.0, 1958.7114F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TextUtilities.drawRotatedString((String) null, (Graphics2D) null, 2.0F, (-766.077F), (double) (-766.077F), (-1.0F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString(";`;bPFo66+d>H]i", graphics2D0, 3, 3, textAnchor0);
      assertEquals(3.0, rectangle2D_Double0.x, 0.01);
      assertEquals(5.830078125, rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString("...", graphics2D0, 502.2675F, 502.2675F, textAnchor0);
      assertEquals(490.2674865722656, rectangle2D_Double0.x, 0.01);
      assertEquals(503.6825256347656, rectangle2D_Double0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString("...", graphics2D0, 502.2675F, 502.2675F, textAnchor0);
      assertEquals(495.2831115722656, rectangle2D_Double0.y, 0.01);
      assertEquals(490.2674865722656, rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString("...", graphics2D0, 502.2675F, 502.2675F, textAnchor0);
      assertEquals(502.2674560546875, rectangle2D_Double0.y, 0.01);
      assertEquals(490.2674865722656, rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_CENTER;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString("Null 'text' argument.", graphics2D0, 2435.9849F, 1128.1F, textAnchor0);
      assertEquals(1128.0999755859375, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(2372.98486328125, rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextAnchor textAnchor0 = TextAnchor.TOP_CENTER;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)TextUtilities.drawAlignedString("...", graphics2D0, 502.2675F, 502.2675F, textAnchor0);
      assertEquals(502.2674560546875, rectangle2D_Double0.y, 0.01);
      assertEquals(496.2674865722656, rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TextUtilities.setUseFontMetricsGetStringBounds(false);
      Path2D.Double path2D_Double0 = (Path2D.Double)TextUtilities.calculateRotatedStringBounds(";`;bPFo66+d>H]i", graphics2D0, (-2757.5F), 502.2675F, (double) 1200.058F, (-2757.5F), 1129.93F);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Hashtable<AttributedCharacterIterator.Attribute, InputStream> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, InputStream>(9999);
      Font font0 = new Font(hashtable0);
      SystemColor systemColor0 = SystemColor.textInactiveText;
      G2TextMeasurer g2TextMeasurer0 = new G2TextMeasurer((Graphics2D) null);
      // Undeclared exception!
      try { 
        TextUtilities.createTextBlock("\n", font0, (Paint) systemColor0, (float) 9999, (TextMeasurer) g2TextMeasurer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.G2TextMeasurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextSelectionColor();
      G2TextMeasurer g2TextMeasurer0 = new G2TextMeasurer((Graphics2D) null);
      // Undeclared exception!
      try { 
        TextUtilities.createTextBlock("`^JPwTZbkdO", (Font) null, (Paint) color0, (-1.0F), (-920), (TextMeasurer) g2TextMeasurer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Hashtable<AttributedCharacterIterator.Attribute, InputStream> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, InputStream>(10003);
      Font font0 = new Font(hashtable0);
      SystemColor systemColor0 = SystemColor.textInactiveText;
      G2TextMeasurer g2TextMeasurer0 = new G2TextMeasurer((Graphics2D) null);
      TextBlock textBlock0 = TextUtilities.createTextBlock("", font0, (Paint) systemColor0, (float) 10003, (TextMeasurer) g2TextMeasurer0);
      assertNotNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Color color0 = Color.getColor("\n", (-1767));
      TextBlock textBlock0 = TextUtilities.createTextBlock("\n", (Font) null, (Paint) color0);
      assertNotNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Font font0 = new Font("3tT%4~{`&M;L?Mq`EF", (-1), (-3659));
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextSelectionColor();
      TextBlock textBlock0 = TextUtilities.createTextBlock("3tT%4~{`&M;L?Mq`EF", font0, (Paint) color0);
      assertNotNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, Integer> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Integer>();
      Font font0 = new Font(hashMap0);
      SystemColor systemColor0 = SystemColor.inactiveCaptionBorder;
      GradientPaint gradientPaint0 = new GradientPaint(0.0F, 0.0F, systemColor0, 0.0F, 236.4711F, systemColor0);
      // Undeclared exception!
      try { 
        TextUtilities.createTextBlock((String) null, font0, (Paint) gradientPaint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.text.TextUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Color color0 = Color.RED;
      TextBlock textBlock0 = TextUtilities.createTextBlock("", (Font) null, (Paint) color0);
      assertNotNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      TextUtilities.drawRotatedString("*/CQ0& KG:Or", (Graphics2D) sunGraphics2D0, 1867.3564171981004, 502.2675F, (float) 3);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      boolean boolean0 = TextUtilities.isUseDrawRotatedStringWorkaround();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TextUtilities.setUseDrawRotatedStringWorkaround(true);
      boolean boolean0 = TextUtilities.isUseDrawRotatedStringWorkaround();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      boolean boolean0 = TextUtilities.getUseFontMetricsGetStringBounds();
      assertTrue(boolean0);
  }
}
