/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:49:00 GMT 2022
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.labels.StandardXYItemLabelGenerator;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardXYItemLabelGenerator_ESTest extends StandardXYItemLabelGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("{2}");
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("{2}", decimalFormat0, mockSimpleDateFormat0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      // Undeclared exception!
      try { 
        standardXYItemLabelGenerator0.generateLabel(defaultTableXYDataset0, 12, 23);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index outside valid range.
         //
         verifyException("org.jfree.data.xy.DefaultTableXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("Unknown data");
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[8];
      MockDate mockDate0 = new MockDate(0L);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0L, 0.0, Double.NEGATIVE_INFINITY, 0L, 0L);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("{2}", oHLCDataItemArray0);
      String string0 = standardXYItemLabelGenerator0.generateLabel(defaultOHLCDataset0, 0, 0);
      assertEquals("Unknown data", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("");
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[8];
      MockDate mockDate0 = new MockDate(0L);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0L, 0.0, Double.NEGATIVE_INFINITY, 0L, 0L);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("{2}", oHLCDataItemArray0);
      String string0 = standardXYItemLabelGenerator0.generateLabel(defaultOHLCDataset0, 0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("wH@x6A(=(_LJ2!&");
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        standardXYItemLabelGenerator0.generateLabel(histogramDataset0, 159, 159);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 159, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("N&a;M");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      // Undeclared exception!
      try { 
        standardXYItemLabelGenerator0.generateLabel(dynamicTimeSeriesCollection0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance(0);
      Locale locale0 = Locale.CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("{2}", dateFormat0, numberFormat0);
      MatrixSeries matrixSeries0 = new MatrixSeries("{2}", 1, 0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      // Undeclared exception!
      try { 
        standardXYItemLabelGenerator0.generateLabel(matrixSeriesCollection0, 0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = null;
      try {
        standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("XH}N$oI`", (NumberFormat) null, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'xFormat' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = null;
      try {
        standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("", (NumberFormat) null, mockSimpleDateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'xFormat' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = null;
      try {
        standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("Failed to add cloned item.", dateFormat0, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'yFormat' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = null;
      try {
        standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator((String) null, (DateFormat) null, (DateFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = null;
      try {
        standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = new Locale("");
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("JWMV|Y#bMB", numberFormat0, numberFormat0);
      // Undeclared exception!
      try { 
        standardXYItemLabelGenerator0.generateLabel((XYDataset) null, 1854, 1854);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance(0);
      Locale locale0 = Locale.CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("{2}", dateFormat0, numberFormat0);
      StandardXYItemLabelGenerator standardXYItemLabelGenerator1 = new StandardXYItemLabelGenerator("{2}", dateFormat0, dateFormat0);
      boolean boolean0 = standardXYItemLabelGenerator0.equals(standardXYItemLabelGenerator1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("wH@x6A(=(_LJ2!&");
      boolean boolean0 = standardXYItemLabelGenerator0.equals(standardXYItemLabelGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance(0);
      Locale locale0 = Locale.CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("{2}", dateFormat0, numberFormat0);
      LocalDate localDate0 = MockLocalDate.now();
      boolean boolean0 = standardXYItemLabelGenerator0.equals(localDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator("wH@x6A(=(_LJ2!&");
      Object object0 = standardXYItemLabelGenerator0.clone();
      assertTrue(object0.equals((Object)standardXYItemLabelGenerator0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardXYItemLabelGenerator standardXYItemLabelGenerator0 = new StandardXYItemLabelGenerator();
      assertEquals("null", standardXYItemLabelGenerator0.getNullYString());
  }
}
