/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:51:52 GMT 2022
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.text.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ItemLabelPosition_ESTest extends ItemLabelPosition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE3;
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 956.8156);
      double double0 = itemLabelPosition0.getAngle();
      assertEquals(956.8156, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE3;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, (-1257.271744214779));
      double double0 = itemLabelPosition0.getAngle();
      assertEquals((-1257.271744214779), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition((ItemLabelAnchor) null, textAnchor0, textAnchor0, (-2257.8325));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'itemLabelAnchor' argument.
         //
         verifyException("org.jfree.chart.labels.ItemLabelPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE5;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 1150.66444328);
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 0.0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertFalse(itemLabelPosition1.equals((Object)itemLabelPosition0));
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE12;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertTrue(boolean0);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE12;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition();
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE6;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition();
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE6;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      boolean boolean0 = itemLabelPosition0.equals(textAnchor0);
      assertFalse(boolean0);
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE12;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition0);
      assertTrue(boolean0);
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE6;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 0.0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertFalse(boolean0);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE9;
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, (TextAnchor) null, 2456.208);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rotationAnchor' argument.
         //
         verifyException("org.jfree.chart.labels.ItemLabelPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE5;
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, (TextAnchor) null, textAnchor0, (-1645.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'textAnchor' argument.
         //
         verifyException("org.jfree.chart.labels.ItemLabelPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_LEFT;
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition((ItemLabelAnchor) null, textAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'itemLabelAnchor' argument.
         //
         verifyException("org.jfree.chart.labels.ItemLabelPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      TextAnchor textAnchor0 = itemLabelPosition0.getRotationAnchor();
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE2;
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, (-1.0));
      ItemLabelPosition itemLabelPosition2 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      boolean boolean0 = itemLabelPosition1.equals(itemLabelPosition2);
      assertFalse(itemLabelPosition2.equals((Object)itemLabelPosition1));
      assertEquals(0.0, itemLabelPosition2.getAngle(), 0.01);
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE6;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      double double0 = itemLabelPosition0.getAngle();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE6;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
      assertEquals("TextAnchor.BASELINE_LEFT", textAnchor1.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE12;
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      itemLabelPosition0.getItemLabelAnchor();
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
  }
}
