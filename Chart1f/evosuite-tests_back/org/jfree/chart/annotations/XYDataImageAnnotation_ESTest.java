/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:01:55 GMT 2022
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.LookupOp;
import javax.swing.JInternalFrame;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.data.Range;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.time.TimeSeriesCollection;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYDataImageAnnotation_ESTest extends XYDataImageAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 66, (-5.0), 66, 66);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LogAxis logAxis0 = new LogAxis((String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      byte[] byteArray0 = new byte[3];
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(10, byteArray0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, ((SunGraphics2D) graphics2D0).hints);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYDataImageAnnotation0.draw(graphics2D0, combinedDomainXYPlot0, rectangle2D0, logAxis0, logAxis0, (-283), plotRenderingInfo0);
      assertEquals(66.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.8055945804162565, 0.8055945804162565, 2699.9, 1.0F, true);
      Range range0 = xYDataImageAnnotation0.getYRange();
      assertEquals(0.8055945804162565, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1.3055945804162565, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 1, 0.0, 66, 0.0);
      Range range0 = xYDataImageAnnotation0.getYRange();
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      Range range0 = xYDataImageAnnotation0.getYRange();
      assertEquals((-5.0), range0.getUpperBound(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, 1, 66, 0.0);
      double double0 = xYDataImageAnnotation0.getY();
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-5.0), double0, 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-0.6836189325856024), (-0.6836189325856024), 2699.9, 1.0F, true);
      assertEquals(2699.9, xYDataImageAnnotation0.getWidth(), 0.01);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1349.2663810674146, range0.getCentralValue(), 0.01);
      assertTrue(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-0.6836189325856024), xYDataImageAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, 0.0, 0.0, 1.0F, true);
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
      assertTrue(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYDataImageAnnotation0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, 0.0, 2699.9, 1.0F, true);
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(0.0, double0, 0.01);
      assertEquals(2699.9, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYDataImageAnnotation0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-0.6836189325856024), (-0.6836189325856024), 2699.9, 1.0F, true);
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(2699.9, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-0.6836189325856024), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-0.6836189325856024), double0, 0.01);
      assertEquals(1.0, xYDataImageAnnotation0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(zoneInfo0);
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'image' argument.", stringArray0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, symbolAxis0, symbolAxis0, defaultXYItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, font0, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 590);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-1857.178003), 0.0F, 78.604644795);
      double double0 = xYDataImageAnnotation0.getWidth();
      assertEquals((-1857.178003), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(78.604644795, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Image image0 = bufferedImage0.getScaledInstance((-2591), (-14), (-1180));
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 10, 0.0, 0.0, (-1180));
      double double0 = xYDataImageAnnotation0.getHeight();
      assertEquals((-1180.0), double0, 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(10.0, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(370, 370);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-270.478833565), 1.0F, (-3719.54893), 15, true);
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.getXRange();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (-270.478833565) <= upper (-3990.027763565).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.draw(graphics2D0, combinedRangeXYPlot0, (Rectangle2D) null, numberAxis0, numberAxis0, (-566), plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-0.6836189325856024), (-0.6836189325856024), 2699.9, 1.0F, true);
      double double0 = xYDataImageAnnotation0.getHeight();
      assertEquals(1.0, double0, 0.01);
      assertEquals(2699.9, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-0.6836189325856024), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-0.6836189325856024), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYDataImageAnnotation xYDataImageAnnotation0 = null;
      try {
        xYDataImageAnnotation0 = new XYDataImageAnnotation((Image) null, 0.0, 0.0, (-1830.0), (-82.10042888), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.annotations.XYDataImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation0);
      assertTrue(boolean0);
      assertEquals(66.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      boolean boolean0 = xYDataImageAnnotation0.equals(bufferedImage0);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(66.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      XYPlot xYPlot0 = new XYPlot();
      JInternalFrame jInternalFrame0 = new JInternalFrame("^O{-3UQd1a", true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      LogAxis logAxis0 = new LogAxis("^O{-3UQd1a");
      DateAxis dateAxis0 = new DateAxis((String) null);
      JFreeChart jFreeChart0 = new JFreeChart("", logAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 243, 0, 500, 1138, 66, 1, true, false, true, false, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYDataImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle0, logAxis0, dateAxis0, 26, plotRenderingInfo0);
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(66.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYDataImageAnnotation xYDataImageAnnotation0 = null;
      try {
        xYDataImageAnnotation0 = new XYDataImageAnnotation((Image) null, 2904.894, 0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.annotations.XYDataImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      xYDataImageAnnotation0.hashCode();
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(66.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Image image0 = bufferedImage0.getScaledInstance((-2591), (-14), (-1180));
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 10, 0.0, 0.0, (-1180));
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(10.0, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-1180.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Image image0 = bufferedImage0.getScaledInstance((-2591), (-14), (-1180));
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 10, 0.0, 0.0, (-1180));
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.getYRange();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-1180.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Image image0 = bufferedImage0.getScaledInstance((-2591), (-14), (-1180));
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 10, 0.0, 0.0, (-1180));
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(10.0, double0, 0.01);
      assertEquals((-1180.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      double double0 = xYDataImageAnnotation0.getWidth();
      assertEquals(66.0, double0, 0.01);
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      xYDataImageAnnotation0.getImage();
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(66.0, xYDataImageAnnotation0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      double double0 = xYDataImageAnnotation0.getHeight();
      assertEquals(66.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Image image0 = bufferedImage0.getScaledInstance((-2591), (-14), (-1180));
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 10, 0.0, 0.0, (-1180));
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(10.0, range0.getCentralValue(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1180.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      XYDataImageAnnotation xYDataImageAnnotation1 = (XYDataImageAnnotation)xYDataImageAnnotation0.clone();
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation1);
      assertTrue(boolean0);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals((-5.0), xYDataImageAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getX(), 0.01);
      assertEquals(66.0, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(66, 66, 1);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-5.0), 66, 0.0);
      boolean boolean0 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertEquals((-5.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(66.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
  }
}
