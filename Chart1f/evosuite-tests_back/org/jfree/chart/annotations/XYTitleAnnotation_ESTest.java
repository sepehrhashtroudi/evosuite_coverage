/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 21:54:25 GMT 2022
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.CenterArrangement;
import org.jfree.chart.block.ColumnArrangement;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.title.CompositeTitle;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.ShortTextTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYTitleAnnotation_ESTest extends XYTitleAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("0^|JPsJs`0{:f");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(Integer.MIN_VALUE);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      TextTitle textTitle0 = new TextTitle("0^|JPsJs`0{:f", subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, subCategoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1.0, 1.0, textTitle0, rectangleAnchor0);
      XYTitleAnnotation xYTitleAnnotation1 = new XYTitleAnnotation(1.0F, (-4319.2918), textTitle0);
      boolean boolean0 = xYTitleAnnotation0.equals(xYTitleAnnotation1);
      assertEquals(0.0, xYTitleAnnotation1.getMaxWidth(), 0.01);
      assertEquals((-4319.2918), xYTitleAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation1.getMaxHeight(), 0.01);
      assertEquals(1.0, xYTitleAnnotation1.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, dateTitle0, rectangleAnchor0);
      XYTitleAnnotation xYTitleAnnotation1 = new XYTitleAnnotation(1748.944940865978, 1.7976931348623157E308, dateTitle0, rectangleAnchor0);
      boolean boolean0 = xYTitleAnnotation0.equals(xYTitleAnnotation1);
      assertFalse(boolean0);
      assertEquals(1748.944940865978, xYTitleAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation1.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation1.getMaxHeight(), 0.01);
      assertEquals(1.7976931348623157E308, xYTitleAnnotation1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, dateTitle0, rectangleAnchor0);
      MeterPlot meterPlot0 = new MeterPlot((ValueDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart("\"A%P", dateTitle0.DEFAULT_FONT, meterPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1607, 500, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis numberAxis0 = new NumberAxis(";Gq-;(Ry");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null);
      Rectangle2D rectangle2D0 = convolveOp0.getBounds2D(bufferedImage0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        xYTitleAnnotation0.draw(graphics2D0, combinedDomainXYPlot0, rectangle2D0, (ValueAxis) null, numberAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYTitleAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Dw8B1D6=;M^");
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(2.0E7, 2328.9843735527015, shortTextTitle0);
      double double0 = xYTitleAnnotation0.getY();
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(2328.9843735527015, double0, 0.01);
      assertEquals(2.0E7, xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("i#$]Rf|i~'", combinedDomainCategoryPlot0);
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1323.3978312653, (-3690.944590392), compositeTitle0, rectangleAnchor0);
      double double0 = xYTitleAnnotation0.getY();
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(1323.3978312653, xYTitleAnnotation0.getX(), 0.01);
      assertEquals((-3690.944590392), double0, 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(2836.5123281833153, 2836.5123281833153, dateTitle0, rectangleAnchor0);
      double double0 = xYTitleAnnotation0.getX();
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(2836.5123281833153, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(2836.5123281833153, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1058.279081098), 1178.332604495092);
      NumberAxis numberAxis0 = new NumberAxis();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale0, numberAxis0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-1058.279081098), (-1058.279081098), paintScaleLegend0, rectangleAnchor0);
      double double0 = xYTitleAnnotation0.getX();
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals((-1058.279081098), double0, 0.01);
      assertEquals((-1058.279081098), xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      compositeTitle0.visible = false;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1.0F, 10, compositeTitle0);
      xYTitleAnnotation0.getTitle();
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(10.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYTitleAnnotation0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      dateTitle0.setWidth(834.933544);
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(834.933544, 834.933544, dateTitle0);
      xYTitleAnnotation0.getTitle();
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(834.933544, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(834.933544, xYTitleAnnotation0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("g1$KjDr", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0, true);
      TextTitle textTitle0 = jFreeChart0.getTitle();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      textTitle0.setHeight(1221.1);
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, textTitle0, rectangleAnchor0);
      xYTitleAnnotation0.getTitle();
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("Sylvain Vieujot");
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, textTitle0);
      textTitle0.setPadding(0.0, 0.0, 0.0, (-1260.80094));
      xYTitleAnnotation0.getTitle();
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-342.4865659), 0.0, textTitle0);
      textTitle0.setPadding((-342.4865659), 0.0, 0.0, 0.0);
      xYTitleAnnotation0.getTitle();
      assertEquals((-342.4865659), xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LegendTitle legendTitle0 = new LegendTitle(stackedAreaRenderer0);
      BlockContainer blockContainer0 = legendTitle0.getItemContainer();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, (-1234.052), compositeTitle0);
      xYTitleAnnotation0.setMaxWidth(1953.976573292);
      double double0 = xYTitleAnnotation0.getMaxWidth();
      assertEquals(1953.976573292, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-1.0), (-463.762050713), dateTitle0);
      xYTitleAnnotation0.setMaxWidth((-463.762050713));
      double double0 = xYTitleAnnotation0.getMaxWidth();
      assertEquals((-463.762050713), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(834.933544, 834.933544, dateTitle0);
      xYTitleAnnotation0.setMaxHeight(834.933544);
      double double0 = xYTitleAnnotation0.getMaxHeight();
      assertEquals(834.933544, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("Sylvain Vieujot");
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-0.5320127967709368), (-0.5320127967709368), textTitle0);
      xYTitleAnnotation0.setMaxHeight((-0.5320127967709368));
      double double0 = xYTitleAnnotation0.getMaxHeight();
      assertEquals((-0.5320127967709368), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LegendTitle legendTitle0 = new LegendTitle(statisticalBarRenderer0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-381.127), (-381.127), legendTitle0, rectangleAnchor0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) statisticalBarRenderer0.ZERO, 0.2, (-381.127), 973);
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        xYTitleAnnotation0.draw((Graphics2D) null, combinedDomainXYPlot0, rectangle2D_Double0, numberAxis0, numberAxis0, 973, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-381.127).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYTitleAnnotation xYTitleAnnotation0 = null;
      try {
        xYTitleAnnotation0 = new XYTitleAnnotation((-4484.83), (-4484.83), (Title) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'title' argument.
         //
         verifyException("org.jfree.chart.annotations.XYTitleAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-4319.2918), (-491.152418583196), dateTitle0, rectangleAnchor0);
      XYTitleAnnotation xYTitleAnnotation1 = (XYTitleAnnotation)xYTitleAnnotation0.clone();
      boolean boolean0 = xYTitleAnnotation0.equals(xYTitleAnnotation1);
      assertEquals(0.0, xYTitleAnnotation1.getMaxHeight(), 0.01);
      assertEquals((-4319.2918), xYTitleAnnotation1.getX(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, xYTitleAnnotation1.getMaxWidth(), 0.01);
      assertEquals((-491.152418583196), xYTitleAnnotation1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("0^|JPsJs`0{:f");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(Integer.MAX_VALUE);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      TextTitle textTitle0 = new TextTitle("0^|JPsJs`0{:f", subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, subCategoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1.0, 1.0, textTitle0, rectangleAnchor0);
      XYTitleAnnotation xYTitleAnnotation1 = new XYTitleAnnotation(1.0F, 774.2394997, textTitle0);
      boolean boolean0 = xYTitleAnnotation0.equals(xYTitleAnnotation1);
      assertEquals(1.0, xYTitleAnnotation1.getX(), 0.01);
      assertEquals(774.2394997, xYTitleAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation1.getMaxHeight(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYTitleAnnotation1.getMaxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1.7976931348623157E308, 1.7976931348623157E308, compositeTitle0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("i#$]Rf|i~'", combinedDomainCategoryPlot0);
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      XYTitleAnnotation xYTitleAnnotation1 = new XYTitleAnnotation(1323.3978312653, (-3690.944590392), compositeTitle0, rectangleAnchor0);
      boolean boolean0 = xYTitleAnnotation0.equals(xYTitleAnnotation1);
      assertEquals((-3690.944590392), xYTitleAnnotation1.getY(), 0.01);
      assertEquals(1323.3978312653, xYTitleAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation1.getMaxHeight(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYTitleAnnotation1.getMaxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("0^|JPsJs`0{:f");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(Integer.MAX_VALUE);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      TextTitle textTitle0 = new TextTitle("0^|JPsJs`0{:f", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, subCategoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1.0, 1.0, textTitle0, rectangleAnchor0);
      XYTitleAnnotation xYTitleAnnotation1 = new XYTitleAnnotation(1.0F, 1.0, textTitle0);
      boolean boolean0 = xYTitleAnnotation0.equals(xYTitleAnnotation1);
      assertEquals(0.0, xYTitleAnnotation1.getMaxWidth(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, xYTitleAnnotation1.getX(), 0.01);
      assertEquals(1.0, xYTitleAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation1.getMaxHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-4319.2918), (-491.152418583196), dateTitle0, rectangleAnchor0);
      boolean boolean0 = xYTitleAnnotation0.equals(xYTitleAnnotation0);
      assertEquals((-4319.2918), xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals((-491.152418583196), xYTitleAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("Sylvain Vieujot");
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, textTitle0);
      boolean boolean0 = xYTitleAnnotation0.equals(jFreeChart0);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LegendTitle legendTitle0 = new LegendTitle(statisticalBarRenderer0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation((-381.127), (-381.127), legendTitle0, rectangleAnchor0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      xYTitleAnnotation0.setMaxWidth(1796.2);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        xYTitleAnnotation0.draw((Graphics2D) null, combinedDomainXYPlot0, rectangle2D_Double0, numberAxis0, numberAxis0, 973, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BlockBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, dateTitle0, rectangleAnchor0);
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".;", dateTitle0.DEFAULT_FONT, meterPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(20.469935, "Null 'title' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(1796.2, 500, 1.0F, 1323.3978312653);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYTitleAnnotation0.draw(graphics2D0, combinedRangeXYPlot0, rectangle2D0, cyclicNumberAxis0, cyclicNumberAxis0, 2108, plotRenderingInfo0);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      TextTitle textTitle0 = new TextTitle("", defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT);
      XYTitleAnnotation xYTitleAnnotation0 = null;
      try {
        xYTitleAnnotation0 = new XYTitleAnnotation((-1.0), (-1.0), textTitle0, (RectangleAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.annotations.XYTitleAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      ColumnArrangement columnArrangement0 = new ColumnArrangement();
      LegendTitle legendTitle0 = new LegendTitle(spiderWebPlot0, columnArrangement0, columnArrangement0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      XYTitleAnnotation xYTitleAnnotation0 = null;
      try {
        xYTitleAnnotation0 = new XYTitleAnnotation((-3452.12), 0.0, (Title) null, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'title' argument.
         //
         verifyException("org.jfree.chart.annotations.XYTitleAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("Sylvain Vieujot");
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, textTitle0);
      xYTitleAnnotation0.hashCode();
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, dateTitle0, rectangleAnchor0);
      xYTitleAnnotation0.getTitleAnchor();
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, dateTitle0, rectangleAnchor0);
      double double0 = xYTitleAnnotation0.getY();
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CenterArrangement centerArrangement0 = new CenterArrangement();
      LegendTitle legendTitle0 = new LegendTitle(barRenderer0, centerArrangement0, centerArrangement0);
      BlockContainer blockContainer0 = legendTitle0.getItemContainer();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      Crosshair crosshair0 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1386.6747, 0.0, compositeTitle0, rectangleAnchor0);
      double double0 = xYTitleAnnotation0.getMaxHeight();
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(1386.6747, xYTitleAnnotation0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("Sylvain Vieujot");
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 0.0, textTitle0);
      double double0 = xYTitleAnnotation0.getX();
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CenterArrangement centerArrangement0 = new CenterArrangement();
      LegendTitle legendTitle0 = new LegendTitle(barRenderer0, centerArrangement0, centerArrangement0);
      BlockContainer blockContainer0 = legendTitle0.getItemContainer();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      Crosshair crosshair0 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1386.6747, 0.0, compositeTitle0, rectangleAnchor0);
      xYTitleAnnotation0.getCoordinateType();
      assertEquals(1386.6747, xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxWidth(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CenterArrangement centerArrangement0 = new CenterArrangement();
      LegendTitle legendTitle0 = new LegendTitle(barRenderer0, centerArrangement0, centerArrangement0);
      BlockContainer blockContainer0 = legendTitle0.getItemContainer();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      Crosshair crosshair0 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1386.6747, 0.0, compositeTitle0, rectangleAnchor0);
      double double0 = xYTitleAnnotation0.getMaxWidth();
      assertEquals(0.0, xYTitleAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYTitleAnnotation0.getMaxHeight(), 0.01);
      assertEquals(1386.6747, xYTitleAnnotation0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }
}
