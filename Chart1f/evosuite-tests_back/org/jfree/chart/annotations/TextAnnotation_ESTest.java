/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:00:37 GMT 2022
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.text.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TextAnnotation_ESTest extends TextAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("");
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_RIGHT;
      textAnnotation0.setTextAnchor(textAnchor0);
      textAnnotation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("");
      textAnnotation0.setRotationAngle((-1769.148421626));
      textAnnotation0.hashCode();
      assertEquals((-1769.148421626), textAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("");
      Color color0 = DebugGraphics.flashColor();
      textAnnotation0.setPaint(color0);
      textAnnotation0.hashCode();
      assertEquals(0.0, textAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("md", "md", 2154.4093278);
      Font font0 = Axis.DEFAULT_TICK_LABEL_FONT;
      categoryTextAnnotation0.setFont(font0);
      categoryTextAnnotation0.hashCode();
      assertEquals(0.0, categoryTextAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("}On]eQr-7xZwgd", "}On]eQr-7xZwgd", 3299.91509);
      categoryTextAnnotation0.setRotationAngle(2000.0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("}On]eQr-7xZwgd", "}On]eQr-7xZwgd", 2058.531589892399, 2.5E-8);
      categoryTextAnnotation0.equals(categoryPointerAnnotation0);
      assertEquals(2000.0, categoryTextAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (-1841.471332645935));
      Font font0 = Font.decode("");
      categoryTextAnnotation0.setFont(font0);
      CategoryTextAnnotation categoryTextAnnotation1 = (CategoryTextAnnotation)categoryTextAnnotation0.clone();
      boolean boolean0 = categoryTextAnnotation0.equals(categoryTextAnnotation1);
      assertEquals(0.0, categoryTextAnnotation1.getRotationAngle(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-3.0), 0.0);
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      categoryPointerAnnotation0.setTextAnchor(textAnchor0);
      TextAnchor textAnchor1 = categoryPointerAnnotation0.getTextAnchor();
      assertEquals("TextAnchor.CENTER_RIGHT", textAnchor1.toString());
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'text' argument.", "Null 'text' argument.", 1955.204965);
      Color color0 = (Color)SymbolAxis.DEFAULT_GRID_BAND_ALTERNATE_PAINT;
      categoryTextAnnotation0.setPaint(color0);
      Paint paint0 = categoryTextAnnotation0.getPaint();
      assertEquals(2, paint0.getTransparency());
      assertEquals(0.0, categoryTextAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("i=v`?P/O+_P", "i=v`?P/O+_P", 1412.4, 256.423);
      categoryPointerAnnotation0.getText();
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("`s+i_ZMVI4Sv*;", "`s+i_ZMVI4Sv*;", 1205.8233760821);
      categoryTextAnnotation0.setRotationAngle(356.6415764902);
      double double0 = categoryTextAnnotation0.getRotationAngle();
      assertEquals(356.6415764902, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("`s+i_ZMVI4Sv*;", "`s+i_ZMVI4Sv*;", 1205.8233760821);
      assertEquals(0.0, categoryTextAnnotation0.getRotationAngle(), 0.01);
      
      categoryTextAnnotation0.setRotationAngle((-1.0));
      double double0 = categoryTextAnnotation0.getRotationAngle();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(":nW@4gm", ":nW@4gm", 0.0);
      categoryTextAnnotation0.setRotationAnchor((TextAnchor) null);
      TextAnchor textAnchor0 = categoryTextAnnotation0.getRotationAnchor();
      assertEquals(0.0, categoryTextAnnotation0.getRotationAngle(), 0.01);
      assertNull(textAnchor0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-3.0), 0.0);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      categoryPointerAnnotation0.setFont(font0);
      Font font1 = categoryPointerAnnotation0.getFont();
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(1, font1.getStyle());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(")", ")", (-3.0));
      categoryTextAnnotation0.setRotationAnchor((TextAnchor) null);
      // Undeclared exception!
      try { 
        categoryTextAnnotation0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextAnnotation textAnnotation0 = null;
      try {
        textAnnotation0 = new TextAnnotation((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("q#8.WJ9Jl4W+xfORzx/");
      textAnnotation0.setRotationAngle((-1355.0));
      TextAnnotation textAnnotation1 = new TextAnnotation("q#8.WJ9Jl4W+xfORzx/");
      boolean boolean0 = textAnnotation0.equals(textAnnotation1);
      assertEquals((-1355.0), textAnnotation0.getRotationAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.annotations.TextAnnotation", "org.jfree.chart.annotations.TextAnnotation", 0.0, 0.0);
      boolean boolean0 = textAnnotation0.equals(categoryPointerAnnotation0);
      assertFalse(boolean0);
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("M#Vf");
      TextAnnotation textAnnotation1 = (TextAnnotation)textAnnotation0.clone();
      boolean boolean0 = textAnnotation0.equals(textAnnotation1);
      assertTrue(boolean0);
      assertEquals(0.0, textAnnotation1.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'text' argument.", "Null 'text' argument.", 1955.204965);
      categoryTextAnnotation0.setRotationAngle((-1.0));
      CategoryTextAnnotation categoryTextAnnotation1 = new CategoryTextAnnotation("ug", "Null 'text' argument.", 0.0);
      categoryTextAnnotation1.setText("Null 'text' argument.");
      categoryTextAnnotation0.equals(categoryTextAnnotation1);
      assertEquals(0.0, categoryTextAnnotation1.getRotationAngle(), 0.01);
      assertEquals((-1.0), categoryTextAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Vl5\"!U7Zs~P)UZ06", "Vl5\"!U7Zs~P)UZ06", (-4806.6858286));
      Object object0 = categoryTextAnnotation0.clone();
      assertTrue(object0.equals((Object)categoryTextAnnotation0));
      
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      categoryTextAnnotation0.setRotationAnchor(textAnchor0);
      boolean boolean0 = categoryTextAnnotation0.equals(object0);
      assertFalse(object0.equals((Object)categoryTextAnnotation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-824.9181487517318), 72.0);
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_CENTER;
      categoryPointerAnnotation0.setTextAnchor(textAnchor0);
      CategoryPointerAnnotation categoryPointerAnnotation1 = new CategoryPointerAnnotation("", "", 406.93420278, (-566.71));
      categoryPointerAnnotation0.equals(categoryPointerAnnotation1);
      assertEquals(0.0, categoryPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'text' argument.", "Null 'text' argument.", 1955.204965);
      Color color0 = (Color)SymbolAxis.DEFAULT_GRID_BAND_ALTERNATE_PAINT;
      categoryTextAnnotation0.setPaint(color0);
      CategoryTextAnnotation categoryTextAnnotation1 = new CategoryTextAnnotation("ug", "Null 'text' argument.", 0.0);
      categoryTextAnnotation1.setText("Null 'text' argument.");
      categoryTextAnnotation0.equals(categoryTextAnnotation1);
      assertEquals(0.0, categoryTextAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, categoryTextAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("Null 'anchor' argument.");
      boolean boolean0 = textAnnotation0.equals("Null 'anchor' argument.");
      assertEquals(0.0, textAnnotation0.getRotationAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("M#Vf");
      boolean boolean0 = textAnnotation0.equals(textAnnotation0);
      assertTrue(boolean0);
      assertEquals(0.0, textAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("Null 'anchor' argument.");
      // Undeclared exception!
      try { 
        textAnnotation0.setTextAnchor((TextAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (-1841.471332645935));
      // Undeclared exception!
      try { 
        categoryTextAnnotation0.setPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Requires 'size' > 0.", "Requires 'size' > 0.", 0.0);
      // Undeclared exception!
      try { 
        categoryTextAnnotation0.setFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-3.0), 0.0);
      // Undeclared exception!
      try { 
        categoryPointerAnnotation0.setText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-3.0), 0.0);
      categoryPointerAnnotation0.getText();
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-3.0), 0.0);
      categoryPointerAnnotation0.getFont();
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-3.0), 0.0);
      double double0 = categoryPointerAnnotation0.getRotationAngle();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (-3.0), 0.0);
      categoryPointerAnnotation0.getRotationAnchor();
      assertEquals(0.0, categoryPointerAnnotation0.getRotationAngle(), 0.01);
  }
}
