/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 02:05:33 GMT 2022
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ui.BasicProjectInfo;
import org.jfree.chart.ui.Library;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicProjectInfo_ESTest extends BasicProjectInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("", "org.jfree.chart.ui.Library", "org.jfree.chart.ui.Library", "org.jfree.chart.ui.Library", "");
      String string0 = basicProjectInfo0.getCopyright();
      assertEquals("org.jfree.chart.ui.Library", basicProjectInfo0.getVersion());
      assertEquals("org.jfree.chart.ui.Library", basicProjectInfo0.getInfo());
      assertEquals("org.jfree.chart.ui.Library", string0);
      assertEquals("", basicProjectInfo0.getLicenceName());
      assertEquals("", basicProjectInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo((String) null, (String) null, (String) null, "", "t3=.qD:4Z2e6.");
      String string0 = basicProjectInfo0.getCopyright();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo();
      basicProjectInfo0.setName("l_)wM6juGiVY8jo!>oI");
      assertNull(basicProjectInfo0.getInfo());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "_fA+Y{Q_y");
      assertEquals("_fA+Y{Q_y", basicProjectInfo0.getLicenceName());
      
      basicProjectInfo0.setLicenceName("_fA+Y{Q_y");
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getCopyright());
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getInfo());
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getName());
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getVersion());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("Zy+ZO[aH$[lKl#", "Zy+ZO[aH$[lKl#", ";@EU+ IXmM>R", "Zy+ZO[aH$[lKl#");
      basicProjectInfo0.addLibrary(basicProjectInfo0);
      basicProjectInfo0.getLibraries();
      assertEquals("Zy+ZO[aH$[lKl#", basicProjectInfo0.getName());
      assertEquals("Zy+ZO[aH$[lKl#", basicProjectInfo0.getVersion());
      assertEquals("Zy+ZO[aH$[lKl#", basicProjectInfo0.getInfo());
      assertEquals(";@EU+ IXmM>R", basicProjectInfo0.getLicenceName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("", "", "org.jfree.chart.ui.Library", "", "");
      assertEquals("", basicProjectInfo0.getCopyright());
      
      basicProjectInfo0.setCopyright("org.jfree.chart.ui.Library");
      assertEquals("org.jfree.chart.ui.Library", basicProjectInfo0.getInfo());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "_fA+Y{Q_y");
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getInfo());
      
      basicProjectInfo0.setInfo("_fA+Y{Q_y");
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "_fA+Y{Q_y");
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getVersion());
      
      basicProjectInfo0.setVersion("org.jfree.chart.ui.BasicProjectInfo");
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getInfo());
      assertEquals("_fA+Y{Q_y", basicProjectInfo0.getLicenceName());
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getCopyright());
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "_fA+Y{Q_y");
      // Undeclared exception!
      try { 
        basicProjectInfo0.addOptionalLibrary((Library) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Library must be given.
         //
         verifyException("org.jfree.chart.ui.BasicProjectInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo();
      // Undeclared exception!
      try { 
        basicProjectInfo0.addOptionalLibrary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Library classname must be given.
         //
         verifyException("org.jfree.chart.ui.BasicProjectInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo();
      // Undeclared exception!
      try { 
        basicProjectInfo0.addLibrary((Library) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.BasicProjectInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo();
      basicProjectInfo0.addOptionalLibrary((Library) basicProjectInfo0);
      Library[] libraryArray0 = basicProjectInfo0.getOptionalLibraries();
      assertEquals(1, libraryArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo();
      basicProjectInfo0.addOptionalLibrary("org.jfree.chart.ui.Library");
      Library[] libraryArray0 = basicProjectInfo0.getOptionalLibraries();
      assertEquals(1, libraryArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo();
      Library[] libraryArray0 = basicProjectInfo0.getLibraries();
      assertEquals(0, libraryArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo("org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "org.jfree.chart.ui.BasicProjectInfo", "_fA+Y{Q_y");
      basicProjectInfo0.addOptionalLibrary("LibraryClass must not be null.");
      Library[] libraryArray0 = basicProjectInfo0.getOptionalLibraries();
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getVersion());
      assertEquals("_fA+Y{Q_y", basicProjectInfo0.getLicenceName());
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getCopyright());
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getInfo());
      assertEquals(0, libraryArray0.length);
      assertEquals("org.jfree.chart.ui.BasicProjectInfo", basicProjectInfo0.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicProjectInfo basicProjectInfo0 = new BasicProjectInfo();
      String string0 = basicProjectInfo0.getCopyright();
      assertNull(string0);
  }
}
