/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:30:16 GMT 2022
 */

package org.jfree.chart.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.annotations.Annotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AnnotationChangeEvent_ESTest extends AnnotationChangeEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("2hpe", "2hpe", 139.8831213512555, 0.0025);
      AnnotationChangeEvent annotationChangeEvent0 = new AnnotationChangeEvent(object0, categoryPointerAnnotation0);
      Annotation annotation0 = annotationChangeEvent0.getAnnotation();
      assertSame(annotation0, categoryPointerAnnotation0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("E FLiG", "E FLiG", (-1.0));
      AnnotationChangeEvent annotationChangeEvent0 = null;
      try {
        annotationChangeEvent0 = new AnnotationChangeEvent((Object) null, categoryTextAnnotation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      AnnotationChangeEvent annotationChangeEvent0 = new AnnotationChangeEvent(object0, (Annotation) null);
      Annotation annotation0 = annotationChangeEvent0.getAnnotation();
      assertNull(annotation0);
  }
}
