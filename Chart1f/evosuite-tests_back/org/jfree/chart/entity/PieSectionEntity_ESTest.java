/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 04:04:31 GMT 2022
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.sql.Connection;
import java.time.chrono.MinguoEra;
import javax.swing.JInternalFrame;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.entity.PieSectionEntity;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.pie.PieDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieSectionEntity_ESTest extends PieSectionEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 0, 0, 0, (String) null, "q/\"(</Qp");
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 0, 689, 2690, "bin width", (String) null);
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertEquals(0, pieSectionEntity1.getPieIndex());
      assertEquals(689, pieSectionEntity1.getSectionIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 2958465, 0, 0, (String) null, "q/\"(</Qp");
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 0, 689, 2690, "bin width", (String) null);
      boolean boolean0 = pieSectionEntity1.equals(pieSectionEntity0);
      assertEquals(689, pieSectionEntity1.getSectionIndex());
      assertEquals(2958465, pieSectionEntity0.getPieIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, (PieDataset) null, 1, 0, (Comparable) null, "61hZH", "40mP#X&OTA2l13#");
      pieSectionEntity0.getSectionKey();
      assertEquals(1, pieSectionEntity0.getPieIndex());
      assertEquals(0, pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, defaultKeyedValuesDataset0, 0, 32, 0, "SerialDate.monthCodeToString: month outside valid range.", "SerialDate.monthCodeToString: month outside valid range.");
      int int0 = pieSectionEntity0.getSectionIndex();
      assertEquals(0, pieSectionEntity0.getPieIndex());
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, defaultKeyedValuesDataset0, 0, 32, 0, "SerialDate.monthCodeToString: month outside valid range.", "SerialDate.monthCodeToString: month outside valid range.");
      pieSectionEntity0.setSectionIndex((-1));
      int int0 = pieSectionEntity0.getSectionIndex();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle2D_Double0, jDBCPieDataset0, 0, 0, 0.0, "", "Null 'shape' argument.");
      int int0 = pieSectionEntity0.getPieIndex();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1.0), 2929.9877571, 2929.9877571, (-1.0));
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle2D_Double0, defaultPieDataset0, (-1838), (-1838), (-1.0), "org.jfree.data.time.Month", "org.jfree.data.time.Month");
      int int0 = pieSectionEntity0.getPieIndex();
      assertEquals((-1838), pieSectionEntity0.getSectionIndex());
      assertEquals((-1838), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(defaultCaret0, (PieDataset) null, 0, 0, 0, (String) null, (String) null);
      pieSectionEntity0.getDataset();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, (-3624), (-3624), (Comparable) null, "", "ao,+2jBJ[, dOI");
      // Undeclared exception!
      try { 
        pieSectionEntity0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[][] doubleArray0 = new double[7][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, (-318));
      PieSectionEntity pieSectionEntity0 = null;
      try {
        pieSectionEntity0 = new PieSectionEntity((Shape) null, categoryToPieDataset0, (-318), (-318), (-3724.1206), ";b\":pt6lEaLL9}@2", ";b\":pt6lEaLL9}@2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, (PieDataset) null, 0, 0, 0, "org.jfree.chart.entity.PieSectionEntity", "org.jfree.chart.entity.PieSectionEntity");
      PieSectionEntity pieSectionEntity1 = (PieSectionEntity)pieSectionEntity0.clone();
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertTrue(boolean0);
      assertEquals(0, pieSectionEntity1.getPieIndex());
      assertEquals(0, pieSectionEntity1.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(1596.8517F, 1596.8517F, 0.0F, 1596.8517F);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(line2D_Float0, jDBCPieDataset0, 3080, 3080, 1596.8517F, "G'J}<M _", "G'J}<M _");
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(line2D_Float0, jDBCPieDataset0, 3080, 3080, 0.0F, "PieSection: 3080, 3080(java.lang.Float@0000000007)", "G'J}<M _");
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertEquals(3080, pieSectionEntity1.getPieIndex());
      assertFalse(boolean0);
      assertEquals(3080, pieSectionEntity1.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(1596.8517F, 1596.8517F, 1596.8517F, 1596.8517F);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(line2D_Float0, jDBCPieDataset0, 3053, 3053, 1596.8517F, "G'J}<M _", "G'J}<M _");
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(line2D_Float0, jDBCPieDataset0, 254, 254, 1596.8517F, "PieSection: 3053, 3053(java.lang.Float@0000000007)", "G'J}<M _");
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertEquals(254, pieSectionEntity1.getSectionIndex());
      assertEquals(254, pieSectionEntity1.getPieIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(1596.8517F, 1596.8517F, 0.0F, 1596.8517F);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(jDBCPieDataset0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(line2D_Float0, defaultPieDataset0, 3068, 3068, 1596.8517F, "G'J}<M _", "G'J}<M _");
      Comparable comparable0 = pieSectionEntity0.getSectionKey();
      jDBCPieDataset0.setValue((Comparable) comparable0, (Number) 1596.8517F);
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(line2D_Float0, jDBCPieDataset0, 3068, 3068, 0.0F, "PieSection: 3068, 3068(java.lang.Float@0000000021)", "G'J}<M _");
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertEquals(3068, pieSectionEntity1.getPieIndex());
      assertFalse(boolean0);
      assertEquals(3068, pieSectionEntity1.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 0, 0, 0, (String) null, (String) null);
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 0, 689, 0, "bin width", (String) null);
      boolean boolean0 = pieSectionEntity1.equals(pieSectionEntity0);
      assertEquals(0, pieSectionEntity1.getPieIndex());
      assertEquals(689, pieSectionEntity1.getSectionIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, (PieDataset) null, 0, 0, 0, "org.jfree.chart.entity.PieSectionEntity", "org.jfree.chart.entity.PieSectionEntity");
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity0);
      assertEquals(0, pieSectionEntity0.getPieIndex());
      assertTrue(boolean0);
      assertEquals(0, pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, (-3624), (-3624), (Comparable) null, "", "ao,+2jBJ[, dOI");
      MinguoEra minguoEra0 = MinguoEra.BEFORE_ROC;
      boolean boolean0 = pieSectionEntity0.equals(minguoEra0);
      assertEquals((-3624), pieSectionEntity0.getPieIndex());
      assertEquals((-3624), pieSectionEntity0.getSectionIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 0, 0, 0, (String) null, (String) null);
      pieSectionEntity0.getDataset();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, defaultKeyedValuesDataset0, 0, 0, 0, "91Et>DrYJ5`Kj", "91Et>DrYJ5`Kj");
      pieSectionEntity0.setDataset(defaultKeyedValuesDataset0);
      assertEquals(0, pieSectionEntity0.getPieIndex());
      assertEquals(0, pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(jDBCCategoryDataset0, tableOrder0, 1);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle2D_Float0, categoryToPieDataset0, 1, 1, 0.0F, "Null 'period' argument.", "Null 'period' argument.");
      int int0 = pieSectionEntity0.getPieIndex();
      assertEquals(1, int0);
      assertEquals(1, pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(jDBCCategoryDataset0, tableOrder0, 1);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle2D_Float0, categoryToPieDataset0, 1, 1, 0.0F, "Null 'period' argument.", "Null 'period' argument.");
      pieSectionEntity0.hashCode();
      assertEquals(1, pieSectionEntity0.getPieIndex());
      assertEquals(1, pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, defaultKeyedValuesDataset0, 0, 0, 0, "91Et>DrYJ5`Kj", "91Et>DrYJ5`Kj");
      int int0 = pieSectionEntity0.getSectionIndex();
      assertEquals(0, pieSectionEntity0.getPieIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(jDBCCategoryDataset0, tableOrder0, 1);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle2D_Float0, categoryToPieDataset0, 1, 1, 0.0F, "Null 'period' argument.", "Null 'period' argument.");
      pieSectionEntity0.setPieIndex(1);
      assertEquals(1, pieSectionEntity0.getPieIndex());
      assertEquals(1, pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 0, 0, 0, (String) null, (String) null);
      pieSectionEntity0.setSectionKey(0);
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(polygon0, defaultKeyedValuesDataset0, 0, 0, 0, "91Et>DrYJ5`Kj", "91Et>DrYJ5`Kj");
      pieSectionEntity0.toString();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, pieSectionEntity0.getPieIndex());
  }
}
