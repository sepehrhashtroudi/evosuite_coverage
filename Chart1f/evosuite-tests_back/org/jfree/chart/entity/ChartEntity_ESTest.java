/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 04:03:41 GMT 2022
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.StandardURLTagFragmentGenerator;
import org.jfree.chart.imagemap.URLTagFragmentGenerator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartEntity_ESTest extends ChartEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-3715.17464), (-3715.17464), (-2565.85727259), (-3715.17464));
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0);
      String string0 = chartEntity0.getShapeCoords();
      assertEquals("-3715,-3715,-6280,-7430", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double((-1.0), (-6826.187), (-1.0), (-6826.187));
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0, "+tQ+yTm/mOI8vi:om)");
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      String string0 = chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
      assertEquals("<area shape=\"rect\" coords=\"-1,-6826,0,-6825\" onMouseOver=\"return overlib('+tQ+yTm/mOI8vi:om)');\" onMouseOut=\"return nd();\" nohref=\"nohref\"/>", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      ChartEntity chartEntity0 = new ChartEntity(line2D_Double0, "");
      String string0 = chartEntity0.getURLText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      String string0 = chartEntity0.getToolTipText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1.0), 0.0, (-1504.0), 0.0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0);
      chartEntity0.setToolTipText("");
      String string0 = chartEntity0.getToolTipText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      ChartEntity chartEntity0 = new ChartEntity(polygon0, "SGxemj`g2;wM)f<l1~=", "SGxemj`g2;wM)f<l1~=");
      String string0 = chartEntity0.getShapeCoords();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "", "Q;kg^)");
      StandardToolTipTagFragmentGenerator standardToolTipTagFragmentGenerator0 = new StandardToolTipTagFragmentGenerator();
      // Undeclared exception!
      try { 
        chartEntity0.getImageMapAreaTag(standardToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double((-1.0), (-1.0), (-1.0), (-1935.131746495));
      ChartEntity chartEntity0 = new ChartEntity(line2D_Double0, "FzG]4Hcyo(-t", "FzG]4Hcyo(-t");
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator((String) null, 3);
      // Undeclared exception!
      try { 
        chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      polygon0.npoints = 186;
      ChartEntity chartEntity0 = new ChartEntity(polygon0, "Jq.tK[-J", "Jq.tK[-J");
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      // Undeclared exception!
      try { 
        chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null, "[+# '");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-165), 1911);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "Ho+eR!N49XFS");
      String string0 = chartEntity0.getShapeType();
      assertEquals("rect", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, ",.5un}>c>OFyy#R3", ",.5un}>c>OFyy#R3");
      String string0 = chartEntity0.getShapeType();
      assertEquals("poly", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null, "+Rl!{^voufVi8oM]", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, ",.5un}>c>OFyy#R3", ",.5un}>c>OFyy#R3");
      ChartEntity chartEntity1 = (ChartEntity)chartEntity0.clone();
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      
      chartEntity1.setURLText("poly");
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertFalse(chartEntity1.equals((Object)chartEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 236.251, 0.0, 236.251);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "");
      Object object0 = chartEntity0.clone();
      boolean boolean0 = chartEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0, "<&8Sfk1", "");
      rectangle2D0.setRect((double) 0.0F, (double) 0.0F, (double) 0.0F, (-1.0));
      chartEntity0.setArea(rectangle2D_Float0);
      ChartEntity chartEntity1 = new ChartEntity(rectangle2D0);
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertEquals("<&8Sfk1", chartEntity0.getToolTipText());
      assertFalse(boolean0);
      assertEquals("", chartEntity0.getURLText());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 236.251, 0.0, 236.251);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "");
      boolean boolean0 = chartEntity0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 236.251, 0.0, 236.251);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "");
      boolean boolean0 = chartEntity0.equals(chartEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Float0, "<&8Sfk1", "");
      ChartEntity chartEntity1 = new ChartEntity(rectangle2D_Float0);
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertFalse(boolean0);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("<&8Sfk1", chartEntity0.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0, 0, 0, 0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      chartEntity0.setURLText("E");
      String string0 = chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertEquals("<area shape=\"rect\" coords=\"0,0,1,1\" href=\"E\" alt=\"\"/>", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 236.251, 0.0, 236.251);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "");
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      String string0 = chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Dimension dimension0 = new Dimension(228, 3477);
      Rectangle rectangle0 = new Rectangle(dimension0);
      StandardToolTipTagFragmentGenerator standardToolTipTagFragmentGenerator0 = new StandardToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, ";");
      String string0 = chartEntity0.getImageMapAreaTag(standardToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertEquals("<area shape=\"rect\" coords=\"0,0,228,3477\" title=\";\" alt=\"\" nohref=\"nohref\"/>", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Float0, "<&8Sfk1", "");
      StandardToolTipTagFragmentGenerator standardToolTipTagFragmentGenerator0 = new StandardToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      String string0 = chartEntity0.getImageMapAreaTag(standardToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertEquals("<area shape=\"rect\" coords=\"0,0,1,1\" title=\"&lt;&amp;8Sfk1\" alt=\"\" nohref=\"nohref\"/>", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Point2D.Float point2D_Float0 = new Point2D.Float(1.0F, (-1933.201F));
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D_Float0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, " nohref=\"nohref\"", "Null shape. argume>t.");
      // Undeclared exception!
      try { 
        chartEntity0.setArea((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Point2D.Float point2D_Float0 = new Point2D.Float(1.0F, (-1933.201F));
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D_Float0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, " nohref=\"nohref\"", "Null shape. argume>t.");
      assertEquals("Null shape. argume>t.", chartEntity0.getURLText());
      
      chartEntity0.setURLText("");
      chartEntity0.getURLText();
      assertEquals(" nohref=\"nohref\"", chartEntity0.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, ",.5un}>c>OFyy#R3", ",.5un}>c>OFyy#R3");
      String string0 = chartEntity0.getToolTipText();
      assertEquals(",.5un}>c>OFyy#R3", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Point2D.Float point2D_Float0 = new Point2D.Float(1.0F, (-1933.201F));
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D_Float0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, " nohref=\"nohref\"", "Null shape. argume>t.");
      chartEntity0.getArea();
      assertEquals(" nohref=\"nohref\"", chartEntity0.getToolTipText());
      assertEquals("Null shape. argume>t.", chartEntity0.getURLText());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, ",.5un}>c>OFyy#R3", ",.5un}>c>OFyy#R3");
      chartEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, ",.5un}>c>OFyy#R3", ",.5un}>c>OFyy#R3");
      String string0 = chartEntity0.toString();
      assertEquals("ChartEntity: tooltip = ,.5un}>c>OFyy#R3", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Point2D.Float point2D_Float0 = new Point2D.Float(1.0F, (-1933.201F));
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D_Float0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, " nohref=\"nohref\"", "Null shape. argume>t.");
      String string0 = chartEntity0.getURLText();
      assertEquals(" nohref=\"nohref\"", chartEntity0.getToolTipText());
      assertEquals("Null shape. argume>t.", string0);
  }
}
