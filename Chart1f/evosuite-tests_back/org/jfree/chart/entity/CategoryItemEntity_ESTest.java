/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 04:00:32 GMT 2022
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.entity.CategoryItemEntity;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryItemEntity_ESTest extends CategoryItemEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 0.0F, (-1446.1285F));
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D_Float0, "]FfniX$yi2", (String) null, defaultStatisticalCategoryDataset0, (Comparable) null, 0.0F);
      Comparable comparable0 = categoryItemEntity0.getRowKey();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset1 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset1.addValue((double) (-1.0F), (Comparable) "", (Comparable) "CategoryItemEntity: rowKey=-1.0, columnKey=-1.0, dataset=org.jfree.data.general.DefaultKeyedValues2DDataset@367");
      CategoryItemEntity categoryItemEntity1 = (CategoryItemEntity)categoryItemEntity0.clone();
      assertTrue(categoryItemEntity1.equals((Object)categoryItemEntity0));
      
      categoryItemEntity1.setDataset(defaultKeyedValues2DDataset1);
      boolean boolean0 = categoryItemEntity0.equals(categoryItemEntity1);
      assertFalse(categoryItemEntity1.equals((Object)categoryItemEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultMultiValueCategoryDataset0, 2553, 2553);
      Line2D.Double line2D_Double0 = new Line2D.Double(2553, 2553, 2553, 2553);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Double0, (String) null, (String) null, slidingCategoryDataset0, 2553, 2553.0);
      CategoryItemEntity categoryItemEntity1 = new CategoryItemEntity(line2D_Double0, (String) null, (String) null, slidingCategoryDataset0, (Comparable) null, 2553);
      boolean boolean0 = categoryItemEntity0.equals(categoryItemEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      Object object0 = categoryItemEntity0.clone();
      boolean boolean0 = categoryItemEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      boolean boolean0 = categoryItemEntity0.equals(categoryItemEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      boolean boolean0 = categoryItemEntity0.equals(defaultKeyedValues2DDataset0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Number[][] numberArray0 = new Number[3][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D_Double0, "e%3&VS'Z16w", "e%3&VS'Z16w", defaultIntervalCategoryDataset0, "e%3&VS'Z16w", 0.0);
      // Undeclared exception!
      try { 
        categoryItemEntity0.setDataset((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.entity.CategoryItemEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryItemEntity categoryItemEntity0 = null;
      try {
        categoryItemEntity0 = new CategoryItemEntity(rectangle2D_Double0, "U3KEe", "U3KEe", (CategoryDataset) null, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.entity.CategoryItemEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 0.0F, 242.0F);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 1358, 1358);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, (String) null, (String) null, slidingCategoryDataset0, 0.0F, 0.0F);
      categoryItemEntity0.setColumnKey((Comparable) null);
      Comparable comparable0 = categoryItemEntity0.getColumnKey();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      Comparable comparable0 = categoryItemEntity0.getRowKey();
      assertEquals((-1.0F), comparable0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 1358, 1358);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, (String) null, (String) null, slidingCategoryDataset0, 0.0F, 0.0F);
      categoryItemEntity0.setRowKey(0.0F);
      assertNull(categoryItemEntity0.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      CategoryDataset categoryDataset0 = categoryItemEntity0.getDataset();
      assertSame(defaultKeyedValues2DDataset0, categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      String string0 = categoryItemEntity0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(line2D_Float0, "", "", defaultKeyedValues2DDataset0, (-1.0F), (-1.0F));
      Comparable comparable0 = categoryItemEntity0.getColumnKey();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1, (-2000));
      CategoryItemEntity categoryItemEntity1 = new CategoryItemEntity(line2D_Float0, "CategoryItemEntity: rowKey=-1.0, columnKey=-1.0, dataset=org.jfree.data.general.DefaultKeyedValues2DDataset@367", "CategoryItemEntity: rowKey=-1.0, columnKey=-1.0, dataset=org.jfree.data.general.DefaultKeyedValues2DDataset@367", slidingGanttCategoryDataset0, comparable0, "-1,-1,-1,-1");
      boolean boolean0 = categoryItemEntity0.equals(categoryItemEntity1);
      assertFalse(boolean0);
  }
}
