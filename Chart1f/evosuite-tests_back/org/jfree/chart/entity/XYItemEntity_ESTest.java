/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:56:56 GMT 2022
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.sql.Connection;
import javax.swing.JTable;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.entity.XYItemEntity;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeSeriesTableModel;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYItemEntity_ESTest extends XYItemEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(0, "Key not found: ", "");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYItemEntity xYItemEntity0 = new XYItemEntity(defaultCaret0, timePeriodValuesCollection0, 0, 763, "Key not found: ", "Cannot parse string.");
      XYItemEntity xYItemEntity1 = (XYItemEntity)xYItemEntity0.clone();
      assertEquals(763, xYItemEntity1.getItem());
      
      xYItemEntity1.setItem(0);
      boolean boolean0 = xYItemEntity1.equals(xYItemEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      XYItemEntity xYItemEntity0 = new XYItemEntity(line2D_Float0, (XYDataset) null, 1, 2740, "org.jfree.chart.entity.XYItemEntity", "org.jfree.chart.entity.XYItemEntity");
      Object object0 = xYItemEntity0.clone();
      assertEquals(1, xYItemEntity0.getSeriesIndex());
      
      xYItemEntity0.setSeriesIndex(2740);
      boolean boolean0 = xYItemEntity0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = defaultCaret0.getFrame();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle2D0, timePeriodValuesCollection0, 152, 0, "", "AsYB_mroMt_]");
      assertEquals(152, xYItemEntity0.getSeriesIndex());
      
      xYItemEntity0.setSeriesIndex(0);
      int int0 = xYItemEntity0.getSeriesIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle2D_Double0, (XYDataset) null, (-1), (-1810), ", item = ", "org.jfree.data.time.TimePeriodFormatException");
      int int0 = xYItemEntity0.getSeriesIndex();
      assertEquals((-1), int0);
      assertEquals((-1810), xYItemEntity0.getItem());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(0.0, Double.NEGATIVE_INFINITY);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Shape shape0 = affineTransform0.createTransformedShape(rectangle2D0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      XYItemEntity xYItemEntity0 = new XYItemEntity(shape0, jDBCXYDataset0, (-1624), 394, "#1(Yb`F", "#1(Yb`F");
      int int0 = xYItemEntity0.getItem();
      assertEquals(394, int0);
      assertEquals((-1624), xYItemEntity0.getSeriesIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = defaultCaret0.getFrame();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle2D0, timePeriodValuesCollection0, 152, 0, "", "AsYB_mroMt_]");
      xYItemEntity0.setItem((-1750));
      int int0 = xYItemEntity0.getItem();
      assertEquals((-1750), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JTable jTable0 = new JTable(3, 1);
      Rectangle rectangle0 = jTable0.getVisibleRect();
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle0, (XYDataset) null, 0, 1, (String) null, "");
      xYItemEntity0.getDataset();
      assertEquals(1, xYItemEntity0.getItem());
      assertEquals(0, xYItemEntity0.getSeriesIndex());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Year year0 = new Year(1);
      TimeSeries timeSeries0 = new TimeSeries(year0, "efC@['T", "efC@['T");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      XYItemEntity xYItemEntity0 = null;
      try {
        xYItemEntity0 = new XYItemEntity((Shape) null, timeSeriesCollection0, 9999, 1742, "efC@['T", "efC@['T");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = defaultCaret0.getFrame();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle2D0, timePeriodValuesCollection0, 152, 0, "", "AsYB_mroMt_]");
      xYItemEntity0.getDataset();
      assertEquals(0, xYItemEntity0.getItem());
      assertEquals(152, xYItemEntity0.getSeriesIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = defaultCaret0.getFrame();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle2D0, timePeriodValuesCollection0, 152, 0, "", "AsYB_mroMt_]");
      int int0 = xYItemEntity0.getItem();
      assertEquals(152, xYItemEntity0.getSeriesIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(473, (-3490), (-3490), 6);
      TimeSeries timeSeries0 = new TimeSeries(473, "}PIQ`IG)=7<Aha&x", "");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle0, timeSeriesCollection0, 473, 0, "}PIQ`IG)=7<Aha&x", "}PIQ`IG)=7<Aha&x");
      int int0 = xYItemEntity0.getSeriesIndex();
      assertEquals(473, int0);
      assertEquals(0, xYItemEntity0.getItem());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYItemEntity xYItemEntity0 = new XYItemEntity(defaultCaret0, timePeriodValuesCollection0, 0, 0, "8", "8");
      XYItemEntity xYItemEntity1 = (XYItemEntity)xYItemEntity0.clone();
      xYItemEntity1.setItem((-1183));
      boolean boolean0 = xYItemEntity0.equals(xYItemEntity1);
      assertEquals((-1183), xYItemEntity1.getItem());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYItemEntity xYItemEntity0 = new XYItemEntity(defaultCaret0, timePeriodValuesCollection0, 0, 0, "8", "8");
      XYItemEntity xYItemEntity1 = (XYItemEntity)xYItemEntity0.clone();
      boolean boolean0 = xYItemEntity0.equals(xYItemEntity1);
      assertEquals(0, xYItemEntity1.getItem());
      assertTrue(boolean0);
      assertEquals(0, xYItemEntity1.getSeriesIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(473, (-3490), (-3490), 6);
      TimeSeries timeSeries0 = new TimeSeries(473, "}PIQ`IG)=7<Aha&x", "");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle0, timeSeriesCollection0, 473, 0, "}PIQ`IG)=7<Aha&x", "}PIQ`IG)=7<Aha&x");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      XYItemEntity xYItemEntity1 = new XYItemEntity(rectangle0, jDBCXYDataset0, 473, (-2815), "=zR|Gob``R~)Bi0X", "tymY<'+=ZzvWRI8y");
      boolean boolean0 = xYItemEntity0.equals(xYItemEntity1);
      assertEquals(473, xYItemEntity1.getSeriesIndex());
      assertFalse(boolean0);
      assertEquals((-2815), xYItemEntity1.getItem());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      XYItemEntity xYItemEntity0 = new XYItemEntity(line2D_Float0, (XYDataset) null, 1, 2740, "org.jfree.chart.entity.XYItemEntity", "org.jfree.chart.entity.XYItemEntity");
      TimeSeries timeSeries0 = new TimeSeries("org.jfree.chart.entity.XYItemEntity");
      TimeSeriesTableModel timeSeriesTableModel0 = new TimeSeriesTableModel(timeSeries0);
      boolean boolean0 = xYItemEntity0.equals(timeSeriesTableModel0);
      assertEquals(1, xYItemEntity0.getSeriesIndex());
      assertFalse(boolean0);
      assertEquals(2740, xYItemEntity0.getItem());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(0, "Key Ty[ $ound5 ", "Key Ty[ $ound5 ");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYItemEntity xYItemEntity0 = new XYItemEntity(defaultCaret0, timePeriodValuesCollection0, 0, 0, "Key Ty[ $ound5 ", "Key Ty[ $ound5 ");
      boolean boolean0 = xYItemEntity0.equals(xYItemEntity0);
      assertEquals(0, xYItemEntity0.getItem());
      assertTrue(boolean0);
      assertEquals(0, xYItemEntity0.getSeriesIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      XYItemEntity xYItemEntity0 = new XYItemEntity(line2D_Float0, (XYDataset) null, 1, 1, "org.jfrez.ch=rt.entity.XYItemEntity", "org.jfrez.ch=rt.entity.XYItemEntity");
      Object object0 = xYItemEntity0.clone();
      xYItemEntity0.setSeriesIndex((-271));
      boolean boolean0 = xYItemEntity0.equals(object0);
      assertEquals((-271), xYItemEntity0.getSeriesIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(473, (-3490), (-3490), 6);
      TimeSeries timeSeries0 = new TimeSeries(473, "}PIQ`IG)=7<Aha&x", "");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      XYItemEntity xYItemEntity0 = new XYItemEntity(rectangle0, timeSeriesCollection0, 473, 0, "}PIQ`IG)=7<Aha&x", "}PIQ`IG)=7<Aha&x");
      xYItemEntity0.setDataset(timeSeriesCollection0);
      assertEquals(473, xYItemEntity0.getSeriesIndex());
      assertEquals(0, xYItemEntity0.getItem());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      XYItemEntity xYItemEntity0 = new XYItemEntity(line2D_Float0, (XYDataset) null, 1, 1, "org.jfrez.ch=rt.entity.XYItemEntity", "org.jfrez.ch=rt.entity.XYItemEntity");
      String string0 = xYItemEntity0.toString();
      assertEquals("XYItemEntity: series = 1, item = 1, dataset = null", string0);
  }
}
