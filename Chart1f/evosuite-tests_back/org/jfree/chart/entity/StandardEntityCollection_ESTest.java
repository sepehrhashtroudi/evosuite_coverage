/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:57:34 GMT 2022
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Rectangle2D;
import java.util.Collection;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardEntityCollection_ESTest extends StandardEntityCollection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(489.3302421205, 489.3302421205, 489.3302421205, 489.3302421205);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "!%;,O/3mx 3(V3", "!%;,O/3mx 3(V3");
      standardEntityCollection0.add(chartEntity0);
      standardEntityCollection0.add(chartEntity0);
      ChartEntity chartEntity1 = standardEntityCollection0.getEntity(0.0, 489.3302421205);
      assertNull(chartEntity1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(489.3302421205, 489.3302421205, 489.3302421205, 489.3302421205);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "!%;,O/3mx 3(V3", "!%;,O/3mx 3(V3");
      standardEntityCollection0.add(chartEntity0);
      int int0 = standardEntityCollection0.getEntityCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "6", "6");
      standardEntityCollection0.add(chartEntity0);
      ChartEntity chartEntity1 = standardEntityCollection0.getEntity(0);
      assertEquals("rect", chartEntity1.getShapeType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        standardEntityCollection0.getEntity(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        standardEntityCollection0.addAll((EntityCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.entity.StandardEntityCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Collection collection0 = standardEntityCollection0.getEntities();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, "6", "6");
      standardEntityCollection0.add(chartEntity0);
      standardEntityCollection0.clone();
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      boolean boolean0 = standardEntityCollection0.equals(standardEntityCollection1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      boolean boolean0 = standardEntityCollection0.equals(standardEntityCollection0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      boolean boolean0 = standardEntityCollection0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(489.3302421205, 489.3302421205, 489.3302421205, 489.3302421205);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(rectangle2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0, "!%;,O/3mx 3(V3", "!%;,O/3mx 3(V3");
      standardEntityCollection0.add(chartEntity0);
      ChartEntity chartEntity1 = standardEntityCollection0.getEntity(0.0, 489.3302421205);
      assertEquals("!%;,O/3mx 3(V3", chartEntity1.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        standardEntityCollection0.add((ChartEntity) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'entity' argument.
         //
         verifyException("org.jfree.chart.entity.StandardEntityCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Iterator iterator0 = standardEntityCollection0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      int int0 = standardEntityCollection0.getEntityCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.addAll(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        standardEntityCollection0.getEntity((-1834));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.clear();
      assertEquals(0, standardEntityCollection0.getEntityCount());
  }
}
