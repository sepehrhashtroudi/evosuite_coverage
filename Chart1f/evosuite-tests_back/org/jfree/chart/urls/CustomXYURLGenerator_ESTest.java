/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:58:19 GMT 2022
 */

package org.jfree.chart.urls;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Proxy;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JLayeredPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomXYURLGenerator_ESTest extends CustomXYURLGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      customXYURLGenerator0.addURLSeries(vector0);
      customXYURLGenerator0.addURLSeries(vector0);
      Object object0 = customXYURLGenerator0.clone();
      boolean boolean0 = customXYURLGenerator0.equals(object0);
      assertTrue(boolean0);
      assertNotSame(object0, customXYURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      CustomXYURLGenerator customXYURLGenerator1 = new CustomXYURLGenerator();
      assertTrue(customXYURLGenerator1.equals((Object)customXYURLGenerator0));
      
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Vector<String> vector0 = new Vector<String>();
      customXYURLGenerator0.addURLSeries(vector0);
      arrayList0.add(integer0);
      customXYURLGenerator1.addURLSeries(arrayList0);
      boolean boolean0 = customXYURLGenerator0.equals(customXYURLGenerator1);
      assertFalse(customXYURLGenerator1.equals((Object)customXYURLGenerator0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Stack<String> stack0 = new Stack<String>();
      Object object0 = customXYURLGenerator0.clone();
      assertTrue(object0.equals((Object)customXYURLGenerator0));
      
      customXYURLGenerator0.addURLSeries(stack0);
      boolean boolean0 = customXYURLGenerator0.equals(object0);
      assertFalse(object0.equals((Object)customXYURLGenerator0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Stack<String> stack0 = new Stack<String>();
      customXYURLGenerator0.addURLSeries(stack0);
      String string0 = customXYURLGenerator0.getURL(0, 3146);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Vector<String> vector0 = new Vector<String>();
      customXYURLGenerator0.addURLSeries(vector0);
      customXYURLGenerator0.addURLSeries(vector0);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      String string0 = customXYURLGenerator0.generateURL(timeSeriesCollection0, 2, 2);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      boolean boolean0 = customXYURLGenerator0.equals(customXYURLGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add((Integer) null);
      customXYURLGenerator0.addURLSeries(arrayList0);
      int int0 = customXYURLGenerator0.getURLCount(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("SerialDate.monthCodeToString: month outside valid range.");
      customXYURLGenerator0.addURLSeries(linkedList0);
      String string0 = customXYURLGenerator0.getURL(0, 0);
      assertEquals("SerialDate.monthCodeToString: month outside valid range.", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.offerFirst("");
      customXYURLGenerator0.addURLSeries(linkedList0);
      String string0 = customXYURLGenerator0.getURL(0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Vector<String> vector0 = new Vector<String>();
      customXYURLGenerator0.addURLSeries(vector0);
      int int0 = customXYURLGenerator0.getListCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      customXYURLGenerator0.addURLSeries(vector0);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      String string0 = customXYURLGenerator0.generateURL(timeSeriesCollection0, 0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      // Undeclared exception!
      try { 
        customXYURLGenerator0.getURLCount(1923);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1923, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      // Undeclared exception!
      try { 
        customXYURLGenerator0.getURLCount((-2334));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2334
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Stack<Proxy.Type> stack0 = new Stack<Proxy.Type>();
      Proxy.Type proxy_Type0 = Proxy.Type.DIRECT;
      stack0.add(proxy_Type0);
      customXYURLGenerator0.addURLSeries(stack0);
      stack0.add(proxy_Type0);
      customXYURLGenerator0.addURLSeries(stack0);
      // Undeclared exception!
      try { 
        customXYURLGenerator0.getURL(1, 1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      customXYURLGenerator0.addURLSeries(vector0);
      // Undeclared exception!
      try { 
        customXYURLGenerator0.getURL(0, (-2976));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Vector<CustomXYURLGenerator> vector0 = new Vector<CustomXYURLGenerator>();
      vector0.add(customXYURLGenerator0);
      customXYURLGenerator0.addURLSeries(vector0);
      // Undeclared exception!
      try { 
        customXYURLGenerator0.generateURL((XYDataset) null, 0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      LinkedList<JPopupMenu.Separator> linkedList0 = new LinkedList<JPopupMenu.Separator>();
      JPopupMenu.Separator jPopupMenu_Separator0 = new JPopupMenu.Separator();
      linkedList0.add(jPopupMenu_Separator0);
      customXYURLGenerator0.addURLSeries(linkedList0);
      Object object0 = customXYURLGenerator0.clone();
      // Undeclared exception!
      try { 
        customXYURLGenerator0.equals(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      String string0 = customXYURLGenerator0.getURL(17, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      customXYURLGenerator0.addURLSeries(arrayList0);
      int int0 = customXYURLGenerator0.getURLCount(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      customXYURLGenerator0.addURLSeries((List) null);
      customXYURLGenerator0.addURLSeries((List) null);
      int int0 = customXYURLGenerator0.getURLCount(1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      int int0 = customXYURLGenerator0.getListCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      Vector<String> vector0 = new Vector<String>();
      vector0.add((String) null);
      customXYURLGenerator0.addURLSeries(vector0);
      Object object0 = customXYURLGenerator0.clone();
      boolean boolean0 = customXYURLGenerator0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      CustomXYURLGenerator customXYURLGenerator1 = new CustomXYURLGenerator();
      assertTrue(customXYURLGenerator1.equals((Object)customXYURLGenerator0));
      
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      arrayList0.add(integer0);
      customXYURLGenerator1.addURLSeries(arrayList0);
      customXYURLGenerator0.addURLSeries((List) null);
      boolean boolean0 = customXYURLGenerator1.equals(customXYURLGenerator0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      CustomXYURLGenerator customXYURLGenerator1 = new CustomXYURLGenerator();
      assertTrue(customXYURLGenerator1.equals((Object)customXYURLGenerator0));
      
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      customXYURLGenerator1.addURLSeries(arrayList0);
      boolean boolean0 = customXYURLGenerator0.equals(customXYURLGenerator1);
      assertFalse(customXYURLGenerator1.equals((Object)customXYURLGenerator0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      boolean boolean0 = customXYURLGenerator0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      customXYURLGenerator0.addURLSeries(linkedList0);
      String string0 = customXYURLGenerator0.getURL(0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      customXYURLGenerator0.addURLSeries((List) null);
      String string0 = customXYURLGenerator0.getURL(0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      // Undeclared exception!
      try { 
        customXYURLGenerator0.generateURL(matrixSeriesCollection0, (-1), 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
