/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:21:08 GMT 2022
 */

package org.jfree.chart.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.geom.AffineTransform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.editor.DefaultTitleEditor;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.title.CompositeTitle;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.ShortTextTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.general.DefaultValueDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultTitleEditor_ESTest extends DefaultTitleEditor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      String string0 = defaultTitleEditor0.getTitleText();
      assertEquals("February 14, 2014", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      float[] floatArray0 = new float[6];
      AffineTransform affineTransform0 = new AffineTransform(floatArray0);
      Font font1 = font0.deriveFont((-1200497611), affineTransform0);
      Color color0 = Color.BLUE;
      GradientPaint gradientPaint0 = new GradientPaint((-1.20049766E9F), (-1200497611), color0, 1.0F, (-1.20049766E9F), color0, true);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = textBlock0.getLineAlignment();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      TextTitle textTitle0 = new TextTitle("A6h!#-;\"zR?:_e9+{", font1, gradientPaint0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, rectangleInsets0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      Font font2 = defaultTitleEditor0.getTitleFont();
      assertFalse(font2.isItalic());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      Font font0 = defaultTitleEditor0.getTitleFont();
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.setTitleProperties((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultTitleEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.attemptFontSelection();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultTitleEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      DefaultTitleEditor defaultTitleEditor0 = null;
      try {
        defaultTitleEditor0 = new DefaultTitleEditor(compositeTitle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.title.CompositeTitle cannot be cast to org.jfree.chart.title.TextTitle
         //
         verifyException("org.jfree.chart.editor.DefaultTitleEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.attemptPaintSelection();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(shortTextTitle0);
      String string0 = defaultTitleEditor0.getTitleText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor((Title) null);
      Color color0 = (Color)defaultTitleEditor0.getTitlePaint();
      assertEquals(0, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("Yoiw");
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) (-1349));
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      defaultTitleEditor0.setTitleProperties(jFreeChart0);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor((Title) null);
      defaultTitleEditor0.setTitleProperties(jFreeChart0);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      ActionEvent actionEvent0 = new ActionEvent("Friday, February 14, 2014", 400, "'zt`QG", 15, 400);
      defaultTitleEditor0.actionPerformed(actionEvent0);
      assertFalse(defaultTitleEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor((Title) null);
      ActionEvent actionEvent0 = new ActionEvent(defaultTitleEditor0, 0, "SelectPaint");
      // Undeclared exception!
      try { 
        defaultTitleEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      ActionEvent actionEvent0 = new ActionEvent(defaultTitleEditor0, 0, "ShowTitle", 2678400000L, 0);
      defaultTitleEditor0.actionPerformed(actionEvent0);
      assertFalse(defaultTitleEditor0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", dateTitle0.DEFAULT_FONT, combinedDomainCategoryPlot0, true);
      defaultTitleEditor0.setTitleProperties(jFreeChart0);
      assertFalse(jFreeChart0.isBorderVisible());
  }
}
