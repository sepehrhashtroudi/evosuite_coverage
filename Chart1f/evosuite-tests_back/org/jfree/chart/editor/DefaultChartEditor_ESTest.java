/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:20:09 GMT 2022
 */

package org.jfree.chart.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.event.ActionEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.editor.DefaultChartEditor;
import org.jfree.chart.editor.DefaultPlotEditor;
import org.jfree.chart.editor.DefaultTitleEditor;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.data.category.CategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultChartEditor_ESTest extends DefaultChartEditor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(" \"{i1R^", categoryPlot0);
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      Color color0 = (Color)defaultChartEditor0.getBackgroundPaint();
      assertEquals(255, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Tomer Peretz", polarPlot0);
      jFreeChart0.setAntiAlias(false);
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      boolean boolean0 = defaultChartEditor0.getAntiAlias();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      ActionEvent actionEvent0 = new ActionEvent(combinedDomainCategoryPlot0, 1, (String) null, 0L, 1656);
      // Undeclared exception!
      try { 
        defaultChartEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChartEditor defaultChartEditor0 = null;
      try {
        defaultChartEditor0 = new DefaultChartEditor((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultChartEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      boolean boolean0 = defaultChartEditor0.getAntiAlias();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      Paint paint0 = defaultChartEditor0.getBackgroundPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("BackgroundPaint", fastScatterPlot0);
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      ActionEvent actionEvent0 = new ActionEvent(fastScatterPlot0, 10, "BackgroundPaint");
      // Undeclared exception!
      try { 
        defaultChartEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      ActionEvent actionEvent0 = new ActionEvent(fastScatterPlot0, (-657), "BackgroundPainV");
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      defaultChartEditor0.actionPerformed(actionEvent0);
      assertFalse(defaultChartEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      DefaultTitleEditor defaultTitleEditor0 = defaultChartEditor0.getTitleEditor();
      assertFalse(defaultTitleEditor0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      defaultChartEditor0.updateChart(jFreeChart0);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      // Undeclared exception!
      try { 
        defaultChartEditor0.updateChart((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultTitleEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      DefaultChartEditor defaultChartEditor0 = new DefaultChartEditor(jFreeChart0);
      DefaultPlotEditor defaultPlotEditor0 = defaultChartEditor0.getPlotEditor();
      assertFalse(defaultPlotEditor0.isFocusTraversalPolicyProvider());
  }
}
