/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:19:15 GMT 2022
 */

package org.jfree.chart.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.event.ActionEvent;
import javax.swing.JTabbedPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.editor.DefaultAxisEditor;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.util.RectangleInsets;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultAxisEditor_ESTest extends DefaultAxisEditor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("!YP;TlO9GA{b9T8,Cjb");
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(logAxis0);
      String string0 = defaultAxisEditor0.getLabel();
      assertEquals("!YP;TlO9GA{b9T8,Cjb", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(categoryAxis3D0);
      // Undeclared exception!
      try { 
        defaultAxisEditor0.setAxisProperties((Axis) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultAxisEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultAxisEditor defaultAxisEditor0 = new DefaultAxisEditor(categoryAxis3D0);
      // Undeclared exception!
      try { 
        defaultAxisEditor0.attemptTickLabelFontSelection();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultAxisEditor defaultAxisEditor0 = null;
      try {
        defaultAxisEditor0 = new DefaultAxisEditor((Axis) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultAxisEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("V<)&dI<D!J8TOw@^f");
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(categoryAxis0);
      RectangleInsets rectangleInsets0 = defaultAxisEditor0.getLabelInsets();
      assertEquals(3.0, rectangleInsets0.getRight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(categoryAxis3D0);
      RectangleInsets rectangleInsets0 = defaultAxisEditor0.getTickLabelInsets();
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DefaultAxisEditor defaultAxisEditor0 = new DefaultAxisEditor(categoryAxis0);
      String string0 = defaultAxisEditor0.getLabel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("1~k)7iq@$e");
      DefaultAxisEditor defaultAxisEditor0 = new DefaultAxisEditor(categoryAxis3D0);
      Font font0 = defaultAxisEditor0.getTickLabelFont();
      assertFalse(font0.isBold());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(dateAxis0);
      boolean boolean0 = defaultAxisEditor0.isTickMarksVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      DefaultAxisEditor defaultAxisEditor0 = new DefaultAxisEditor(periodAxis0);
      Font font0 = defaultAxisEditor0.getLabelFont();
      assertFalse(font0.hasLayoutAttributes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(4800.589, 0.0);
      DefaultAxisEditor defaultAxisEditor0 = new DefaultAxisEditor(cyclicNumberAxis0);
      Color color0 = (Color)defaultAxisEditor0.getLabelPaint();
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("Null 'category1' argument.");
      DefaultAxisEditor defaultAxisEditor0 = new DefaultAxisEditor(numberAxis0);
      boolean boolean0 = defaultAxisEditor0.isTickLabelsVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(numberAxis0);
      ActionEvent actionEvent0 = new ActionEvent(defaultAxisEditor0, (-3980), "SelectLabelPaint", 500);
      // Undeclared exception!
      try { 
        defaultAxisEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      DefaultAxisEditor defaultAxisEditor0 = new DefaultAxisEditor(valueAxis0);
      ActionEvent actionEvent0 = new ActionEvent("", 1, "SelectLabelFont", 3, 2);
      // Undeclared exception!
      try { 
        defaultAxisEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(categoryAxis3D0);
      Paint paint0 = defaultAxisEditor0.getTickLabelPaint();
      ActionEvent actionEvent0 = new ActionEvent(paint0, 3987, "hH;4PI#{M!eo`o?", (-1150));
      defaultAxisEditor0.actionPerformed(actionEvent0);
      assertFalse(defaultAxisEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("fiNbR/^O", stringArray0);
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(symbolAxis0);
      // Undeclared exception!
      try { 
        defaultAxisEditor0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultNumberAxisEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance((Axis) null);
      assertNull(defaultAxisEditor0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(categoryAxis3D0);
      defaultAxisEditor0.setAxisProperties(categoryAxis3D0);
      assertEquals(0.0, categoryAxis3D0.getFixedDimension(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultAxisEditor defaultAxisEditor0 = DefaultAxisEditor.getInstance(categoryAxis3D0);
      JTabbedPane jTabbedPane0 = defaultAxisEditor0.getOtherTabs();
      assertFalse(jTabbedPane0.isFocusCycleRoot());
  }
}
