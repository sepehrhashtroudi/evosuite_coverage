/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:01:57 GMT 2022
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.Box;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.MiddlePinNeedle;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MiddlePinNeedle_ESTest extends MiddlePinNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Point point0 = new Point(4, 4);
      // Undeclared exception!
      try { 
        middlePinNeedle0.drawNeedle((Graphics2D) null, (Rectangle2D) null, point0, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MiddlePinNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      boolean boolean0 = middlePinNeedle0.equals(middlePinNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      boolean boolean0 = middlePinNeedle0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      boolean boolean0 = middlePinNeedle0.equals(graphics2D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(26, 26, 26, (-1113.1748F));
      Point point0 = new Point(26, 26);
      middlePinNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Float0, point0, 0);
      assertEquals((-1087.1748046875), rectangle2D_Float0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Box box0 = Box.createHorizontalBox();
      Rectangle rectangle0 = box0.getVisibleRect();
      middlePinNeedle0.drawNeedle(sunGraphics2D0, rectangle0, (Point2D) null, (-375.37482F));
      assertEquals(0, sunGraphics2D0.paintState);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Rectangle rectangle0 = new Rectangle(3, 1431655765, 1431655765, 1431655765);
      Box box0 = Box.createVerticalBox();
      Point point0 = box0.getLocation((Point) null);
      middlePinNeedle0.drawNeedle((Graphics2D) null, rectangle0, point0, 2912.678207334748);
      assertEquals(0, point0.y);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Object object0 = middlePinNeedle0.clone();
      boolean boolean0 = middlePinNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      middlePinNeedle0.hashCode();
  }
}
