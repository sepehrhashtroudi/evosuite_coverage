/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:03:28 GMT 2022
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.PushbackInputStream;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.GlyphView;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.PointerNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PointerNeedle_ESTest extends PointerNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Rectangle rectangle0 = new Rectangle((byte)69, (byte)1);
      Rectangle rectangle1 = new Rectangle((byte)60, (-1), (byte) (-25), (byte)69);
      rectangle0.setFrame((Rectangle2D) rectangle1);
      Point2D.Float point2D_Float0 = new Point2D.Float(2.0F, 1.0F);
      pointerNeedle0.drawNeedle((Graphics2D) null, rectangle0, point2D_Float0, 2.0F);
      assertEquals(5, pointerNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      PointerNeedle pointerNeedle1 = new PointerNeedle();
      assertTrue(pointerNeedle1.equals((Object)pointerNeedle0));
      
      pointerNeedle0.setRotateX((-1966.0));
      boolean boolean0 = pointerNeedle0.equals(pointerNeedle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      boolean boolean0 = pointerNeedle0.equals(pointerNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-25), (byte)1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      boolean boolean0 = pointerNeedle0.equals(pushbackInputStream0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Color color0 = Color.lightGray;
      pointerNeedle0.setOutlinePaint(color0);
      Rectangle rectangle0 = new Rectangle((byte)39, (byte)0);
      Point2D.Float point2D_Float0 = new Point2D.Float((byte)39, (-40.20729F));
      // Undeclared exception!
      try { 
        pointerNeedle0.drawNeedle((Graphics2D) null, rectangle0, point2D_Float0, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.PointerNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Color color0 = Color.lightGray;
      pointerNeedle0.setHighlightPaint(color0);
      Rectangle rectangle0 = new Rectangle((byte) (-25), (byte)0);
      Point2D.Float point2D_Float0 = new Point2D.Float((byte)0, (byte)0);
      // Undeclared exception!
      try { 
        pointerNeedle0.drawNeedle((Graphics2D) null, rectangle0, point2D_Float0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.PointerNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Element element0 = defaultStyledDocument0.getDefaultRootElement();
      GlyphView glyphView0 = new GlyphView(element0);
      Color color0 = glyphView0.getForeground();
      pointerNeedle0.setFillPaint(color0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        pointerNeedle0.drawNeedle((Graphics2D) null, rectangle0, (Point2D) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.PointerNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Rectangle rectangle0 = new Rectangle((byte)60, (byte) (-53));
      Point2D.Float point2D_Float0 = new Point2D.Float(60, (byte)39);
      pointerNeedle0.drawNeedle((Graphics2D) null, rectangle0, point2D_Float0, (byte) (-53));
      assertEquals(0.5, pointerNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Rectangle rectangle0 = new Rectangle((byte)39, (byte)0);
      Point2D.Float point2D_Float0 = new Point2D.Float((byte)39, (-40.20729F));
      pointerNeedle0.drawNeedle((Graphics2D) null, rectangle0, point2D_Float0, (byte)0);
      assertEquals(39, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Object object0 = pointerNeedle0.clone();
      boolean boolean0 = pointerNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.hashCode();
  }
}
