/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:08:16 GMT 2022
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.WindNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WindNeedle_ESTest extends WindNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        windNeedle0.drawNeedle((Graphics2D) null, (Rectangle2D) null, point0, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ArrowNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      Object object0 = windNeedle0.clone();
      boolean boolean0 = windNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      WindNeedle windNeedle1 = new WindNeedle();
      assertTrue(windNeedle1.equals((Object)windNeedle0));
      
      windNeedle1.setRotateY(Double.NaN);
      boolean boolean0 = windNeedle0.equals(windNeedle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      boolean boolean0 = windNeedle0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      boolean boolean0 = windNeedle0.equals(windNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0F, (-3276.6728837));
      windNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Float0, point2D_Double0, (-3276.6728837));
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      windNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Double0, (Point2D) null, 0.0);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      windNeedle0.hashCode();
  }
}
