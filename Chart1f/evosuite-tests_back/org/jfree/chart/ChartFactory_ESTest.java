/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:52:50 GMT 2022
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.util.Date;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartTheme;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.Timeline;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.pie.PieDataset;
import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.BoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.OHLCDataset;
import org.jfree.data.xy.TableXYDataset;
import org.jfree.data.xy.WindDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.XYZDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartFactory_ESTest extends ChartFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("V<C`Kxwa#l", "", "!6[X@-Awu_E% W>\"q", defaultIntervalXYDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(simpleTimeZone0);
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("hJzg]", "]);\"", true, "hJzg]", timeSeriesCollection0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(jDBCPieDataset0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("zdPYu}bfmZGv.Q!X?@", (PieDataset) defaultPieDataset0, (PieDataset) jDBCPieDataset0, 0, false, false, true, false);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(defaultKeyedValuesDataset0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("W@d&&p)n^`", (PieDataset) defaultPieDataset0, (PieDataset) defaultKeyedValuesDataset0, 2146696158, false, false, locale0, false, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("'I1@mb`N6.", "Uz_O_", "", histogramDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("UnitType.RELATIVE", "UnitType.RELATIVE", "UnitType.RELATIVE", (WindDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createWaterfallChart("Requires 'rollMultiple' > 0.", " (", "Requires 'rollMultiple' > 0.", defaultMultiValueCategoryDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(15, 15, 15);
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("", waferMapDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart3D("green", "green", "Null 'task' argument.", (CategoryDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("Null 'right' argument.", "Null 'right' argument.", (String) null, defaultMultiValueCategoryDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("", "", "", defaultKeyedValues2DDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.UK;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) defaultPieDataset0, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) defaultKeyedValuesDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("", (XYDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("", (PieDataset) null, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D((String) null, (PieDataset) jDBCPieDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.GERMANY;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("org.jfree.chart.LegendItem", (PieDataset) defaultPieDataset0, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("({VS9XS.l$o[[", (PieDataset) defaultKeyedValuesDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.TAIWAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart(" K~jqlT5H:sM)", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 15, true, false, locale0, false, false);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("Requires 'rollMultiple' > 0.", defaultMultiValueCategoryDataset0, tableOrder0, true);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("=", (CategoryDataset) null, tableOrder0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-2726), 0);
      JFreeChart jFreeChart0 = ChartFactory.createLineChart((String) null, "A3- lvt<D\"Gq&[", "", slidingGanttCategoryDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("VwyzE7~OO~x3F5v+k$", (String) null, "d53*lKIT", defaultTableXYDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      MockDate mockDate0 = new MockDate(0, 15, (-1457642424), 0, (-2176));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 966.5978162868175, 5.0E10, 966.5978162868175, (-1457642424), 3785.86752941469);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItem0;
      oHLCDataItemArray0[2] = oHLCDataItemArray0[1];
      oHLCDataItemArray0[3] = oHLCDataItem0;
      oHLCDataItemArray0[4] = oHLCDataItemArray0[0];
      oHLCDataItemArray0[5] = oHLCDataItemArray0[3];
      oHLCDataItemArray0[6] = oHLCDataItemArray0[5];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(0.5F, oHLCDataItemArray0);
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart(")", (String) null, ")", (OHLCDataset) defaultOHLCDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("0x99A6CC", oHLCDataItemArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("0x99A6CC", "0x99A6CC", "@@@p>CKPE[W", (OHLCDataset) defaultOHLCDataset0, (Timeline) segmentedTimeline0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("Mc:wToo;(", oHLCDataItemArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart((String) null, "Mc:wToo;(", "EVuPG>6$4Bf ", (OHLCDataset) defaultOHLCDataset0, (Timeline) segmentedTimeline0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("You are trying to add data where the time period class ", "You are trying to add data where the time period class ", "baseTimeline.getSegmentSize() is smaller than segmentSize", taskSeriesCollection0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset("^yOF'GI");
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("", "", "^yOF'GI", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("", "", "", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart("#Hij#!gutUjD44}", "#Hij#!gutUjD44}", "org.jfree.data.xy.DefaultOHLCDataset", defaultMultiValueCategoryDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart("", "", "", (CategoryDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset((Connection) null);
      ChartFactory.createTimeSeriesChart("Null 'stroke' not permitted.", "", "06oI<bOhHE", jDBCXYDataset0, true);
      ChartFactory.createBubbleChart("_pQDRc'", "gBG7(", "Null 'stroke' not permitted.", (XYZDataset) null, false);
      // Undeclared exception!
      ChartFactory.createXYStepChart("", "", "", (XYDataset) null, true);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepChart("", "Tahoma", "Tahoma", defaultBoxAndWhiskerXYDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.AbstractSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartFactory.createWaterfallChart("q,M|uF{u\"8IQO", "q,M|uF{u\"8IQO", "q,M|uF{u\"8IQO", defaultBoxAndWhiskerCategoryDataset0, false);
      XYSeries xYSeries0 = new XYSeries(0.5F, true);
      String[] stringArray0 = new String[9];
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      ChartFactory.createXYLineChart("q,M|uF{u\"8IQO", "q,M|uF{u\"8IQO", "Bright ", xYSeriesCollection0, true);
      // Undeclared exception!
      ChartFactory.createXYStepAreaChart("Bright ", "q,M|uF{u\"8IQO", stringArray0[7], xYSeriesCollection0, true);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeZone0);
      ChartFactory.createXYStepChart("R:_Q4Fg^", "R:_Q4Fg^", "R:_Q4Fg^", timeSeriesCollection0, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createLineChart3D("R:_Q4Fg^", "Cannot remove null series.", "R:_Q4Fg^", defaultKeyedValues2DDataset0, false);
      // Undeclared exception!
      ChartFactory.createXYLineChart("Cannot remove null series.", "VerticalAlignment.CENTER", "", timeSeriesCollection0, false);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      ChartFactory.createXYAreaChart((String) null, "*,>6kSdC|?D%U", (String) null, timeSeriesCollection0, true);
      ChartFactory.createBarChart3D("TextBlockAnchor.CENTER_LEFT", "*,>6kSdC|?D%U", "TextBlockAnchor.CENTER_LEFT", (CategoryDataset) null, false);
      // Undeclared exception!
      ChartFactory.createXYBarChart((String) null, "*,>6kSdC|?D%U", false, "org.jfree.data.xy.MatrixSeries", timeSeriesCollection0, true);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      ChartFactory.createBubbleChart("", "", "", matrixSeriesCollection0, true);
      ChartFactory.createTimeSeriesChart("gy}oK AC:2J.*|pV", "l_Z;@6tg_-", ") has wrong type:", matrixSeriesCollection0, false);
      // Undeclared exception!
      ChartFactory.createXYAreaChart("", "l_Z;@6tg_-", "domainValueEnd (", matrixSeriesCollection0, true);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1195), " *?U?_aH\"}9B_em", 0, 15, 0, 0, 0, (-1195), 0, 0, 1826, 0, 51);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(15, 15, simpleTimeZone0);
      // Undeclared exception!
      try { 
        ChartFactory.createXYAreaChart("org.jfree.data.DefaultKeyedValues2D", "}*;6A", "]q", dynamicTimeSeriesCollection0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      TimeZone timeZone0 = TimeZone.getDefault();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      ChartFactory.createScatterPlot("", "", "", timeTableXYDataset0, false);
      ChartFactory.createXYStepAreaChart("", ")", "", timeTableXYDataset0, false);
      // Undeclared exception!
      ChartFactory.createWaterfallChart(")", ")", ")", defaultMultiValueCategoryDataset0, false);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 4, 1586);
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("", "Tomer Peretz", "", slidingCategoryDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double[][] doubleArray0 = new double[8][7];
      double[] doubleArray1 = new double[6];
      doubleArray0[2] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("Q~V)^N=$7;w8y}Ci", "4", "", defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createWaferMapChart("e= }~MUk", (WaferMapDataset) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      ChartFactory.createXYLineChart("luGFaz:/~Y<)", "JFree", "", defaultTableXYDataset0, false);
      ChartFactory.createXYLineChart("/.5tQG5QaR4-=B", "luGFaz:/~Y<)", "JFree", (XYDataset) null, false);
      // Undeclared exception!
      ChartFactory.createTimeSeriesChart("/.5tQG5QaR4-=B", "", "/.5tQG5QaR4-=B", defaultTableXYDataset0, false);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ChartFactory.createStackedXYAreaChart("", "", "", (TableXYDataset) null, false);
      ChartFactory.createPolarChart("Null 'id' argument.", (XYDataset) null, false);
      // Undeclared exception!
      ChartFactory.createStackedXYAreaChart("", "Null 'id' argument.", "Null 'id' argument.", (TableXYDataset) null, false);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      ChartFactory.createXYAreaChart("*>/xdP/B{)BH{xx1R&", "*>/xdP/B{)BH{xx1R&", "*>/xdP/B{)BH{xx1R&", defaultWindDataset0, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createStackedAreaChart("=change >=-", "*>/xdP/B{)BH{xx1R&", "5pvG('", defaultKeyedValues2DDataset0, true);
      ChartFactory.createStackedBarChart("*>/xdP/B{)BH{xx1R&", "Legacy", "*>/xdP/B{)BH{xx1R&", defaultKeyedValues2DDataset0, true);
      // Undeclared exception!
      ChartFactory.createStackedBarChart3D("JFree", "S)", "Legacy", defaultKeyedValues2DDataset0, false);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 1, 3376);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart3D("7W9", "7W9", "7W9", slidingGanttCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double[][] doubleArray0 = new double[9][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, (-620), 576);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart3D((String) null, (String) null, (String) null, slidingCategoryDataset0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      double[][] doubleArray0 = new double[7][7];
      double[] doubleArray1 = new double[5];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("", "6gUxk#8~gK3U3ikGd:o", "6gUxk#8~gK3U3ikGd:o", defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 15, 2147483645);
      // Undeclared exception!
      ChartFactory.createStackedAreaChart("({VS9XS.l$o[[", "org.jfree.chart.plot.MeterInterval", "8<o", slidingGanttCategoryDataset0, true);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createStackedAreaChart("Kii68#,nt] 'q/zhB", "i", "Kii68#,nt] 'q/zhB", (CategoryDataset) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ChartFactory.createXYLineChart("[S-J", "[S-J", "[S-J", (XYDataset) null, true);
      ChartFactory.createPolarChart("[S-J", (XYDataset) null, false);
      // Undeclared exception!
      ChartFactory.createScatterPlot("f8[", "f8[", "}DO&J-Vk`so;z\"1q", (XYDataset) null, true);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2254, 2);
      // Undeclared exception!
      try { 
        ChartFactory.createScatterPlot("tzl-2Gq\"v%oeB*<sC", "", "j8b9", dynamicTimeSeriesCollection0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-1750), 2958465);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(slidingGanttCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(slidingGanttCategoryDataset0, tableOrder0, 0);
      // Undeclared exception!
      try { 
        ChartFactory.createRingChart("I=8H7@R}tpCNCHW", (PieDataset) categoryToPieDataset0, true, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ChartFactory.createTimeSeriesChart((String) null, (String) null, (String) null, (XYDataset) null, true);
      ChartFactory.createScatterPlot((String) null, (String) null, "f*\"wuI@ 06UU0#gc$?", (XYDataset) null, true);
      // Undeclared exception!
      ChartFactory.createPolarChart("f*\"wuI@ 06UU0#gc$?", (XYDataset) null, true);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart3D("^", (PieDataset) null, false, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("Requires 0.0 <= margin < 1.0.", (PieDataset) defaultKeyedValuesDataset0, true, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("", (PieDataset) null, (PieDataset) null, (-2650), false, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart((String) null, (PieDataset) null, (PieDataset) null, 2026, true, true, locale0, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      double[][] doubleArray0 = new double[4][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, 10);
      Locale locale0 = new Locale(" (+100%)", "=change >=+");
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart(" (+100%)", (PieDataset) categoryToPieDataset0, (PieDataset) categoryToPieDataset0, 10, true, true, locale0, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Date[] dateArray0 = new Date[1];
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      Date date0 = segmentedTimeline0.getDate(0L);
      dateArray0[0] = date0;
      double[] doubleArray0 = new double[1];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset("}=[", dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      ChartFactory.createCandlestickChart("", "}=[", "L6>d:YzB<jI(WE9_", defaultHighLowDataset0, true);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      ChartFactory.createStackedXYAreaChart("}=[", "( bqBgdk~NPR,CY", "[1d1X^]h,3J", defaultTableXYDataset0, true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      ChartFactory.createLineChart3D(")`Ge13u?V", "", "", jDBCCategoryDataset0, true);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      double[][] doubleArray0 = new double[7][0];
      double[] doubleArray1 = new double[8];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart("", "@_6RU' F", "j8b9", defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ChartFactory.createLineChart3D("", "`", "", (CategoryDataset) null, false);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      ChartFactory.createWindPlot("%", "", ";1", defaultWindDataset0, false);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      ChartFactory.createHistogram("", "`", "", histogramDataset0, true);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      ChartFactory.createXYAreaChart("({VS9XS.l$o[[", " (+100%)", "[9G", defaultWindDataset0, false);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[2];
      MockDate mockDate0 = new MockDate((-1049), 15, (-1098806052), (-1098806052), (-1049), (-1049));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.5F, 0.0, (-1049), 0.5F, 15);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(" (+100%)", oHLCDataItemArray0);
      ChartFactory.createHighLowChart("9h[`+lEX^V", "[9G", "({VS9XS.l$o[[", (OHLCDataset) defaultOHLCDataset0, false);
      // Undeclared exception!
      ChartFactory.createHighLowChart("[9G", " (+100%)", "[9G", (OHLCDataset) defaultOHLCDataset0, false);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Date[] dateArray0 = new Date[4];
      MockDate mockDate0 = new MockDate((-4622), 2230, 0, 0, 2658);
      dateArray0[0] = (Date) mockDate0;
      dateArray0[1] = (Date) mockDate0;
      dateArray0[2] = (Date) mockDate0;
      dateArray0[3] = (Date) mockDate0;
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[1];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset("Michael Siemer", dateArray0, doubleArray0, doubleArray1, doubleArray1, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("Xi<c->gYs'", "Xi<c->gYs'", "Michael Siemer", (OHLCDataset) defaultHighLowDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.xy.DefaultHighLowDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "JCB<EP|l7>";
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("", oHLCDataItemArray0);
      defaultOHLCDataset0.sortDataByDate();
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline((-247L), 151, 151);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("JCB<EP|l7>", "", "JCB<EP|l7>", (OHLCDataset) defaultOHLCDataset0, (Timeline) segmentedTimeline0, true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[4];
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 15, 0.0, 1211.0, 15, 0.0);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItem0;
      oHLCDataItemArray0[2] = oHLCDataItemArray0[0];
      oHLCDataItemArray0[3] = oHLCDataItemArray0[1];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(15, oHLCDataItemArray0);
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline(0L, 15, 15);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("Tahoma", "", "Xk^3'1q$NoOEUrp!", (OHLCDataset) defaultOHLCDataset0, (Timeline) segmentedTimeline0, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(790.0);
      ChartFactory.createXYLineChart((String) null, "?*x*1J[wu", "Legacy", simpleHistogramDataset0, true);
      ChartFactory.createXYBarChart("+*K$=Cpw?l)8", (String) null, false, (String) null, simpleHistogramDataset0, true);
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset((Comparable) null, (OHLCDataItem[]) null);
      // Undeclared exception!
      ChartFactory.createCandlestickChart("^4r#B]", "DQ:%x){TL^dI{_S", "DQ:%x){TL^dI{_S", defaultOHLCDataset0, false);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset((Comparable) null, oHLCDataItemArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart((String) null, (String) null, "p9`$/mNQ2g1GuU", defaultOHLCDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ChartFactory.createLineChart3D("|}q\"P", "dPxnX%|iu", "+", defaultCategoryDataset0, false);
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1564, 0, timeZone0);
      ChartFactory.createXYLineChart("dPxnX%|iu", "?m0cH:a87jz", "", dynamicTimeSeriesCollection0, true);
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      ChartFactory.createBubbleChart("Null 'theme' argument.", "dPxnX%|iu", "+", defaultXYZDataset0, false);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(fixedMillisecond0);
      ChartFactory.createBoxAndWhiskerChart("", "gztv/;>%q-4wI#\"#1", "gztv/;>%q-4wI#\"#1", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
      ChartFactory.createTimeSeriesChart("gztv/;>%q-4wI#\"#1", "", "Bright ", defaultBoxAndWhiskerXYDataset0, false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ChartFactory.createBarChart("", "", "", jDBCCategoryDataset0, false);
      // Undeclared exception!
      ChartFactory.createBoxAndWhiskerChart("", "Bright ", " (", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      // Undeclared exception!
      try { 
        ChartFactory.createBoxAndWhiskerChart((String) null, (String) null, (String) null, (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.AbstractSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      ChartFactory.createStackedXYAreaChart(")z}~xjZAIZ=", ")", ")z}~xjZAIZ=", defaultTableXYDataset0, true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartFactory.createGanttChart("org.jfree.chart.annotations.XYPointerAnnotation", "", "udx*kt", taskSeriesCollection0, true);
      ChartFactory.createLineChart(")z}~xjZAIZ=", "org.jfree.chart.ui.Library", ")", taskSeriesCollection0, true);
      // Undeclared exception!
      ChartFactory.createBarChart3D(")z}~xjZAIZ=", "org.jfree.chart.annotations.XYPointerAnnotation", "org.jfree.chart.ui.Library", taskSeriesCollection0, true);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      ChartFactory.createBubbleChart("", "", "", matrixSeriesCollection0, true);
      ChartFactory.createTimeSeriesChart("gy}oK AC:2J.*|pV", "l_Z;@6tg_-", ") has wrong type:", matrixSeriesCollection0, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      ChartFactory.createBarChart(") has wrong type:", "", "", defaultBoxAndWhiskerCategoryDataset0, true);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double[][] doubleArray0 = new double[9][8];
      double[] doubleArray1 = new double[9];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart("MffPh'KV$\"R-q[", "MpJ3yB", (String) null, defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      TimeZone timeZone0 = TimeZone.getDefault();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      ChartFactory.createScatterPlot("", "", "", timeTableXYDataset0, true);
      ChartFactory.createXYStepAreaChart("", ")", "", timeTableXYDataset0, true);
      // Undeclared exception!
      ChartFactory.createAreaChart(")", "", "", defaultMultiValueCategoryDataset0, false);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[1];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createAreaChart("3*0FaBKJK m d6u6Ju", "3*0FaBKJK m d6u6Ju", "fidWqC%0FPh~BM", defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.GERMANY;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("\u5FB7\u6587 (\u5FB7\u570B)", (PieDataset) defaultPieDataset0, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("R:_Q4Fg^", (PieDataset) null, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      ChartFactory.createXYBarChart("", "", true, "", defaultIntervalXYDataset0, false);
      ChartFactory.createXYStepAreaChart("", "", "", defaultIntervalXYDataset0, false);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[5];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(15, oHLCDataItemArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      // Undeclared exception!
      ChartFactory.createHighLowChart("4&1ZPcp=I(^}Q<!y", (String) null, "", (OHLCDataset) defaultOHLCDataset0, (Timeline) segmentedTimeline0, false);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createMultiplePieChart3D("}C-+m", (CategoryDataset) null, (TableOrder) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("JFree", defaultStatisticalCategoryDataset0, tableOrder0, false);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createMultiplePieChart("", defaultMultiValueCategoryDataset0, (TableOrder) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("?*x*1J[wu", jDBCCategoryDataset0, tableOrder0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, 71, true, false, false, false);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, 328);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Ucx", (PieDataset) categoryToPieDataset0, (PieDataset) categoryToPieDataset0, 15, true, true, true, true);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("wI=*LJenhM ", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-1457642424), true, true, true, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.forLanguageTag("?*x*1J[wu");
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("^4rBB]", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, (-1098806052), false, false, locale0, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      defaultPieDataset0.setValue((Comparable) "org.jfree.data.statistics.SimpleHistogramDataset", (Number) 0.5F);
      Locale locale0 = Locale.CANADA;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Z", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, (-2726), true, true, locale0, false, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      defaultPieDataset0.insertValue(0, (Comparable) 10, combinedRangeCategoryPlot0.ZERO);
      Locale locale0 = Locale.CANADA;
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("Z", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, (-2726), true, true, locale0, true, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.jfree.data.SelectableValue
         //
         verifyException("org.jfree.data.pie.DefaultPieDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Locale locale0 = Locale.FRENCH;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart((String) null, (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 15, true, true, locale0, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ChartTheme chartTheme0 = StandardChartTheme.createLegacyTheme();
      ChartFactory.setChartTheme(chartTheme0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.setChartTheme((ChartTheme) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'theme' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createLineChart3D(")`Ge13u?V", "", "", jDBCCategoryDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D(")z}~xjZAIZ=", "org.jfree.chart.annotations.XYPointerAnnotation", "org.jfree.chart.ui.Library", taskSeriesCollection0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(3431, 404);
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("luGFaz:/~Y<)", waferMapDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D((String) null, (PieDataset) defaultPieDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      ChartFactory.createXYAreaChart("*>/xdP/B{)BH{xx1R&", "*>/xdP/B{)BH{xx1R&", "*>/xdP/B{)BH{xx1R&", defaultWindDataset0, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createStackedAreaChart("=change >=-", "*>/xdP/B{)BH{xx1R&", "5pvG('", defaultKeyedValues2DDataset0, true);
      ChartFactory.createStackedBarChart3D("JFree", "S)", "Legacy", defaultKeyedValues2DDataset0, false);
      // Undeclared exception!
      ChartFactory.createLineChart("5pvG('", ";m!m=\u0002!0%C|2wB/h", "V3sj\"`k", (CategoryDataset) null, true);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, 15);
      Locale locale0 = Locale.CANADA;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("", (PieDataset) categoryToPieDataset0, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("X&2(G", "j8b9", "Darkness", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      ChartFactory.createXYStepChart("", "", "", timePeriodValuesCollection0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartFactory.createPolarChart("org.jfree.data.statistics.SimpleHistogramDataset", timePeriodValuesCollection0, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      ChartFactory.createBoxAndWhiskerChart("[VIhPZhNgE|(Bs", "Null 'order' argument.", "Null 'order' argument.", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ChartFactory.createCandlestickChart("ThreadContext", "ThreadContext", "'BchMCX,H", (OHLCDataset) null, false);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ChartFactory.createBarChart("", "Legacy", "'BchMCX,H", defaultCategoryDataset0, false);
      ChartFactory.createWaterfallChart((String) null, "ThreadContext", ")", defaultCategoryDataset0, false);
      // Undeclared exception!
      ChartFactory.createStackedBarChart("d^1r6", "5#2Y/)GJG6\"&IjcaF", "G P", defaultCategoryDataset0, true);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("", "`", "", histogramDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Number[][] numberArray0 = new Number[0][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart("#(m7^PI", "ItemLabelAnchor.OUTSIDE10", "ItemLabelAnchor.OUTSIDE10", defaultIntervalCategoryDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("({VS9XS.l$o[[", (PieDataset) defaultKeyedValuesDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Legacy", (PieDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StandardChartTheme standardChartTheme0 = (StandardChartTheme)ChartFactory.getChartTheme();
      ChartFactory.setChartTheme(standardChartTheme0);
      assertTrue(standardChartTheme0.isShadowVisible());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[5];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(15, oHLCDataItemArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("4&1ZPcp=I(^}Q<!y", (String) null, "", (OHLCDataset) defaultOHLCDataset0, (Timeline) segmentedTimeline0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Date[] dateArray0 = new Date[6];
      double[] doubleArray0 = new double[5];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset("", dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("", "~", "~", (OHLCDataset) defaultHighLowDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultHighLowDataset", e);
      }
  }
}
