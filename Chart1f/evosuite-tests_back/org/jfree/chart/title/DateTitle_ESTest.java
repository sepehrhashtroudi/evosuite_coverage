/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:58:08 GMT 2022
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.time.FixedMillisecond;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DateTitle_ESTest extends DateTitle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      // Undeclared exception!
      try { 
        dateTitle0.setDateFormat(0, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Locale locale0 = Locale.ITALIAN;
      // Undeclared exception!
      try { 
        dateTitle0.setDateFormat((-5894), locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style -5894
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint0 = ganttRenderer0.getIncompletePaint();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, (Locale) null, (Font) null, paint0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, rectangleInsets0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      LegendTitle legendTitle0 = new LegendTitle(multiplePiePlot0);
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, locale0, (Font) null, defaultPolarItemRenderer0.DEFAULT_OUTLINE_PAINT, legendTitle0.DEFAULT_POSITION, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT, multiplePiePlot0.DEFAULT_INSETS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Font font0 = Font.decode("org.jfree.chart.labels.StandardCategoryToolTipGenerator");
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Paint paint0 = spiderWebPlot0.getAxisLinePaint();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(715, locale0, font0, paint0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, spiderWebPlot0.DEFAULT_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 715
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, Object> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Object>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, (Locale) null, font0, color0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle((-3518), locale0, (Font) null, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style -3518
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(5120);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 5120
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Font font0 = PiePlot.DEFAULT_LABEL_FONT;
      Color color0 = (Color)XYPlot.DEFAULT_GRIDLINE_PAINT;
      DateTitle dateTitle0 = new DateTitle(0, locale0, font0, color0);
      assertFalse(dateTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      assertNull(dateTitle0.getURLText());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      CategoryMarker categoryMarker0 = new CategoryMarker(fixedMillisecond0);
      Font font0 = categoryMarker0.getLabelFont();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-2642.0));
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      DateTitle dateTitle0 = new DateTitle(0, locale0, font0, paint0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
      assertEquals("vendredi 14 f\u00E9vrier 2014", dateTitle0.getText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Locale locale0 = Locale.GERMANY;
      dateTitle0.setDateFormat(0, locale0);
      assertEquals("Freitag, 14. Februar 2014", dateTitle0.getText());
  }
}
