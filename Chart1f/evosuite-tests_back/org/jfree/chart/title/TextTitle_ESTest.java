/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:04:43 GMT 2022
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextFragment;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.ShortTextTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.Range;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.time.DateRange;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TextTitle_ESTest extends TextTitle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      Double double0 = new Double((-1.5707963267948966));
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) double0);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      Paint paint0 = compassPlot0.getRoseCenterPaint();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = textBlock0.getLineAlignment();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      TextTitle textTitle0 = new TextTitle("_Is", font0, paint0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, compassPlot0.DEFAULT_INSETS);
      textTitle0.hashCode();
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      PiePlot piePlot0 = new PiePlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", piePlot0.DEFAULT_LABEL_FONT, multiplePiePlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(29, 10, chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle(0, 10, 684, 684);
      Color color0 = Color.LIGHT_GRAY;
      dateTitle0.setPaint(color0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        dateTitle0.drawVertical(graphics2D0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, ">7DR`vS$s~8u");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(12);
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = textBlock0.getLineAlignment();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle(">7DR`vS$s~8u", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS);
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      textTitle0.setPaint(color0);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertFalse(textTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1864.0));
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(0);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle("`@_2F\"K23*iJ\"avsg", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
      Color color0 = (Color)textTitle0.getPaint();
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertEquals(192, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Font font0 = defaultPolarItemRenderer0.getBaseItemLabelFont();
      dateTitle0.setFont(font0);
      assertFalse(dateTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("`3d+");
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      textTitle0.setTextAlignment(horizontalAlignment0);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertFalse(textTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      textTitle0.getText();
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("J9*");
      textTitle0.setMaximumLinesToDisplay(0);
      int int0 = textTitle0.getMaximumLinesToDisplay();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-2040109463));
      Font font1 = font0.deriveFont(affineTransform0);
      TextTitle textTitle0 = new TextTitle("XA+{aJo0G*zF", font1);
      Font font2 = textTitle0.getFont();
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertEquals(0, font2.getStyle());
      assertFalse(textTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, ">7DR`vS$s~8u");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(12);
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = textBlock0.getLineAlignment();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle(">7DR`vS$s~8u", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS);
      Font font0 = textTitle0.getFont();
      assertEquals(10, font0.getSize());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      assertFalse(textTitle0.getExpandToFitSpace());
      
      textTitle0.setExpandToFitSpace(true);
      boolean boolean0 = textTitle0.getExpandToFitSpace();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("bLJwYUC'r(|T6x&/");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", shortTextTitle0.DEFAULT_FONT, combinedRangeXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Size2D size2D0 = shortTextTitle0.arrangeFN(graphics2D0, 12.0);
      assertEquals(0.0, size2D0.width, 0.01);
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("`v}T}S,FPpE@>A");
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, (-2.0F), (-1576.1F), (-1576.1F), (-1503.0F), 0.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        textTitle0.drawHorizontal((Graphics2D) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("org/jfree/chart/gorilla.jpg");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(6.0F, (-1961.7F), (-1961.7F), 6.0F);
      // Undeclared exception!
      try { 
        shortTextTitle0.draw((Graphics2D) null, (Rectangle2D) null, (Object) rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("w>}8EX3DN6ciJ4(a_");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrangeNN((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      // Undeclared exception!
      try { 
        shortTextTitle0.arrangeFN((Graphics2D) null, (double) clusteredXYBarRenderer0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      Range range0 = clusteredXYBarRenderer0.findRangeBounds(jDBCXYDataset0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", multiplePiePlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1593, 2029.87244446, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        dateTitle0.arrange(graphics2D0, (RectangleConstraint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'c' argument.
         //
         verifyException("org.jfree.chart.block.AbstractBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(180.0);
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("DCJ", dateRange0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      TextTitle textTitle0 = null;
      try {
        textTitle0 = new TextTitle("DCJ", candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, candlestickRenderer0.DEFAULT_PAINT, rectangleEdge0, (HorizontalAlignment) null, verticalAlignment0, moduloAxis0.DEFAULT_AXIS_LABEL_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'horizontalAlignment' argument.
         //
         verifyException("org.jfree.chart.title.Title", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextTitle textTitle0 = null;
      try {
        textTitle0 = new TextTitle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("`v}T}S,FPpE@>A");
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, (-2.0F), (-1576.1F), (-1576.1F), (-1503.0F), 0.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      textTitle0.draw((Graphics2D) null, rectangle2D0, (Object) integer0);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertFalse(textTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      dateTitle0.setText("");
      dateTitle0.setText("");
      assertEquals("", dateTitle0.getText());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Font font0 = new Font("org.jfree.chart.needle.LineNeedle", 4516, (-9999));
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getItemFillPaint((-9999), 0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      TextTitle textTitle0 = null;
      try {
        textTitle0 = new TextTitle((String) null, font0, paint0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Paint paint0 = stackedAreaRenderer0.getItemOutlinePaint(500, 1, true);
      dateTitle0.setBackgroundPaint(paint0);
      dateTitle0.hashCode();
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
      assertFalse(dateTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1864.0));
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(0);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle("`@_2F\"K23*iJ\"avsg", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, meterPlot0.DEFAULT_INSETS);
      TextTitle textTitle1 = new TextTitle("`@_2F\"K23*iJ\"avsg", meterPlot0.DEFAULT_LABEL_FONT);
      boolean boolean0 = textTitle0.equals(textTitle1);
      assertFalse(textTitle1.getExpandToFitSpace());
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, textTitle1.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      TextTitle textTitle0 = jFreeChart0.getTitle();
      boolean boolean0 = shortTextTitle0.equals(textTitle0);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1864.0));
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(0);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle("`@_2F\"K23*iJ\"avsg", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
      TextTitle textTitle1 = (TextTitle)textTitle0.clone();
      boolean boolean0 = textTitle0.equals(textTitle1);
      assertFalse(textTitle1.getExpandToFitSpace());
      assertTrue(boolean0);
      assertEquals(Integer.MAX_VALUE, textTitle1.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1864.0));
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(0);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle("`@_2F\"K23*iJ\"avsg", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
      boolean boolean0 = textTitle0.equals(textTitle0);
      assertTrue(boolean0);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertFalse(textTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      boolean boolean0 = dateTitle0.equals("");
      assertFalse(dateTitle0.getExpandToFitSpace());
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle(" seu");
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(49, 251);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(" seu", waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      // Undeclared exception!
      try { 
        shortTextTitle0.drawVertical(graphics2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A8Bvnh,Y wf+tdVe-", polarPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (double) 10, chartRenderingInfo0);
      assertEquals(0, bufferedImage0.getMinX());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(7.2E7, (Range) null);
      // Undeclared exception!
      try { 
        dateTitle0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1199, 419);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1.0F, (-262.95231));
      // Undeclared exception!
      try { 
        dateTitle0.arrange(graphics2D0, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      // Undeclared exception!
      try { 
        dateTitle0.setPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Paint paint0 = dateTitle0.getPaint();
      dateTitle0.setPaint(paint0);
      assertFalse(dateTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Font font0 = dateTitle0.getFont();
      dateTitle0.setFont(font0);
      assertTrue(font0.isPlain());
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
      assertFalse(dateTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      // Undeclared exception!
      try { 
        textTitle0.setFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      // Undeclared exception!
      try { 
        dateTitle0.setTextAlignment((HorizontalAlignment) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'alignment' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      // Undeclared exception!
      try { 
        shortTextTitle0.setText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Font font0 = TextFragment.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      RectangleEdge rectangleEdge0 = Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      TextTitle textTitle0 = null;
      try {
        textTitle0 = new TextTitle("pieIndex", font0, (Paint) null, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Paint paint0 = xYShapeRenderer0.getGuideLinePaint();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      TextTitle textTitle0 = null;
      try {
        textTitle0 = new TextTitle("Index outside valid range.", (Font) null, paint0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, rectangleInsets0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TextTitle textTitle0 = null;
      try {
        textTitle0 = new TextTitle((String) null, (Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      boolean boolean0 = dateTitle0.getExpandToFitSpace();
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle(" seu");
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(49, 251);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(" seu", waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        shortTextTitle0.arrangeRN(graphics2D0, (Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle(" seu");
      shortTextTitle0.setToolTipText("");
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(" seu", shortTextTitle0.getText());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      PiePlot piePlot0 = new PiePlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", piePlot0.DEFAULT_LABEL_FONT, multiplePiePlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(29, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      dateTitle0.draw(graphics2D0, (Rectangle2D) null);
      assertFalse(dateTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("org.jfree.chart.title.TextTitle");
      shortTextTitle0.getURLText();
      assertEquals("org.jfree.chart.title.TextTitle", shortTextTitle0.getText());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.data.xy.AbstractIntervalXYDataset", dateTickUnit0, 0.0, 2581.181179039912);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      TextTitle textTitle0 = new TextTitle("", categoryPointerAnnotation0.DEFAULT_FONT, categoryPointerAnnotation0.DEFAULT_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, rectangleInsets0);
      textTitle0.getToolTipText();
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertFalse(textTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      int int0 = dateTitle0.getMaximumLinesToDisplay();
      assertEquals(Integer.MAX_VALUE, int0);
      assertFalse(dateTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      Paint paint0 = shortTextTitle0.getBackgroundPaint();
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1864.0));
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(0);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle("`@_2F\"K23*iJ\"avsg", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
      textTitle0.setExpandToFitSpace(false);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      dateTitle0.getText();
      assertEquals(Integer.MAX_VALUE, dateTitle0.getMaximumLinesToDisplay());
      assertFalse(dateTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TextTitle textTitle0 = new TextTitle("or.jfree.chat.0itledTextTitIe");
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, (-1862409047), 270, 270, 15, false, true, true, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (-1864.0), (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Size2D size2D0 = textTitle0.arrangeNN(graphics2D0);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertEquals(13.96875, size2D0.height, 0.01);
      assertEquals(195.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle(" seu");
      shortTextTitle0.setURLText(" seu");
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(" seu", shortTextTitle0.getText());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.data.xy.AbstractIntervalXYDataset", dateTickUnit0, 0.0, 2581.181179039912);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      TextTitle textTitle0 = new TextTitle("", categoryPointerAnnotation0.DEFAULT_FONT, categoryPointerAnnotation0.DEFAULT_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, rectangleInsets0);
      HorizontalAlignment horizontalAlignment1 = textTitle0.getTextAlignment();
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals("HorizontalAlignment.RIGHT", horizontalAlignment1.toString());
  }
}
