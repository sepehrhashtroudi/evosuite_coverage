/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:02:10 GMT 2022
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.AttributedCharacterIterator;
import java.util.Vector;
import javax.swing.JColorChooser;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.colorchooser.DefaultColorSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.ColumnArrangement;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.title.ImageTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImageTitle_ESTest extends ImageTitle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1, chartRenderingInfo0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(10);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0, 1, 15, rectangleEdge0, horizontalAlignment0, verticalAlignment0, multiplePiePlot0.DEFAULT_INSETS);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.0, 10, (-1.0), (-632.0));
      imageTitle0.setPadding(0.35, 0.0, (double) 15, (double) 15);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      Size2D size2D0 = imageTitle0.drawVertical(graphics2D0, rectangle2D0);
      assertEquals(14.0, size2D0.width, 0.01);
      assertEquals(15.0, imageTitle0.getWidth(), 0.01);
      assertEquals(16.35, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("M{]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      ImageTitle imageTitle0 = new ImageTitle(image0, 10, 10, rectangleEdge0, horizontalAlignment0, verticalAlignment0, symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel(((SunGraphics2D) graphics2D0).foregroundColor);
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      JScrollPane jScrollPane0 = new JScrollPane(jColorChooser0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      imageTitle0.draw(graphics2D0, (Rectangle2D) rectangle0, (Object) imageTitle0);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";/", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(623, 10, (-1397.19228), 0.0, chartRenderingInfo0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge(0);
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0, 623, 10, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<AttributedCharacterIterator.Attribute> vector0 = new Vector<AttributedCharacterIterator.Attribute>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      Rectangle rectangle0 = jTable0.getCellRect(0, 0, false);
      Size2D size2D0 = imageTitle0.drawHorizontal(graphics2D0, rectangle0);
      assertEquals(631.0, size2D0.height, 0.01);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
      assertEquals(16.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&$1.%-a=Ch");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1902.12407), (-10.0), 0.0, 0.0);
      rectangle2D_Double0.setRect(0.0, (double) 0, (-811.4081798195612), (-1902.12407));
      Size2D size2D0 = imageTitle0.drawVertical(graphics2D0, rectangle2D_Double0);
      assertEquals(500.0, imageTitle0.getWidth(), 0.01);
      assertEquals(12.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, true);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, xYLineAndShapeRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, (double) 10, (-0.7853981633974483), chartRenderingInfo0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0, 1, 212, rectangleEdge0, horizontalAlignment0, verticalAlignment0, xYPlot0.DEFAULT_INSETS);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      Size2D size2D0 = imageTitle0.drawVertical(graphics2D0, rectangle2D0);
      assertEquals(9.0, size2D0.height, 0.01);
      assertEquals(212.0, imageTitle0.getWidth(), 0.01);
      assertEquals(16.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("M{]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel(((SunGraphics2D) graphics2D0).foregroundColor);
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      JScrollPane jScrollPane0 = new JScrollPane(jColorChooser0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      Size2D size2D0 = imageTitle0.drawHorizontal(graphics2D0, rectangle0);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
      assertEquals(12.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedRangeXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        imageTitle0.drawVertical(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&$1.%-a=Ch");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        imageTitle0.draw(graphics2D0, (Rectangle2D) null, (Object) numberAxis3D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&$1.%-a=Ch");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        imageTitle0.draw(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LegendTitle legendTitle0 = new LegendTitle(statisticalLineAndShapeRenderer0);
      ImageTitle imageTitle0 = null;
      try {
        imageTitle0 = new ImageTitle((Image) null, legendTitle0.DEFAULT_POSITION, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      ImageTitle imageTitle0 = null;
      try {
        imageTitle0 = new ImageTitle((Image) null, 832, 0, (RectangleEdge) null, horizontalAlignment0, verticalAlignment0, categoryPlot0.DEFAULT_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.title.Title", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImageTitle imageTitle0 = null;
      try {
        imageTitle0 = new ImageTitle((Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(10);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0, 10, 15, rectangleEdge0, horizontalAlignment0, verticalAlignment0, multiplePiePlot0.DEFAULT_INSETS);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 6.0F, 15, (-516.27F));
      imageTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Float0);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
      assertEquals(15.0, imageTitle0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel(((SunGraphics2D) graphics2D0).foregroundColor);
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      JScrollPane jScrollPane0 = new JScrollPane(jColorChooser0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      imageTitle0.draw(graphics2D0, (Rectangle2D) rectangle0);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      RectangleEdge rectangleEdge0 = categoryPlot0.getDomainAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel(((SunGraphics2D) graphics2D0).foregroundColor);
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      JScrollPane jScrollPane0 = new JScrollPane(jColorChooser0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      imageTitle0.draw(graphics2D0, (Rectangle2D) rectangle0);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("M{]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      Object object0 = imageTitle0.clone();
      imageTitle0.setImage(bufferedImage0);
      boolean boolean0 = imageTitle0.equals(object0);
      assertFalse(object0.equals((Object)imageTitle0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("M{]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      ImageTitle imageTitle1 = (ImageTitle)imageTitle0.clone();
      boolean boolean0 = imageTitle0.equals(imageTitle1);
      assertTrue(boolean0);
      assertEquals(10.0, imageTitle1.getWidth(), 0.01);
      assertEquals(10.0, imageTitle1.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("M{]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      boolean boolean0 = imageTitle0.equals(imageTitle0);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
      assertTrue(boolean0);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      boolean boolean0 = imageTitle0.equals(categoryPlot0);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("M{]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel(((SunGraphics2D) graphics2D0).foregroundColor);
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      JScrollPane jScrollPane0 = new JScrollPane(jColorChooser0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      imageTitle0.draw(graphics2D0, (Rectangle2D) rectangle0, (Object) imageTitle0);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, true);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, xYLineAndShapeRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, (double) 10, (-0.7853981633974483), chartRenderingInfo0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0, 1, 212, rectangleEdge0, horizontalAlignment0, verticalAlignment0, xYPlot0.DEFAULT_INSETS);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      imageTitle0.draw(graphics2D0, rectangle2D0);
      assertEquals(212.0, imageTitle0.getWidth(), 0.01);
      assertEquals(1.0, imageTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("A9Po-", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2438, 10, (double) 10, 2.0, chartRenderingInfo0);
      Image image0 = bufferedImage0.getScaledInstance(10, 10, 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      ImageTitle imageTitle0 = new ImageTitle(image0, rectangleEdge0, horizontalAlignment0, verticalAlignment0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel(((SunGraphics2D) graphics2D0).foregroundColor);
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      JScrollPane jScrollPane0 = new JScrollPane(jColorChooser0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      Size2D size2D0 = imageTitle0.drawHorizontal(graphics2D0, rectangle0);
      assertEquals(12.0, size2D0.height, 0.01);
      assertEquals(10.0, imageTitle0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&$A1.%-a=Ch");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      // Undeclared exception!
      try { 
        imageTitle0.setImage((Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      ColumnArrangement columnArrangement0 = new ColumnArrangement(horizontalAlignment0, verticalAlignment0, (-1073.43770894), (-2664.36493257319));
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0, columnArrangement0, columnArrangement0);
      ImageTitle imageTitle0 = null;
      try {
        imageTitle0 = new ImageTitle((Image) null, 32, (-2755), legendTitle0.DEFAULT_POSITION, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, verticalAlignment0, combinedDomainXYPlot0.DEFAULT_INSETS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&$1.%-a=Ch");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      imageTitle0.getImage();
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
      assertEquals(500.0, imageTitle0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&$1.%-a=Ch");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0, 0.75);
      imageTitle0.arrange(graphics2D0, rectangleConstraint0);
      assertEquals(500.0, imageTitle0.getWidth(), 0.01);
      assertEquals(10.0, imageTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&$1.%-a=Ch");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      ImageTitle imageTitle1 = null;
      try {
        imageTitle1 = new ImageTitle(bufferedImage0, imageTitle0.DEFAULT_POSITION, (HorizontalAlignment) null, imageTitle0.DEFAULT_VERTICAL_ALIGNMENT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'horizontalAlignment' argument.
         //
         verifyException("org.jfree.chart.title.Title", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedRangeXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        imageTitle0.drawHorizontal(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }
}
