/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:56:35 GMT 2022
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.text.FieldPosition;
import java.text.Format;
import java.text.ParsePosition;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.axis.QuarterDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QuarterDateFormat_ESTest extends QuarterDateFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("]");
      String[] stringArray0 = new String[8];
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat(timeZone0, stringArray0);
      MockDate mockDate0 = new MockDate(323L);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      quarterDateFormat0.format((Date) mockDate0, stringBuffer0, fieldPosition0);
      assertEquals("1970 null", stringBuffer0.toString());
      assertEquals("1970 null", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes((-3), (-3));
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      String[] stringArray0 = new String[8];
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat(timeZone0, stringArray0, true);
      MockDate mockDate0 = new MockDate();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      // Undeclared exception!
      try { 
        quarterDateFormat0.format((Date) mockDate0, (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.QuarterDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat();
      MockDate mockDate0 = new MockDate((-281L));
      StringBuffer stringBuffer0 = new StringBuffer("");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      quarterDateFormat0.format((Date) mockDate0, stringBuffer0, fieldPosition0);
      assertEquals(6, stringBuffer0.length());
      assertEquals("1969 4", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat();
      quarterDateFormat0.setCalendar((Calendar) null);
      QuarterDateFormat quarterDateFormat1 = new QuarterDateFormat();
      // Undeclared exception!
      try { 
        quarterDateFormat0.equals(quarterDateFormat1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = null;
      try {
        quarterDateFormat0 = new QuarterDateFormat((TimeZone) null, (String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
         verifyException("org.jfree.chart.axis.QuarterDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = null;
      try {
        quarterDateFormat0 = new QuarterDateFormat((TimeZone) null, (String[]) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
         verifyException("org.jfree.chart.axis.QuarterDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat(timeZone0);
      assertTrue(quarterDateFormat0.isLenient());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat();
      QuarterDateFormat quarterDateFormat1 = new QuarterDateFormat();
      boolean boolean0 = quarterDateFormat0.equals(quarterDateFormat1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("l5gS");
      String[] stringArray0 = new String[8];
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat(timeZone0, stringArray0);
      QuarterDateFormat quarterDateFormat1 = new QuarterDateFormat(timeZone0, quarterDateFormat0.GREEK_QUARTERS, false);
      boolean boolean0 = quarterDateFormat0.equals(quarterDateFormat1);
      assertFalse(boolean0);
      assertFalse(quarterDateFormat1.equals((Object)quarterDateFormat0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat();
      boolean boolean0 = quarterDateFormat0.equals(quarterDateFormat0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      String[] stringArray0 = new String[11];
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat(timeZone0, stringArray0, true);
      boolean boolean0 = quarterDateFormat0.equals("ij!LC*@I=u`azt");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      String[] stringArray0 = new String[11];
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat(timeZone0, stringArray0, true);
      MockDate mockDate0 = new MockDate();
      String string0 = quarterDateFormat0.format((Date) mockDate0);
      assertEquals("null 2014", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      String[] stringArray0 = new String[2];
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat(timeZone0, stringArray0);
      MockDate mockDate0 = new MockDate((-5857));
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 1);
      // Undeclared exception!
      try { 
        quarterDateFormat0.format((Date) mockDate0, stringBuffer0, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.chart.axis.QuarterDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = null;
      try {
        quarterDateFormat0 = new QuarterDateFormat((TimeZone) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
         verifyException("org.jfree.chart.axis.QuarterDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuarterDateFormat quarterDateFormat0 = new QuarterDateFormat();
      ParsePosition parsePosition0 = new ParsePosition(1953);
      Date date0 = quarterDateFormat0.parse("oBfBrg}\"nH!cieqQ", parsePosition0);
      assertNull(date0);
  }
}
