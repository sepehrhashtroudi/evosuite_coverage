/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:29:34 GMT 2022
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.RoundingMode;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.NumberTickUnit;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumberTickUnit_ESTest extends NumberTickUnit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("_B,s:H|`kLL Uj");
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(679.1655946296, choiceFormat0);
      String string0 = numberTickUnit0.valueToString(1112.66);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("[ZPmv:rR{X");
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(3642.6116925384, decimalFormat0, (-3099));
      String string0 = numberTickUnit0.toString();
      assertEquals("[size=[ZPmv:rR{X3643]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("[size=");
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(1762.924, choiceFormat0, 0);
      // Undeclared exception!
      try { 
        numberTickUnit0.valueToString(131.706644);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(0.0, numberFormat0);
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      numberFormat0.setRoundingMode(roundingMode0);
      // Undeclared exception!
      try { 
        numberTickUnit0.valueToString((-661.51908812501));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding needed with the rounding mode being set to RoundingMode.UNNECESSARY
         //
         verifyException("java.text.DigitList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("[ZPmv:rR{X");
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(3642.6116925384, decimalFormat0, (-3099));
      decimalFormat0.setPositiveSuffix((String) null);
      // Undeclared exception!
      try { 
        numberTickUnit0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(0.0);
      String string0 = numberTickUnit0.valueToString(0.0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = new NumberTickUnit((-1855.11643789));
      numberTickUnit0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(0.0);
      NumberTickUnit numberTickUnit1 = new NumberTickUnit(0.0);
      boolean boolean0 = numberTickUnit0.equals(numberTickUnit1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(0.0);
      DecimalFormat decimalFormat0 = new DecimalFormat("SRLh");
      NumberTickUnit numberTickUnit1 = new NumberTickUnit(0.0, decimalFormat0);
      boolean boolean0 = numberTickUnit0.equals(numberTickUnit1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = new NumberTickUnit((-1855.11643789));
      Locale locale0 = new Locale("[size=-1,855.116]", "[size=-1,855.116]", "[size=-1,855.116]");
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      NumberTickUnit numberTickUnit1 = new NumberTickUnit((-1855.11643789), numberFormat0, 1891);
      boolean boolean0 = numberTickUnit0.equals(numberTickUnit1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(0.0);
      boolean boolean0 = numberTickUnit0.equals(numberTickUnit0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = null;
      try {
        numberTickUnit0 = new NumberTickUnit(0.0, (NumberFormat) null, (-1375));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.axis.NumberTickUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = null;
      try {
        numberTickUnit0 = new NumberTickUnit(233.1937490602694, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.axis.NumberTickUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NumberTickUnit numberTickUnit0 = new NumberTickUnit((-1855.11643789));
      boolean boolean0 = numberTickUnit0.equals("[size=-1,855.116]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("K1ba*BN~]FZC&");
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(3782.67, choiceFormat0);
      // Undeclared exception!
      try { 
        numberTickUnit0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }
}
