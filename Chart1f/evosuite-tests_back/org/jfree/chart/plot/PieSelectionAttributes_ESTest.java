/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 01:57:58 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.text.AttributedCharacterIterator;
import java.text.DateFormatSymbols;
import java.util.HashMap;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.plaf.synth.SynthViewportUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.plot.PieSelectionAttributes;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.Second;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieSelectionAttributes_ESTest extends PieSelectionAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.isLabelVisible(13, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      Boolean boolean0 = Boolean.valueOf("yyyy-MM-dd");
      Color color0 = (Color)pieSelectionAttributes0.lookupSectionPaint(boolean0);
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Millisecond millisecond0 = new Millisecond();
      Stroke stroke0 = pieSelectionAttributes0.lookupSectionOutlineStroke(millisecond0);
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      MockDate mockDate0 = new MockDate(0, 927, 414);
      TimeZone timeZone0 = TimeZone.getTimeZone("Null 'paint' argument.");
      Locale locale0 = Locale.UK;
      Year year0 = new Year(mockDate0, timeZone0, locale0);
      Color color0 = (Color)pieSelectionAttributes0.lookupSectionOutlinePaint(year0);
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(true);
      Second second0 = new Second();
      Stroke stroke0 = pieSelectionAttributes0.getSectionOutlineStroke(second0);
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      Paint paint0 = pieSelectionAttributes0.getSectionOutlinePaint(fixedMillisecond0);
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      Color color0 = (Color)pieSelectionAttributes0.getDefaultPaint();
      assertEquals(0, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      BasicStroke basicStroke0 = (BasicStroke)pieSelectionAttributes0.getDefaultOutlineStroke();
      assertNotNull(basicStroke0);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      Paint paint0 = pieSelectionAttributes0.getDefaultOutlinePaint();
      pieSelectionAttributes0.setDefaultLabelPaint(paint0);
      Color color0 = (Color)pieSelectionAttributes0.getDefaultLabelPaint();
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      BasicStroke basicStroke0 = new BasicStroke(1987);
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setSectionOutlineStroke((Comparable) null, basicStroke0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.StrokeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      Color color0 = Color.BLACK;
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setSectionOutlinePaint((Comparable) null, color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.PaintMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSeriesLabelVisible(7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSeriesLabelPaint((-1899));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSeriesLabelFont(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSeriesCreateEntity((-1494));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSectionPaint((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.PaintMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSectionOutlineStroke((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.StrokeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSectionOutlinePaint((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.PaintMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getSectionPaint((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.PaintMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setDefaultCreateEntity((Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'create' argument.
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Boolean boolean0 = new Boolean(false);
      pieSelectionAttributes0.setDefaultCreateEntity(boolean0);
      assertFalse(pieSelectionAttributes0.getDefaultCreateEntity());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setDefaultLabelPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setDefaultLabelFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(true);
      HashMap<AttributedCharacterIterator.Attribute, SynthViewportUI> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, SynthViewportUI>();
      Font font0 = new Font(hashMap0);
      pieSelectionAttributes0.setDefaultLabelFont(font0);
      assertEquals(12, font0.getSize());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setDefaultLabelVisible((Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'visible' argument.
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Boolean boolean0 = Boolean.valueOf(true);
      pieSelectionAttributes0.setDefaultLabelVisible(boolean0);
      assertFalse(pieSelectionAttributes0.getAllowNull());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setDefaultOutlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(true);
      BasicStroke basicStroke0 = new BasicStroke(603.9487F);
      pieSelectionAttributes0.setDefaultOutlineStroke(basicStroke0);
      assertNull(pieSelectionAttributes0.getDefaultCreateEntity());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setDefaultOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(true);
      SystemColor systemColor0 = SystemColor.controlShadow;
      pieSelectionAttributes0.setDefaultOutlinePaint(systemColor0);
      assertEquals(128, systemColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Paint paint0 = pieSelectionAttributes0.lookupSectionOutlinePaint("Ezu<eeWv3'uNkk.se");
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setDefaultPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Color color0 = Color.yellow;
      pieSelectionAttributes0.setDefaultPaint(color0);
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Paint paint0 = pieSelectionAttributes0.lookupSectionPaint("The 'data' array must contain three arrays all having the same length.");
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getSeriesLabelPaint(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getSectionOutlinePaint((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.PaintMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setSeriesLabelFont(0, (Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getSeriesLabelVisible(367);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Boolean boolean0 = pieSelectionAttributes0.getDefaultCreateEntity();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getSeriesLabelFont(31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      Stroke stroke0 = pieSelectionAttributes0.lookupSectionOutlineStroke("yyyy-MM-dd");
      pieSelectionAttributes0.setSectionOutlineStroke("yyyy-MM-dd", stroke0);
      Boolean boolean0 = Boolean.valueOf("yyyy-MM-dd");
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.lookupSectionOutlineStroke(boolean0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Boolean
         //
         verifyException("java.lang.Boolean", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Paint paint0 = pieSelectionAttributes0.getSectionPaint("DPgJPwGnxRya,T");
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Boolean boolean0 = pieSelectionAttributes0.getDefaultLabelVisible();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(true);
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setSeriesLabelPaint(0, (Paint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(true);
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getItemLabelFont(273, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      boolean boolean0 = pieSelectionAttributes0.getAllowNull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Paint paint0 = pieSelectionAttributes0.getDefaultPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setSeriesLabelVisible(225, (Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      Paint paint0 = pieSelectionAttributes0.getDefaultLabelPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      MockDate mockDate0 = new MockDate();
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      Locale locale0 = Locale.forLanguageTag("");
      Quarter quarter0 = new Quarter(mockDate0, timeZone0, locale0);
      SystemColor systemColor0 = SystemColor.controlHighlight;
      pieSelectionAttributes0.setSeriesPaint(quarter0, systemColor0);
      assertEquals(1, systemColor0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getItemLabelPaint((-258), (-3701));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Font font0 = pieSelectionAttributes0.getDefaultLabelFont();
      assertNull(font0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getSectionOutlineStroke((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.StrokeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      pieSelectionAttributes0.setSectionOutlinePaint("DPgJPwGnxRya,T", (Paint) null);
      assertNull(pieSelectionAttributes0.getDefaultLabelVisible());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes(false);
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.setSeriesCreateEntity((-3697), boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getCreateEntity(0, (-7));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Paint paint0 = pieSelectionAttributes0.getDefaultOutlinePaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      // Undeclared exception!
      try { 
        pieSelectionAttributes0.getSeriesCreateEntity((-1489));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieSelectionAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PieSelectionAttributes pieSelectionAttributes0 = new PieSelectionAttributes();
      Stroke stroke0 = pieSelectionAttributes0.getDefaultOutlineStroke();
      assertNull(stroke0);
  }
}
