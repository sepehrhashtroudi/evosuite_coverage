/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 01:56:06 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SeriesRenderingOrder_ESTest extends SeriesRenderingOrder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      SeriesRenderingOrder seriesRenderingOrder1 = SeriesRenderingOrder.REVERSE;
      boolean boolean0 = seriesRenderingOrder0.equals(seriesRenderingOrder1);
      assertFalse(boolean0);
      assertFalse(seriesRenderingOrder1.equals((Object)seriesRenderingOrder0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      String string0 = seriesRenderingOrder0.toString();
      assertEquals("SeriesRenderingOrder.FORWARD", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      boolean boolean0 = seriesRenderingOrder0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      boolean boolean0 = seriesRenderingOrder0.equals(seriesRenderingOrder0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      SeriesRenderingOrder seriesRenderingOrder1 = SeriesRenderingOrder.FORWARD;
      boolean boolean0 = seriesRenderingOrder0.equals(seriesRenderingOrder1);
      assertFalse(boolean0);
      assertFalse(seriesRenderingOrder1.equals((Object)seriesRenderingOrder0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      seriesRenderingOrder0.hashCode();
  }
}
