/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:54:17 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.JInternalFrame;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.TransferHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.data.Range;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CombinedDomainXYPlot_ESTest extends CombinedDomainXYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, (-389));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.setFixedRangeAxisSpaceForSubplots((AxisSpace) null);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("*(m8");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      GeneralPath generalPath0 = new GeneralPath(0, 0);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      JFreeChart jFreeChart0 = new JFreeChart("*(m8", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4, 500, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(37.9375, axisSpace0.getBottom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, (Point2D) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3491), 0, 0);
      TimeZone timeZone0 = TimeZone.getTimeZone("org.jfree.chart.plot.CategoryCrosshairState");
      Locale locale0 = Locale.CANADA_FRENCH;
      Week week0 = new Week(mockDate0, timeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.plot.CategoryCrosshairState", week0, week0, timeZone0, locale0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(500, (-858.0424F), 0.0F, 2.0F);
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D_Float0, 1038.8, rectangle2D_Float0, 0.0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes((double) 53, (PlotRenderingInfo) null, point2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis(" Null 'subplot' argument.", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("E1", combinedDomainXYPlot0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.plotChanged((PlotChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(838.0, 0.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.handleClick(406, 406, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDrawingSupplier((DrawingSupplier) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.clone();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'object' argument.
         //
         verifyException("org.jfree.chart.util.ObjectUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ModuloAxis moduloAxis0 = new ModuloAxis("Xob#P9,'n$`-J", (Range) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = null;
      try {
        combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-816), 0, 1.0F);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(0, 1090);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      boolean boolean0 = combinedDomainXYPlot0.equals(waferMapPlot0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("*(m8");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.findSubplot(plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainXYPlot0.findSubplot(plotRenderingInfo0, point2D_Double0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getSubplots();
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add((XYPlot) null, (-2223));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 18);
      assertEquals(18, combinedRangeXYPlot0.getWeight());
      
      combinedDomainXYPlot0.clone();
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      assertTrue(combinedDomainXYPlot1.equals((Object)combinedDomainXYPlot0));
      
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      boolean boolean0 = combinedDomainXYPlot0.equals(combinedDomainXYPlot1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      boolean boolean0 = combinedDomainXYPlot0.equals(combinedDomainXYPlot1);
      assertTrue(boolean0);
      assertEquals(5.0, combinedDomainXYPlot1.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("*(m8");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.handleClick(151, (-1788), plotRenderingInfo0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 18);
      assertEquals(18, combinedRangeXYPlot0.getWeight());
      
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYSplineRenderer0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(meterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes((-1047.7539), 0.0, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      TransferHandler transferHandler0 = new TransferHandler((String) null);
      Point point0 = transferHandler0.getDragImageOffset();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.findSubplot((PlotRenderingInfo) null, point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 18);
      assertEquals(18, combinedRangeXYPlot0.getWeight());
      
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("E1", true, false, false);
      JScrollPane jScrollPane0 = new JScrollPane(jInternalFrame0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      combinedDomainXYPlot0.zoomRangeAxes(0.0, (-217.0), plotRenderingInfo0, (Point2D) point0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 18);
      assertEquals(18, combinedRangeXYPlot0.getWeight());
      
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("E1", true, false, false);
      JScrollPane jScrollPane0 = new JScrollPane(jInternalFrame0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      combinedDomainXYPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point0, true);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 18);
      assertEquals(18, combinedRangeXYPlot0.getWeight());
      
      combinedDomainXYPlot0.getLegendItems();
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 18);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("E1", true, false, false);
      JScrollPane jScrollPane0 = new JScrollPane(jInternalFrame0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.draw((Graphics2D) null, rectangle0, point0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("Combined_Domain_XYPlot");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0, 317);
      combinedDomainXYPlot0.remove(xYPlot0);
      assertEquals(317, xYPlot0.getWeight());
      assertFalse(xYPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      combinedDomainXYPlot0.remove(combinedRangeXYPlot0);
      assertEquals(10, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1546.12225887));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.remove((XYPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.remove(combinedRangeXYPlot0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      assertNotSame(combinedDomainXYPlot1, combinedDomainXYPlot0);
      
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      assertFalse(combinedDomainXYPlot1.equals((Object)combinedDomainXYPlot0));
      
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add((XYPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      assertEquals(10, combinedRangeXYPlot0.getWeight());
      
      combinedDomainXYPlot0.getDataRange((ValueAxis) null);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 18);
      assertEquals(18, combinedRangeXYPlot0.getWeight());
      
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      String string0 = combinedDomainXYPlot0.getPlotType();
      assertEquals("Combined_Domain_XYPlot", string0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(838.0, 0.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      
      combinedDomainXYPlot0.setGap(0.0);
      assertEquals(0.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedDomainXYPlot0.zoomRangeAxes((-1.0), plotRenderingInfo0, (Point2D) point2D_Float0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("*(m8");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      double double0 = combinedDomainXYPlot0.getGap();
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainXYPlot0);
      combinedDomainXYPlot0.plotChanged(plotChangeEvent0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }
}
