/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 01:09:59 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.List;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CombinedDomainCategoryPlot_ESTest extends CombinedDomainCategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.handleClick(0, (-1), plotRenderingInfo0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setFixedRangeAxisSpaceForSubplots((AxisSpace) null);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(983, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateAxisSpace(graphics2D0, defaultCaret0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
      assertEquals(4.0, axisSpace0.getBottom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      plotRenderingInfo0.addSubplotInfo((PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes((double) 680, plotRenderingInfo0, (Point2D) point0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PlotRenderingInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'info' argument.", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes(3805.05543, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("l_}sE02qsJn!dhS");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick((-1), (-1), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      boolean boolean0 = combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.draw((Graphics2D) null, (Rectangle2D) null, point0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ma:{8)xZ@$|Td{$s");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getSubplots();
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) null, 1617);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("$V5vRNnn`Yg$m%1BD}0");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      assertEquals(1, combinedDomainCategoryPlot1.getWeight());
      
      combinedDomainCategoryPlot0.clone();
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("$V5vRNnn`Yg$m%1BD}0");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      boolean boolean0 = combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
      assertEquals(1, combinedDomainCategoryPlot1.getWeight());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("$V5vRNnn`Yg$m%1BD}0");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      boolean boolean0 = combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
      assertEquals(5.0, combinedDomainCategoryPlot1.getGap(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      List list0 = combinedDomainCategoryPlot0.getCategories();
      boolean boolean0 = combinedDomainCategoryPlot0.equals(list0);
      assertFalse(boolean0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 1654);
      assertEquals(1654, combinedDomainCategoryPlot1.getWeight());
      
      combinedDomainCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedDomainCategoryPlot0.add(categoryPlot0, 10);
      assertEquals(10, categoryPlot0.getWeight());
      
      combinedDomainCategoryPlot0.getLegendItems();
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      assertFalse(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
      
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 4056, 10, 10, (-2748), 15, 15, false, true, false, true, true, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("l|oH!7OJKHgSGg", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("5RB@A{YC ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes((double) 1.0F, (-1540.368033043), plotRenderingInfo0, (Point2D) point2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.0) <= upper (-1540.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("#C.&e");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(101, 2048.5946384436197);
      combinedDomainCategoryPlot0.zoomRangeAxes(5.0, 5.0, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0, 1);
      assertEquals(1, combinedRangeCategoryPlot0.getWeight());
      
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      combinedDomainCategoryPlot0.zoomRangeAxes((-842.7444483), plotRenderingInfo0, (Point2D) point0, false);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(901.419, (-958.8720605559), "%]GVF\"5d3%g@");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Point2D point2D0 = combinedDomainXYPlot0.getQuadrantOrigin();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes(901.419, (PlotRenderingInfo) null, point2D0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("$V5vRNnn`Yg$m%1BD}0");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedDomainCategoryPlot0.add(categoryPlot0);
      assertEquals(1, categoryPlot0.getWeight());
      
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.add((CategoryPlot) combinedDomainCategoryPlot0, 1);
      combinedDomainCategoryPlot1.remove(combinedDomainCategoryPlot0);
      assertEquals(1, combinedDomainCategoryPlot0.getWeight());
      assertFalse(combinedDomainCategoryPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.remove((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedDomainCategoryPlot0.add(categoryPlot0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.getCategories();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxisArray0[0]);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0, 500);
      assertEquals(500, combinedRangeCategoryPlot0.getWeight());
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, (-1051));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(":1X~zSa}Y~!Soo-_sQ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      combinedDomainCategoryPlot0.zoomRangeAxes((-296.8862719335), plotRenderingInfo0, (Point2D) point0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double double0 = combinedDomainCategoryPlot0.getGap();
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-944.7382076929116));
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setGap(180.0);
      assertEquals(180.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.plotChanged(plotChangeEvent0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }
}
