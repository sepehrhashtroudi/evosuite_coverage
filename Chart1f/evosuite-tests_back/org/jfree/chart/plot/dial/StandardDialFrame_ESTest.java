/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 01:35:11 GMT 2022
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.util.Vector;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.StandardDialFrame;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.data.general.DefaultValueDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardDialFrame_ESTest extends StandardDialFrame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      Object object0 = standardDialFrame0.clone();
      standardDialFrame0.setRadius(1572.46);
      boolean boolean0 = standardDialFrame0.equals(object0);
      assertEquals(1572.46, standardDialFrame0.getRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      // Undeclared exception!
      try { 
        standardDialFrame0.setRadius((-4689.1382340687));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      // Undeclared exception!
      try { 
        standardDialFrame0.getWindow((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance((-3065.959), (-3065.959));
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, (RenderingHints) null);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-3065.959));
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      NumberAxis numberAxis0 = new NumberAxis("Null 'paint' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, 1.7976931348623157E308, 1.0E-8, (ChartRenderingInfo) null);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      // Undeclared exception!
      try { 
        standardDialFrame0.draw((Graphics2D) null, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      // Undeclared exception!
      try { 
        standardDialFrame0.draw((Graphics2D) null, (DialPlot) null, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      JTable jTable0 = new JTable((Vector) null, (Vector) null);
      Rectangle rectangle0 = jTable0.getCellRect(66, 10, false);
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.width, 0.01);
      assertEquals(0.0, ellipse2D_Double0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      StandardDialFrame standardDialFrame1 = new StandardDialFrame();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      standardDialFrame0.setStroke(basicStroke0);
      Object object0 = standardDialFrame1.clone();
      boolean boolean0 = standardDialFrame0.equals(object0);
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      Object object0 = standardDialFrame0.clone();
      standardDialFrame0.setRadius(1.0F);
      boolean boolean0 = object0.equals(standardDialFrame0);
      assertFalse(boolean0);
      assertEquals(1.0, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 2333.09354);
      DateAxis dateAxis0 = new DateAxis();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale0, dateAxis0);
      Paint paint0 = paintScaleLegend0.getBackgroundPaint();
      standardDialFrame0.setForegroundPaint(paint0);
      StandardDialFrame standardDialFrame1 = new StandardDialFrame();
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame1);
      assertFalse(boolean0);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      StandardDialFrame standardDialFrame1 = new StandardDialFrame();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("@euU^k*~pqz", "@euU^k*~pqz", 864.2412363312482, 0.95);
      Paint paint0 = categoryPointerAnnotation0.getArrowPaint();
      standardDialFrame0.setBackgroundPaint(paint0);
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame1);
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame0);
      assertTrue(boolean0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      JTable jTable0 = new JTable((Vector) null, (Vector) null);
      Rectangle rectangle0 = jTable0.getCellRect(66, 10, false);
      boolean boolean0 = standardDialFrame0.equals(rectangle0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      // Undeclared exception!
      try { 
        standardDialFrame0.setStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      // Undeclared exception!
      try { 
        standardDialFrame0.setForegroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      // Undeclared exception!
      try { 
        standardDialFrame0.setBackgroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      // Undeclared exception!
      try { 
        standardDialFrame0.setRadius(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame0.getStroke();
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      double double0 = standardDialFrame0.getRadius();
      assertEquals(0.95, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      standardDialFrame0.getBackgroundPaint();
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      standardDialFrame0.hashCode();
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      boolean boolean0 = standardDialFrame0.isClippedToWindow();
      assertFalse(boolean0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      JTable jTable0 = new JTable((Vector) null, (Vector) null);
      Rectangle rectangle0 = jTable0.getCellRect(66, 10, false);
      standardDialFrame0.draw(sunGraphics2D0, dialPlot0, rectangle0, rectangle0);
      assertEquals(2, sunGraphics2D0.strokeState);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      standardDialFrame0.getForegroundPaint();
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      boolean boolean0 = standardDialFrame1.equals(standardDialFrame0);
      assertTrue(boolean0);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
  }
}
