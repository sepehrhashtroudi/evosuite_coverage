/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 01:37:34 GMT 2022
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import javax.swing.JTree;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.DialPointer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DialPointer_ESTest extends DialPointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      dialPointer_Pointer0.setWidthRadius((-2034.32273021));
      DialPointer.Pointer dialPointer_Pointer1 = new DialPointer.Pointer();
      boolean boolean0 = dialPointer_Pointer0.equals(dialPointer_Pointer1);
      assertEquals((-2034.32273021), dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer((-1663));
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      
      dialPointer_Pointer0.setWidthRadius(0.0);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(0);
      dialPointer_Pin0.setRadius((-1.0));
      DialPointer.Pin dialPointer_Pin1 = new DialPointer.Pin();
      boolean boolean0 = dialPointer_Pin0.equals(dialPointer_Pin1);
      assertEquals((-1.0), dialPointer_Pin0.getRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      DialPointer.Pointer dialPointer_Pointer1 = new DialPointer.Pointer(0);
      dialPointer_Pointer1.setDatasetIndex(575);
      boolean boolean0 = dialPointer_Pointer0.equals(dialPointer_Pointer1);
      assertEquals(575, dialPointer_Pointer1.getDatasetIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, compassPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 575, 0.0, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DialPlot dialPlot0 = new DialPlot();
      JTree jTree0 = new JTree();
      TreePath treePath0 = jTree0.getClosestPathForLocation(575, (-675));
      Rectangle rectangle0 = jTree0.getPathBounds(treePath0);
      // Undeclared exception!
      try { 
        dialPointer_Pointer0.draw(graphics2D0, dialPlot0, rectangle0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      
      AreaRenderer areaRenderer0 = new AreaRenderer();
      dialPointer_Pin0.radius = (double) areaRenderer0.ZERO;
      double double0 = dialPointer_Pin0.getRadius();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer((-1663));
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      
      dialPointer_Pointer0.setRadius((-1.0));
      double double0 = dialPointer_Pointer0.getRadius();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(70);
      int int0 = dialPointer_Pointer0.getDatasetIndex();
      assertEquals(70, int0);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin((-2388));
      int int0 = dialPointer_Pin0.getDatasetIndex();
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals((-2388), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      boolean boolean0 = dialPointer_Pin0.equals(dialPointer_Pin0);
      assertTrue(boolean0);
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(8);
      DialPointer.Pointer dialPointer_Pointer1 = new DialPointer.Pointer();
      Color color0 = new Color(500);
      dialPointer_Pointer1.setOutlinePaint(color0);
      boolean boolean0 = dialPointer_Pointer1.equals(dialPointer_Pointer0);
      assertEquals(0.9, dialPointer_Pointer1.getRadius(), 0.01);
      assertEquals(0.05, dialPointer_Pointer1.getWidthRadius(), 0.01);
      assertFalse(boolean0);
      assertEquals(8, dialPointer_Pointer0.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(2);
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
      dialPointer_Pointer0.setFillPaint(color0);
      DialPointer.Pointer dialPointer_Pointer1 = new DialPointer.Pointer(0);
      DialPointer.Pointer dialPointer_Pointer2 = (DialPointer.Pointer)dialPointer_Pointer1.clone();
      boolean boolean0 = dialPointer_Pointer0.equals(dialPointer_Pointer2);
      assertFalse(boolean0);
      assertEquals(0.05, dialPointer_Pointer2.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer2.getRadius(), 0.01);
      assertEquals(2, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer2.equals((Object)dialPointer_Pointer1));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      Object object0 = dialPointer_Pointer0.clone();
      dialPointer_Pointer0.setWidthRadius(0.9);
      boolean boolean0 = dialPointer_Pointer0.equals(object0);
      assertEquals(0.9, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      boolean boolean0 = dialPointer_Pointer0.equals(attributedCharacterIterator_Attribute0);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertFalse(boolean0);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      boolean boolean0 = dialPointer_Pointer0.equals(dialPointer_Pointer0);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      // Undeclared exception!
      try { 
        dialPointer_Pointer0.setOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      // Undeclared exception!
      try { 
        dialPointer_Pointer0.setFillPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      boolean boolean0 = dialPointer_Pin0.equals((Object) null);
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      // Undeclared exception!
      try { 
        dialPointer_Pin0.setStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pin", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      dialPointer_Pin0.setStroke(stroke0);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      // Undeclared exception!
      try { 
        dialPointer_Pin0.setPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pin", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(10);
      dialPointer_Pin0.setPaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      DialPointer.Pointer dialPointer_Pointer1 = new DialPointer.Pointer(0);
      assertEquals(0.9, dialPointer_Pointer1.getRadius(), 0.01);
      
      dialPointer_Pointer1.radius = (double) 0;
      boolean boolean0 = dialPointer_Pointer0.equals(dialPointer_Pointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(10);
      DialPointer.Pin dialPointer_Pin1 = (DialPointer.Pin)dialPointer_Pin0.clone();
      boolean boolean0 = dialPointer_Pin0.equals(dialPointer_Pin1);
      assertEquals(0.9, dialPointer_Pin1.getRadius(), 0.01);
      assertTrue(boolean0);
      assertEquals(10, dialPointer_Pin1.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      DialPointer.Pointer dialPointer_Pointer1 = new DialPointer.Pointer((-971));
      boolean boolean0 = dialPointer_Pointer0.equals(dialPointer_Pointer1);
      assertEquals((-971), dialPointer_Pointer1.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer1.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer1.getRadius(), 0.01);
      assertFalse(boolean0);
      assertFalse(dialPointer_Pointer1.equals((Object)dialPointer_Pointer0));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(691);
      dialPointer_Pointer0.getOutlinePaint();
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(691, dialPointer_Pointer0.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      dialPointer_Pointer0.getFillPaint();
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      double double0 = dialPointer_Pointer0.getWidthRadius();
      assertEquals(0.05, double0, 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(10);
      BasicStroke basicStroke0 = (BasicStroke)dialPointer_Pin0.getStroke();
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertEquals(1, basicStroke0.getEndCap());
      assertEquals(2, basicStroke0.getLineJoin());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(3.0F, basicStroke0.getLineWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(10);
      dialPointer_Pin0.hashCode();
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(901);
      DialPlot dialPlot0 = new DialPlot();
      // Undeclared exception!
      try { 
        dialPointer_Pin0.draw((Graphics2D) null, dialPlot0, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pin", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(0);
      dialPointer_Pin0.getPaint();
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(691);
      boolean boolean0 = dialPointer_Pointer0.isClippedToWindow();
      assertEquals(691, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(boolean0);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      dialPointer_Pointer0.hashCode();
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(0);
      int int0 = dialPointer_Pointer0.getDatasetIndex();
      assertEquals(0, int0);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      double double0 = dialPointer_Pin0.getRadius();
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, double0, 0.01);
  }
}
