/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 02:35:14 GMT 2022
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Line2D;
import java.util.Stack;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.renderer.RenderAttributes;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RenderAttributes_ESTest extends RenderAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.getCreateEntity((-2277), 1623);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.getItemLabelPaint(0, (-3364));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.getItemLabelFont(166, 87);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.getItemOutlineStroke(1, (-2967));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.getItemFillPaint(1131, (-847));
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      renderAttributes0.setSeriesStroke(906, (Stroke) null);
      assertNull(renderAttributes0.getDefaultCreateEntity());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      JTable jTable0 = new JTable();
      Color color0 = jTable0.getGridColor();
      renderAttributes0.setSeriesOutlinePaint(0, color0);
      assertNull(renderAttributes0.getDefaultLabelVisible());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Stroke stroke0 = renderAttributes0.lookupSeriesStroke(1429);
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      BasicStroke basicStroke0 = (BasicStroke)renderAttributes0.lookupSeriesStroke(0);
      assertNotNull(basicStroke0);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Shape shape0 = renderAttributes0.lookupSeriesShape((-791));
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      renderAttributes0.setDefaultShape(line2D_Double0);
      Shape shape0 = renderAttributes0.lookupSeriesShape(3274);
      assertSame(shape0, line2D_Double0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.lookupSeriesPaint(3328);
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.lookupSeriesOutlinePaint(0);
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Paint paint0 = renderAttributes0.lookupSeriesOutlinePaint((-775));
      assertEquals(1, paint0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      Paint paint0 = renderAttributes0.lookupSeriesFillPaint(0);
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = (Color)renderAttributes0.lookupSeriesFillPaint(1);
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      BasicStroke basicStroke0 = (BasicStroke)renderAttributes0.getItemStroke((-1184), 872);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = (Color)renderAttributes0.getItemOutlinePaint(414, 414);
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      BasicStroke basicStroke0 = (BasicStroke)renderAttributes0.getDefaultStroke();
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      BasicStroke basicStroke0 = new BasicStroke();
      renderAttributes0.setDefaultOutlineStroke(basicStroke0);
      BasicStroke basicStroke1 = (BasicStroke)renderAttributes0.getDefaultOutlineStroke();
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.getDefaultOutlinePaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = (Color)renderAttributes0.getDefaultFillPaint();
      assertEquals(0, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Boolean boolean0 = Boolean.valueOf("");
      renderAttributes0.setDefaultCreateEntity(boolean0);
      Boolean boolean1 = renderAttributes0.getDefaultCreateEntity();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      StyleContext styleContext0 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      Color color0 = styleContext0.getForeground(styleContext_NamedStyle0);
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesPaint((-1026), color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesFillPaint((-9), (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.lookupSeriesOutlineStroke(1800);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.lookupSeriesLabelVisible((-1610));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.lookupSeriesLabelPaint(2392);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.lookupSeriesLabelFont(1035);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.lookupSeriesCreateEntity(1080);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultCreateEntity((Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'create' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultLabelPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = Color.BLUE;
      renderAttributes0.setDefaultLabelPaint(color0);
      assertNull(renderAttributes0.getDefaultCreateEntity());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultLabelFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("", 0, 0);
      renderAttributes0.setDefaultLabelFont(font0);
      Font font1 = renderAttributes0.getDefaultLabelFont();
      assertEquals(0.0F, font1.getSize2D(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultLabelVisible((Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'visible' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Boolean boolean0 = new Boolean("w&");
      renderAttributes0.setDefaultLabelVisible(boolean0);
      assertFalse(renderAttributes0.getAllowNull());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultOutlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = (Color)renderAttributes0.getItemPaint(60, 60);
      renderAttributes0.setDefaultOutlinePaint(color0);
      assertEquals(0, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultFillPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = (Color)renderAttributes0.getDefaultPaint();
      renderAttributes0.setDefaultFillPaint(color0);
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultShape((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      renderAttributes0.setDefaultShape(line2D_Double0);
      Line2D.Double line2D_Double1 = (Line2D.Double)renderAttributes0.getItemShape(3274, (-1083));
      assertEquals(0.0, line2D_Double1.x1, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      BasicStroke basicStroke0 = new BasicStroke();
      renderAttributes0.setDefaultStroke(basicStroke0);
      assertNull(renderAttributes0.getDefaultCreateEntity());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.setDefaultPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      SystemColor systemColor0 = SystemColor.activeCaption;
      renderAttributes0.setDefaultPaint(systemColor0);
      assertEquals(128, systemColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.getItemOutlinePaint(1291, (-310));
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      boolean boolean0 = renderAttributes0.getAllowNull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesLabelFont(617, (Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.getSeriesLabelVisible(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesCreateEntity(0, (Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Font font0 = renderAttributes0.getDefaultLabelFont();
      assertNull(font0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Shape shape0 = renderAttributes0.getDefaultShape();
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.getDefaultLabelPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Shape shape0 = renderAttributes0.getSeriesShape((-670));
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      SystemColor systemColor0 = SystemColor.inactiveCaptionText;
      renderAttributes0.setSeriesPaint(0, systemColor0);
      SystemColor systemColor1 = (SystemColor)renderAttributes0.lookupSeriesPaint(0);
      assertEquals(192, systemColor1.getRed());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.isLabelVisible(0, (-1412));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      // Undeclared exception!
      try { 
        renderAttributes0.getSeriesCreateEntity(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.getSeriesLabelFont((-681));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Stroke stroke0 = renderAttributes0.getDefaultStroke();
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Boolean boolean0 = renderAttributes0.getDefaultLabelVisible();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesStroke((-670), (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Paint paint0 = renderAttributes0.getSeriesFillPaint((-3222));
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = (Color)renderAttributes0.getDefaultOutlinePaint();
      assertEquals(0, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      Paint paint0 = renderAttributes0.getDefaultFillPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Stroke stroke0 = renderAttributes0.getSeriesStroke(1623);
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      SystemColor systemColor0 = SystemColor.scrollbar;
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesLabelPaint(138, systemColor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Paint paint0 = renderAttributes0.getSeriesPaint(37);
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Stroke stroke0 = renderAttributes0.getDefaultOutlineStroke();
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Rectangle rectangle0 = new Rectangle();
      renderAttributes0.setSeriesShape(421, rectangle0);
      assertEquals(0.0, rectangle0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.getSeriesLabelPaint(75);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesOutlineStroke(1291, (Stroke) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Paint paint0 = renderAttributes0.getSeriesOutlinePaint(1736);
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Stroke stroke0 = renderAttributes0.getItemStroke((-310), 1291);
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Color color0 = Color.green;
      renderAttributes0.setSeriesFillPaint(1, color0);
      assertEquals(0, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.getItemPaint(0, 1657);
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Shape shape0 = renderAttributes0.getItemShape(2469, 1291);
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      Paint paint0 = renderAttributes0.getDefaultPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      Boolean boolean0 = renderAttributes0.getDefaultCreateEntity();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      // Undeclared exception!
      try { 
        renderAttributes0.getSeriesOutlineStroke(449);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(true);
      Stack<Font> stack0 = new Stack<Font>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      JTable jTable0 = new JTable(defaultTableModel0);
      Color color0 = jTable0.getSelectionBackground();
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesOutlinePaint((-2694), color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes(false);
      Color color0 = (Color)renderAttributes0.getItemFillPaint(2001, 2001);
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      RenderAttributes renderAttributes0 = new RenderAttributes();
      // Undeclared exception!
      try { 
        renderAttributes0.setSeriesLabelVisible(4125, (Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.RenderAttributes", e);
      }
  }
}
