/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 02:43:35 GMT 2022
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.util.Locale;
import javax.swing.JLayeredPane;
import javax.swing.border.BevelBorder;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.event.RendererChangeListener;
import org.jfree.chart.labels.CustomXYToolTipGenerator;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.HighLowRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.VectorRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYDotRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.renderer.xy.XYStepRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractRenderer_ESTest extends AbstractRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      barRenderer3D0.setBaseShape(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      assertTrue(barRenderer3D0.getAutoPopulateSeriesPaint());
      assertTrue(barRenderer3D0.getAutoPopulateSeriesStroke());
      assertFalse(barRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, barRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(barRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(barRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertTrue(barRenderer3D0.getBaseSeriesVisibleInLegend());
      assertTrue(barRenderer3D0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      ItemLabelPosition itemLabelPosition0 = candlestickRenderer0.getPositiveItemLabelPosition(5, 5, true);
      categoryStepRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition0);
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1170.12), 2356.64446515, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      ItemLabelPosition itemLabelPosition0 = candlestickRenderer0.getSeriesPositiveItemLabelPosition(1394);
      stackedBarRenderer3D0.setBaseNegativeItemLabelPosition(itemLabelPosition0);
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.fireChangeEvent();
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.setSeriesPositiveItemLabelPosition(1, (ItemLabelPosition) null);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getBaseSeriesVisible());
      assertTrue(xYErrorRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.setSeriesOutlineStroke(1318, (Stroke) null);
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.setSeriesNegativeItemLabelPosition(137, (ItemLabelPosition) null);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setSeriesFillPaint(2, (Paint) null);
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisible());
      assertTrue(stackedBarRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesPaint());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesStroke());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      xYBoxAndWhiskerRenderer0.setLegendTextFont(0, xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT);
      assertTrue(xYBoxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYBoxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBoxAndWhiskerRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYBoxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBoxAndWhiskerRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYBoxAndWhiskerRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYBoxAndWhiskerRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, xYBoxAndWhiskerRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getSeriesVisibleInLegend(10);
      assertTrue(areaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(areaRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(areaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(areaRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, areaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(areaRenderer0.getBaseSeriesVisible());
      assertTrue(areaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(areaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesVisible(0);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(0);
      xYStepAreaRenderer0.getSeriesFillPaint(0);
      assertTrue(xYStepAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYStepAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYStepAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYStepAreaRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, xYStepAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYStepAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYStepAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYStepAreaRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      Color color0 = (Color)waferMapRenderer0.getItemOutlinePaint(0, 1038, true);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(color0);
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getDrawingSupplier();
      assertTrue(areaRenderer0.getBaseSeriesVisible());
      assertTrue(areaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(areaRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, areaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(areaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(areaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(areaRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(areaRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getBasePositiveItemLabelPosition();
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getBaseNegativeItemLabelPosition();
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getBaseSeriesVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)stackedAreaRenderer0.getBaseLegendShape();
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapRenderer waferMapRenderer1 = (WaferMapRenderer)waferMapRenderer0.clone();
      assertTrue(waferMapRenderer1.getBaseSeriesVisible());
      assertFalse(waferMapRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, waferMapRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waferMapRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waferMapRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesVisibleInLegend((-3137), (Boolean) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.setSeriesVisibleInLegend((-378), (Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-715.904833159), 1156.9151611846);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        barRenderer3D0.setSeriesVisible((-706), boolean0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      BevelBorder bevelBorder0 = new BevelBorder(1239, color0, color0, color0, color0);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) defaultTreeCellRenderer0, 1985, 152, 0, (-3238));
      // Undeclared exception!
      try { 
        xYBarRenderer0.setSeriesShape((-1947), (Shape) rectangle0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setSeriesShape((-249), (Shape) line2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(defaultPolarItemRenderer0);
      JFreeChart jFreeChart0 = rendererChangeEvent0.getChart();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setSeriesPaint((-2), jFreeChart0.DEFAULT_BACKGROUND_PAINT, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-704), (-704));
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-704));
      Paint paint0 = candlestickRenderer0.getItemOutlinePaint(80, (-704), false);
      // Undeclared exception!
      try { 
        waferMapRenderer0.setSeriesPaint((-704), paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint0 = ganttRenderer0.getBaseFillPaint();
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesOutlinePaint((-3070), paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setSeriesItemLabelsVisible((-753), (Boolean) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesItemLabelsVisible((-248), (Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      Color color0 = Color.darkGray;
      // Undeclared exception!
      try { 
        standardXYItemRenderer0.setSeriesItemLabelPaint((-2182), (Paint) color0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      // Undeclared exception!
      try { 
        candlestickRenderer0.setSeriesItemLabelFont((-4167), candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setSeriesCreateEntities((-1040), (Boolean) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      // Undeclared exception!
      try { 
        waferMapRenderer0.setSeriesCreateEntities((-1602), (Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      // Undeclared exception!
      try { 
        xYAreaRenderer2_0.setLegendTextPaint((-1551), color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      // Undeclared exception!
      try { 
        candlestickRenderer0.setLegendShape((-1735), barRenderer0.DEFAULT_SHAPE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setBaseStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(thermometerPlot0);
      defaultXYItemRenderer0.notifyListeners(rendererChangeEvent0);
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.setBaseCreateEntities(false, true);
      assertFalse(waferMapRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setSeriesCreateEntities(0, (Boolean) null, true);
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setBaseNegativeItemLabelPosition((ItemLabelPosition) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(2019);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ItemLabelPosition itemLabelPosition0 = stackedAreaRenderer0.getBaseNegativeItemLabelPosition();
      stackedXYAreaRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition0, true);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedXYAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("-57by`;r}:", decimalFormat0, decimalFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-2230), standardXYToolTipGenerator0, standardXYURLGenerator0);
      standardXYItemRenderer0.getSeriesNegativeItemLabelPosition((-873));
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-715.904833159), 1156.9151611846);
      barRenderer3D0.getSeriesPositiveItemLabelPosition(0);
      assertFalse(barRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(barRenderer3D0.getBaseSeriesVisibleInLegend());
      assertTrue(barRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(barRenderer3D0.getBaseSeriesVisible());
      assertTrue(barRenderer3D0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, barRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(barRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertTrue(barRenderer3D0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Color color0 = Color.PINK;
      defaultPolarItemRenderer0.setBaseItemLabelPaint((Paint) color0, true);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      cyclicXYItemRenderer0.setSeriesItemLabelPaint(8, (Paint) color0, true);
      assertEquals(2.0, cyclicXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(cyclicXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelFont(standardXYItemRenderer0.DEFAULT_VALUE_LABEL_FONT, true);
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Color color0 = (Color)Axis.DEFAULT_AXIS_LABEL_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, color0, color0, color0);
      waterfallBarRenderer0.setSeriesItemLabelFont(255, waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, true);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      cyclicXYItemRenderer0.setBaseItemLabelsVisible(true, true);
      assertTrue(cyclicXYItemRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.setSeriesItemLabelsVisible(0, (Boolean) null, true);
      assertTrue(areaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(areaRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, areaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(areaRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(areaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(areaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(areaRenderer0.getBaseSeriesVisible());
      assertTrue(areaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.isSeriesItemLabelsVisible(2053);
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      groupedStackedBarRenderer0.setSeriesShape(0, areaRenderer0.DEFAULT_SHAPE, true);
      assertTrue(areaRenderer0.getBaseSeriesVisible());
      assertTrue(areaRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(areaRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(areaRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, areaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(areaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(areaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(areaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainMinorGridlineStroke();
      statisticalLineAndShapeRenderer0.setBaseOutlineStroke(stroke0, true);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Stroke stroke0 = deviationRenderer0.getItemOutlineStroke((-2060), 0, false);
      assertNotNull(stroke0);
      
      deviationRenderer0.setBaseStroke(stroke0, true);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getBaseSeriesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      xYAreaRenderer2_0.setSeriesStroke(121, (Stroke) null, true);
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesPaint());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesStroke());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisible());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYAreaRenderer2_0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, xYAreaRenderer2_0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Stroke stroke0 = lineRenderer3D0.lookupSeriesStroke(1);
      assertTrue(lineRenderer3D0.getBaseSeriesVisible());
      assertTrue(lineRenderer3D0.getBaseSeriesVisibleInLegend());
      assertTrue(lineRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertNotNull(stroke0);
      assertFalse(lineRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(lineRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertTrue(lineRenderer3D0.getAutoPopulateSeriesStroke());
      assertTrue(lineRenderer3D0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, lineRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      defaultXYItemRenderer0.setBaseOutlinePaint(thermometerPlot0.DEFAULT_OUTLINE_PAINT, true);
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("dPC", areaRenderer0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, true);
      Paint paint0 = jFreeChart0.getBackgroundPaint();
      areaRenderer0.setSeriesOutlinePaint(0, paint0, true);
      assertTrue(areaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(areaRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(areaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(areaRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, areaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(areaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(areaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(areaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setBaseFillPaint(stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, true);
      assertTrue(xYLine3DRenderer0.getBaseSeriesVisible());
      assertTrue(xYLine3DRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYLine3DRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYLine3DRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYLine3DRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYLine3DRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYLine3DRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYLine3DRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      standardXYItemRenderer0.setBasePaint(spiderWebPlot0.DEFAULT_OUTLINE_PAINT, true);
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisible());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      candlestickRenderer0.setSeriesPaint(82, (Paint) null, true);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-704), (-704));
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      
      waferMapRenderer0.setBaseSeriesVisibleInLegend(false, true);
      assertFalse(waferMapRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.setBaseSeriesVisible(true, true);
      assertTrue(highLowRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, highLowRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(highLowRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(highLowRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(highLowRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(highLowRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(highLowRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(highLowRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.setSeriesVisible(2015, (Boolean) null, true);
      assertTrue(barRenderer3D0.getBaseSeriesVisible());
      assertTrue(barRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(barRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(barRenderer3D0.getAutoPopulateSeriesStroke());
      assertFalse(barRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, barRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(barRenderer3D0.getAutoPopulateSeriesPaint());
      assertTrue(barRenderer3D0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      boolean boolean0 = candlestickRenderer0.isSeriesVisible(72);
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(boolean0);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.setBaseLegendShape(defaultXYItemRenderer0.DEFAULT_SHAPE);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesShape(false);
      assertFalse(barRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getLegendShape(43);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.getLegendTextPaint((-1428));
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesStroke());
      assertTrue(stackedBarRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisible());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesPaint());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      deviationRenderer0.getSeriesOutlineStroke((-2060));
      assertTrue(deviationRenderer0.getBaseSeriesVisible());
      assertTrue(deviationRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.getDataBoundsIncludesVisibleSeriesOnly();
      assertTrue(boxAndWhiskerRenderer0.getBaseSeriesVisible());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(boolean0);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(boxAndWhiskerRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, boxAndWhiskerRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesItemLabelsVisible(10, (Boolean) null);
      assertTrue(statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      xYDotRenderer0.getSeriesShape(0);
      assertTrue(xYDotRenderer0.getBaseSeriesVisible());
      assertTrue(xYDotRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYDotRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYDotRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      xYBarRenderer0.getSeriesOutlinePaint((-1947));
      assertTrue(xYBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, xYBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBarRenderer0.getBaseSeriesVisible());
      assertFalse(xYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = (DefaultPolarItemRenderer)defaultPolarItemRenderer0.clone();
      boolean boolean0 = defaultPolarItemRenderer0.equals(defaultPolarItemRenderer1);
      assertFalse(defaultPolarItemRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer1.getBaseSeriesVisibleInLegend());
      assertFalse(defaultPolarItemRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(boolean0);
      assertTrue(defaultPolarItemRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer1.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      boolean boolean0 = defaultPolarItemRenderer0.equals(defaultPolarItemRenderer0);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(boolean0);
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Color color0 = (Color)defaultPolarItemRenderer0.lookupSeriesPaint(193);
      assertNotNull(color0);
      
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      boolean boolean0 = waferMapRenderer0.equals(color0);
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(255, color0.getBlue());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(boolean0);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-2948), 2518);
      Locale locale0 = new Locale("ZOOM_OUT_BOTH", "ZOOM_OUT_BOTH", " out of bounds.");
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance(1, locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("ZOOM_OUT_BOTH", dateFormat0, dateFormat0, dateFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      boolean boolean0 = waferMapRenderer0.hasListener(xYAreaRenderer2_0);
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisible());
      assertTrue(xYAreaRenderer2_0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisibleInLegend());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, xYAreaRenderer2_0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesFillPaint());
      assertFalse(boolean0);
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesStroke());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-2596.5079));
      // Undeclared exception!
      try { 
        candlestickRenderer0.removeChangeListener((RendererChangeListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'listener' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      xYStepRenderer0.removeChangeListener(combinedRangeCategoryPlot0);
      assertTrue(xYStepRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYStepRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYStepRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYStepRenderer0.getBaseSeriesVisible());
      assertFalse(xYStepRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYStepRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, xYStepRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYStepRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addChangeListener((RendererChangeListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'listener' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(3855.2941230280835);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(63, 55, xYBoxAndWhiskerRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYBoxAndWhiskerRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE4;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)waferMapRenderer0.calculateLabelAnchorPoint(itemLabelAnchor0, 2198.097388, 2198.097388, plotOrientation0);
      assertEquals(2199.097388, point2D_Double0.y, 0.01);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2199.829438807569, point2D_Double0.x, 0.01);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertNotNull(point2D_Double0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE4;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)waferMapRenderer0.calculateLabelAnchorPoint(itemLabelAnchor0, 118.6, 0.5235987755982988, plotOrientation0);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.5235987755982987, point2D_Double0.y, 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Font font0 = minMaxCategoryRenderer0.lookupLegendTextFont(0);
      assertTrue(minMaxCategoryRenderer0.getBaseSeriesVisible());
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(minMaxCategoryRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
      assertNull(font0);
      assertEquals(2.0, minMaxCategoryRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.setTreatLegendShapeAsLine(true);
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setTreatLegendShapeAsLine(false);
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)ganttRenderer0.lookupLegendShape(0);
      assertTrue(ganttRenderer0.getBaseSeriesVisible());
      assertTrue(ganttRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(ganttRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, ganttRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(ganttRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(ganttRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(ganttRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(ganttRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2537, 1573);
      waferMapRenderer0.setBaseCreateEntities(false, false);
      assertFalse(waferMapRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1170.12), 2356.64446515, false);
      stackedBarRenderer3D0.setSeriesCreateEntities(0, (Boolean) null, false);
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesPaint());
      assertTrue(stackedBarRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisible());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getItemCreateEntity(0, (-380), false);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      // Undeclared exception!
      try { 
        defaultXYItemRenderer0.setBaseNegativeItemLabelPosition((ItemLabelPosition) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1134.2));
      ItemLabelPosition itemLabelPosition0 = candlestickRenderer0.getPositiveItemLabelPosition((-3080), 298, false);
      defaultPolarItemRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition0, true);
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      layeredBarRenderer0.setSeriesNegativeItemLabelPosition(2, itemLabelPosition0, false);
      assertTrue(layeredBarRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(layeredBarRenderer0.getBaseSeriesVisible());
      assertTrue(layeredBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, layeredBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(layeredBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(layeredBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(layeredBarRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(layeredBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1134.2));
      ItemLabelPosition itemLabelPosition0 = candlestickRenderer0.getPositiveItemLabelPosition((-3080), 298, false);
      assertNotNull(itemLabelPosition0);
      
      defaultPolarItemRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition0, false);
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setBasePositiveItemLabelPosition((ItemLabelPosition) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE4;
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      waferMapRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition0, true);
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      ItemLabelPosition itemLabelPosition0 = areaRenderer0.getBasePositiveItemLabelPosition();
      defaultPolarItemRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition0, false);
      assertTrue(areaRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(areaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(areaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(areaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(areaRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(areaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(areaRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, areaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.setBaseItemLabelPaint(layeredBarRenderer0.DEFAULT_PAINT, false);
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      // Undeclared exception!
      try { 
        candlestickRenderer0.setBaseItemLabelPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      defaultPolarItemRenderer0.setSeriesItemLabelPaint(10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, false);
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      Color color0 = (Color)xYLine3DRenderer0.getItemLabelPaint((-248), (-248), true);
      assertNotNull(color0);
      assertTrue(xYLine3DRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYLine3DRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYLine3DRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYLine3DRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYLine3DRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYLine3DRenderer0.getBaseSeriesVisible());
      assertFalse(xYLine3DRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYLine3DRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals((-16777216), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setBaseItemLabelFont((Font) null, false);
      assertTrue(xYShapeRenderer0.getBaseSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      // Undeclared exception!
      try { 
        deviationRenderer0.setBaseItemLabelFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseItemLabelFont(defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT);
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      stackedXYBarRenderer0.setSeriesItemLabelFont(0, (Font) null, false);
      assertTrue(stackedXYBarRenderer0.getBaseSeriesVisible());
      assertFalse(stackedXYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedXYBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedXYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, stackedXYBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedXYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedXYBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedXYBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      Font font0 = xYDifferenceRenderer0.getItemLabelFont(3, 0, false);
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisible());
      assertTrue(xYDifferenceRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYDifferenceRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertNotNull(font0);
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelsVisible(false, false);
      assertEquals(2.0, ganttRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(ganttRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(ganttRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(ganttRenderer0.getBaseItemLabelsVisible());
      assertTrue(ganttRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(ganttRenderer0.getBaseSeriesVisible());
      assertTrue(ganttRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(ganttRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(ganttRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      candlestickRenderer0.setSeriesItemLabelsVisible(82, (Boolean) null, false);
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      standardXYItemRenderer0.setBaseShape(meterPlot0.DEFAULT_LEGEND_ITEM_BOX, false);
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisible());
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      // Undeclared exception!
      try { 
        xYSplineRenderer0.setBaseShape((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      Shape shape0 = standardXYItemRenderer0.getItemShape(1771, 751, true);
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(shape0);
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Shape shape0 = xYShapeRenderer0.getItemShape(10, 934, false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(shape0);
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Stroke stroke0 = thermometerPlot0.getThermometerStroke();
      defaultXYItemRenderer0.setBaseOutlineStroke(stroke0, false);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setBaseOutlineStroke((Stroke) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Stroke stroke0 = cyclicXYItemRenderer0.lookupSeriesOutlineStroke(132);
      assertNotNull(stroke0);
      
      cyclicXYItemRenderer0.setSeriesOutlineStroke(193, stroke0, true);
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, cyclicXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(cyclicXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      standardXYItemRenderer0.setSeriesOutlineStroke(10, meterPlot0.DEFAULT_OUTLINE_STROKE, false);
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseStroke(xYSplineRenderer0.DEFAULT_OUTLINE_STROKE, false);
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      // Undeclared exception!
      try { 
        candlestickRenderer0.setBaseStroke((Stroke) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1170.12), 2356.64446515, false);
      stackedBarRenderer3D0.clearSeriesStrokes(true);
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesStroke());
      assertTrue(stackedBarRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.clearSeriesStrokes(false);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getBaseSectionOutlineStroke();
      groupedStackedBarRenderer0.setSeriesStroke(0, stroke0, false);
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisible());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Paint paint0 = lineRenderer3D0.getWallPaint();
      vectorRenderer0.setBaseOutlinePaint(paint0, false);
      assertTrue(lineRenderer3D0.getBaseSeriesVisible());
      assertTrue(lineRenderer3D0.getBaseSeriesVisibleInLegend());
      assertTrue(lineRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(lineRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(lineRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertTrue(lineRenderer3D0.getAutoPopulateSeriesStroke());
      assertTrue(lineRenderer3D0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, lineRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(vectorRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.setSeriesOutlinePaint(0, defaultXYItemRenderer0.DEFAULT_OUTLINE_PAINT, false);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      cyclicXYItemRenderer0.setBaseFillPaint((Paint) color0, false);
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, cyclicXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(cyclicXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      // Undeclared exception!
      try { 
        cyclicXYItemRenderer0.setBaseFillPaint((Paint) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setSeriesFillPaint(0, (Paint) null, true);
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisible());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      xYSplineRenderer0.setSeriesFillPaint(788, defaultPolarItemRenderer0.DEFAULT_PAINT, false);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYSplineRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      Color color0 = (Color)xYBarRenderer0.getItemFillPaint((-1947), (-3238), true);
      assertTrue(xYBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(255, color0.getGreen());
      assertTrue(xYBarRenderer0.getBaseSeriesVisible());
      assertFalse(xYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Color color0 = (Color)stackedAreaRenderer0.getItemFillPaint(0, 10, false);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(color0);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertEquals(255, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      defaultXYItemRenderer0.setBasePaint(thermometerPlot0.DEFAULT_OUTLINE_PAINT, false);
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.clearSeriesPaints(true);
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.clearSeriesPaints(false);
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setSeriesPaint(788, xYSplineRenderer0.DEFAULT_VALUE_LABEL_PAINT, false);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Color color0 = (Color)defaultPolarItemRenderer0.getItemPaint(5, 1, true);
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertNotNull(color0);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertEquals((-16776961), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      Color color0 = (Color)xYStepAreaRenderer0.getItemPaint(15, 10, false);
      assertEquals(2.0, xYStepAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYStepAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotNull(color0);
      assertTrue(xYStepAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYStepAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYStepAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYStepAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYStepAreaRenderer0.getBaseSeriesVisible());
      assertTrue(xYStepAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(255, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      
      groupedStackedBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
      assertFalse(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesVisibleInLegend(5, (Boolean) null, false);
      assertTrue(defaultCategoryItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultCategoryItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultCategoryItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultCategoryItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultCategoryItemRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, defaultCategoryItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultCategoryItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultCategoryItemRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      boolean boolean0 = stackedBarRenderer0.isSeriesVisibleInLegend(273);
      assertTrue(stackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(stackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedBarRenderer0.getBaseSeriesVisible());
      assertTrue(boolean0);
      assertTrue(stackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseSeriesVisible(true, false);
      assertTrue(lineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(lineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(lineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, lineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(lineAndShapeRenderer0.getBaseSeriesVisible());
      assertFalse(lineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(lineAndShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(lineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setSeriesVisible(670, (Boolean) null, false);
      assertTrue(categoryStepRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(categoryStepRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(categoryStepRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, categoryStepRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setSeriesVisible(1, (Boolean) null);
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      
      standardXYItemRenderer0.setAutoPopulateSeriesPaint(false);
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      xYBoxAndWhiskerRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      assertTrue(xYBoxAndWhiskerRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      candlestickRenderer0.getSeriesItemLabelPaint(499);
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Stroke stroke0 = barRenderer3D0.getItemStroke(1652, 1652, true);
      assertTrue(barRenderer3D0.getAutoPopulateSeriesPaint());
      assertNotNull(stroke0);
      assertTrue(barRenderer3D0.getBaseSeriesVisible());
      assertFalse(barRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertTrue(barRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(barRenderer3D0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, barRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(barRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(barRenderer3D0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.getSeriesItemLabelsVisible(0);
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      standardXYItemRenderer0.getSeriesPaint(234);
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Color color0 = (Color)groupedStackedBarRenderer0.lookupSeriesOutlinePaint(0);
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisible());
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertNotNull(color0);
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals((-8355712), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Paint paint0 = barRenderer0.lookupLegendTextPaint(82);
      assertEquals(2.0, barRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(barRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(barRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(barRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(barRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(barRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(barRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(barRenderer0.getBaseSeriesVisible());
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      Paint paint0 = spiderWebPlot0.getAxisLinePaint();
      standardXYItemRenderer0.setSeriesPaint(0, paint0);
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisible());
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.setLegendTextFont((-412), xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
      waferMapRenderer0.getTreatLegendShapeAsLine();
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setDefaultEntityRadius(1277);
      assertEquals(1277, defaultPolarItemRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Paint paint0 = lineRenderer3D0.getWallPaint();
      vectorRenderer0.setSeriesItemLabelPaint(1, paint0);
      Color color0 = (Color)vectorRenderer0.getSeriesItemLabelPaint(1);
      assertEquals(2.0, vectorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(vectorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(color0);
      assertTrue(vectorRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(vectorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(vectorRenderer0.getBaseSeriesVisible());
      assertEquals(221, color0.getRed());
      assertFalse(vectorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(vectorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(vectorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      xYStepRenderer0.setBaseFillPaint(paint0);
      assertTrue(xYStepRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYStepRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYStepRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYStepRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYStepRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYStepRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYStepRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, xYStepRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      candlestickRenderer0.setBaseOutlinePaint(barRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.getBaseCreateEntities();
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      Shape shape0 = xYDifferenceRenderer0.getBaseLegendShape();
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisible());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNull(shape0);
      assertTrue(xYDifferenceRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYDifferenceRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setBaseLegendTextFont((Font) null);
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      Color color0 = (Color)xYAreaRenderer0.lookupSeriesFillPaint(0);
      assertTrue(xYAreaRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYAreaRenderer0.getBaseSeriesVisible());
      assertFalse(xYAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYAreaRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(color0);
      assertFalse(xYAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals((-1), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesStroke());
      
      xYDifferenceRenderer0.setAutoPopulateSeriesStroke(false);
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setBaseItemLabelsVisible(false);
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(groupedStackedBarRenderer0.getBaseItemLabelsVisible());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisible());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      stackedBarRenderer3D0.setBaseStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      assertTrue(stackedBarRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisible());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesStroke());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      barRenderer0.setSeriesShape(499, candlestickRenderer0.DEFAULT_SHAPE);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(barRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseCreateEntities(true);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesCreateEntities(2218);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Color color0 = (Color)barRenderer3D0.getBaseItemLabelPaint();
      assertTrue(barRenderer3D0.getBaseSeriesVisibleInLegend());
      assertFalse(barRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(barRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(barRenderer3D0.getAutoPopulateSeriesStroke());
      assertTrue(barRenderer3D0.getAutoPopulateSeriesPaint());
      assertEquals(0, color0.getBlue());
      assertTrue(barRenderer3D0.getBaseSeriesVisible());
      assertEquals(2.0, barRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(barRenderer3D0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.getAutoPopulateSeriesShape();
      assertEquals(2.0, groupedStackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisible());
      assertTrue(groupedStackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      stackedXYBarRenderer0.getSeriesItemLabelFont((-1101));
      assertFalse(stackedXYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedXYBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedXYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedXYBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedXYBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(stackedXYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(stackedXYBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, stackedXYBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getBaseShape();
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      // Undeclared exception!
      try { 
        xYAreaRenderer0.setSeriesNegativeItemLabelPosition((-2997), (ItemLabelPosition) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      standardXYItemRenderer0.setBaseItemLabelPaint(spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT);
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      boolean boolean0 = standardXYItemRenderer0.getBaseSeriesVisible();
      assertEquals(2.0, standardXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(standardXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(boolean0);
      assertFalse(standardXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(standardXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      boolean boolean0 = xYDifferenceRenderer0.getBaseSeriesVisibleInLegend();
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYDifferenceRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYDifferenceRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisible());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Color color0 = (Color)TextAnnotation.DEFAULT_PAINT;
      stackedBarRenderer0.setSeriesOutlinePaint(273, (Paint) color0);
      assertEquals(2.0, stackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedBarRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(stackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedBarRenderer0.getBaseSeriesVisible());
      assertTrue(stackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(stackedBarRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Font font0 = defaultPolarItemRenderer0.getBaseLegendTextFont();
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNull(font0);
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getSelectedItemAttributes();
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Shape shape0 = cyclicXYItemRenderer0.lookupLegendShape(0);
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertNotNull(shape0);
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, cyclicXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(cyclicXYItemRenderer0.getBaseSeriesVisible());
      assertTrue(cyclicXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getDefaultEntityRadius();
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(categoryStepRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, categoryStepRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(categoryStepRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(categoryStepRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(0, (XYToolTipGenerator) null, standardXYURLGenerator0);
      boolean boolean0 = stackedXYAreaRenderer0.getAutoPopulateSeriesFillPaint();
      assertEquals(2.0, stackedXYAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedXYAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedXYAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedXYAreaRenderer0.getBaseSeriesVisible());
      assertTrue(stackedXYAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedXYAreaRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(stackedXYAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesItemLabelFont(1024, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_FONT);
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.getBaseStroke();
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesPaint());
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesStroke());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisible());
      assertTrue(stackedBarRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      candlestickRenderer0.setLegendShape(1, barRenderer0.DEFAULT_SHAPE);
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Paint paint0 = combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      defaultPolarItemRenderer0.setBasePaint(paint0);
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      assertFalse(cyclicXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      cyclicXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      assertTrue(cyclicXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      boolean boolean0 = barRenderer0.getAutoPopulateSeriesPaint();
      assertFalse(barRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(barRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(barRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(boolean0);
      assertTrue(barRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(barRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(barRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, barRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      ItemLabelPosition itemLabelPosition0 = xYShapeRenderer0.getNegativeItemLabelPosition(0, (-3506), true);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisible());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(itemLabelPosition0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setSeriesVisibleInLegend(10, (Boolean) false);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1496.15), (-1496.15));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setLegendTextPaint(0, stackedBarRenderer3D0.DEFAULT_WALL_PAINT);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      PiePlot piePlot0 = new PiePlot();
      Stroke stroke0 = piePlot0.getBaseSectionOutlineStroke();
      xYBlockRenderer0.setSeriesStroke(0, stroke0);
      assertFalse(xYBlockRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYBlockRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBlockRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBlockRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYBlockRenderer0.getBaseSeriesVisible());
      assertFalse(xYBlockRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBlockRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBlockRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      ItemLabelPosition itemLabelPosition0 = xYShapeRenderer0.getPositiveItemLabelPosition(10, 10, false);
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertNotNull(itemLabelPosition0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      xYLine3DRenderer0.setBaseOutlineStroke(candlestickRenderer0.DEFAULT_STROKE);
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYLine3DRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getBaseItemLabelsVisible();
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.getLegendTextFont(0);
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setAutoPopulateSeriesFillPaint(false);
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-3761.303552805639));
      Shape shape0 = candlestickRenderer0.lookupSeriesShape(0);
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(shape0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getAutoPopulateSeriesOutlineStroke();
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(categoryStepRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, categoryStepRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(categoryStepRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(categoryStepRenderer0.getBaseSeriesVisible());
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      boolean boolean0 = xYStepAreaRenderer0.getItemVisible(3, 3);
      assertTrue(xYStepAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYStepAreaRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYStepAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYStepAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYStepAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(boolean0);
      assertFalse(xYStepAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYStepAreaRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      boolean boolean0 = waferMapRenderer0.getAutoPopulateSeriesOutlinePaint();
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      boolean boolean0 = candlestickRenderer0.getAutoPopulateSeriesStroke();
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(boolean0);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setSeriesCreateEntities(408, (Boolean) null);
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesStroke(193);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setSeriesItemLabelsVisible(10, false);
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(0);
      stackedXYAreaRenderer0.getBaseOutlineStroke();
      assertTrue(stackedXYAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(stackedXYAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(stackedXYAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(stackedXYAreaRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(stackedXYAreaRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(stackedXYAreaRenderer0.getBaseSeriesVisible());
      assertFalse(stackedXYAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, stackedXYAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setItemLabelAnchorOffset(1000000.0);
      assertEquals(1000000.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2.0, defaultPolarItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      assertTrue(defaultPolarItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(defaultPolarItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultPolarItemRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      xYDifferenceRenderer0.getBaseItemLabelFont();
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYDifferenceRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisible());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYDifferenceRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(78, customXYToolTipGenerator0);
      // Undeclared exception!
      try { 
        standardXYItemRenderer0.setSeriesOutlineStroke((-1936), (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      Color color0 = (Color)waferMapRenderer0.getBaseOutlinePaint();
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waferMapRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getBaseSeriesVisible());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(128, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.isItemLabelVisible((-731), 2, true);
      assertTrue(categoryStepRenderer0.getBaseSeriesVisible());
      assertTrue(categoryStepRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(categoryStepRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, categoryStepRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(categoryStepRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(3, (XYToolTipGenerator) null);
      assertTrue(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
      
      standardXYItemRenderer0.setBaseSeriesVisibleInLegend(false);
      assertFalse(standardXYItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setSeriesFillPaint((-1696), stackedAreaRenderer0.DEFAULT_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.setSeriesPositiveItemLabelPosition((-728), itemLabelPosition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      Color color0 = (Color)xYDifferenceRenderer0.getBasePaint();
      assertTrue(xYDifferenceRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisible());
      assertTrue(xYDifferenceRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, xYDifferenceRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYDifferenceRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(255, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      barRenderer3D0.setBaseLegendTextPaint(candlestickRenderer0.DEFAULT_PAINT);
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, candlestickRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(candlestickRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(candlestickRenderer0.getBaseSeriesVisible());
      assertTrue(candlestickRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(candlestickRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(candlestickRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, barRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getItemLabelAnchorOffset();
      assertFalse(ganttRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(ganttRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(ganttRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, double0, 0.01);
      assertTrue(ganttRenderer0.getBaseSeriesVisible());
      assertFalse(ganttRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(ganttRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(ganttRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      assertTrue(defaultPolarItemRenderer0.getBaseSeriesVisible());
      
      defaultPolarItemRenderer0.setBaseSeriesVisible(false);
      assertFalse(defaultPolarItemRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      xYBarRenderer0.hashCode();
      assertTrue(xYBarRenderer0.getBaseSeriesVisible());
      assertFalse(xYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYBarRenderer0.getAutoPopulateSeriesPaint());
  }
}
