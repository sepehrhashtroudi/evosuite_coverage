/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 02:57:33 GMT 2022
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.data.Range;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYShapeRenderer_ESTest extends XYShapeRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.getPaint(defaultXYZDataset0, 1358, 45, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1358, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      
      xYShapeRenderer0.setGuideLinesVisible(true);
      boolean boolean0 = xYShapeRenderer0.isGuideLinesVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      
      xYShapeRenderer0.setUseFillPaint(true);
      boolean boolean0 = xYShapeRenderer0.getUseFillPaint();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      
      xYShapeRenderer0.setDrawOutlines(true);
      boolean boolean0 = xYShapeRenderer0.getDrawOutlines();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      MatrixSeries matrixSeries0 = new MatrixSeries("", 1, 1);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      Range range0 = xYShapeRenderer0.findRangeBounds(matrixSeriesCollection0);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      TimeSeries timeSeries0 = new TimeSeries(xYShapeRenderer0.ZERO);
      MockDate mockDate0 = new MockDate();
      Year year0 = new Year(mockDate0);
      timeSeries0.add((RegularTimePeriod) year0, (Number) xYShapeRenderer0.ZERO, true);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      Range range0 = xYShapeRenderer0.findDomainBounds(timeSeriesCollection0);
      assertEquals(1.39240928132E12, range0.getCentralValue(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2, 10, 340, 10, 10);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[8];
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-5.0), 135.0, (-3.0), 0.0F, 0);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItem0;
      oHLCDataItemArray0[2] = oHLCDataItemArray0[0];
      oHLCDataItemArray0[3] = oHLCDataItemArray0[1];
      oHLCDataItemArray0[4] = oHLCDataItemArray0[3];
      oHLCDataItemArray0[5] = oHLCDataItemArray0[0];
      oHLCDataItemArray0[6] = oHLCDataItemArray0[3];
      oHLCDataItemArray0[7] = oHLCDataItemArray0[6];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("h? ejC", oHLCDataItemArray0);
      Range range0 = xYShapeRenderer0.findDomainBounds(defaultOHLCDataset0);
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals((-2.090325E12), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.getPaint(defaultXYZDataset0, (-473), (-473), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.findRangeBounds(timeSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) xYShapeRenderer0.ZERO, (double) xYShapeRenderer0.ZERO, 0.0, (double) xYShapeRenderer0.ZERO);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("(u]");
      // Undeclared exception!
      try { 
        xYShapeRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D_Double0, combinedDomainXYPlot0, logarithmicAxis0, logarithmicAxis0, (XYDataset) null, 0, 500, false, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("}WeU<\"A:/,>zwlV", xYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 616.00326, 0.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(simpleTimeZone0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = stackedXYAreaRenderer0.initialise(graphics2D0, (Rectangle2D) null, xYPlot0, timeTableXYDataset0, plotRenderingInfo0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, xYPlot0, numberAxis3D0, numberAxis3D0, timeTableXYDataset0, 10, 1, true, 500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYShapeRenderer xYShapeRenderer1 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYShapeRenderer xYShapeRenderer1 = new XYShapeRenderer();
      xYShapeRenderer1.setDrawOutlines(true);
      boolean boolean0 = xYShapeRenderer1.equals(xYShapeRenderer0);
      assertTrue(xYShapeRenderer1.getDrawOutlines());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYShapeRenderer xYShapeRenderer1 = new XYShapeRenderer();
      boolean boolean0 = xYShapeRenderer0.equals(xYShapeRenderer1);
      assertTrue(boolean0);
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      boolean boolean0 = xYShapeRenderer0.equals(xYShapeRenderer0);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      boolean boolean0 = xYShapeRenderer0.equals((Object) null);
      assertFalse(boolean0);
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      
      xYShapeRenderer0.setUseFillPaint(true);
      xYShapeRenderer0.getPaint((XYDataset) null, 10, 1, false);
      assertTrue(xYShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Color color0 = (Color)xYShapeRenderer0.getPaint((XYDataset) null, 2, 39, false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals((-16776961), color0.getRGB());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("}WeU<\"A:/,>zwlV", xYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 616.00326, 0.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(simpleTimeZone0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = stackedXYAreaRenderer0.initialise(graphics2D0, (Rectangle2D) null, xYPlot0, timeTableXYDataset0, plotRenderingInfo0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, xYPlot0, numberAxis3D0, numberAxis3D0, timeTableXYDataset0, 10, (-3974), true, 500);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Year year0 = new Year(3261);
      Week week0 = new Week(3261, year0);
      TimeZone timeZone0 = TimeZone.getTimeZone("bI");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3261, 3261, week0, timeZone0);
      Range range0 = xYShapeRenderer0.findRangeBounds(dynamicTimeSeriesCollection0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.findRangeBounds((XYDataset) null);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      TimeSeries timeSeries0 = new TimeSeries(xYShapeRenderer0.ZERO);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      // Undeclared exception!
      try { 
        xYShapeRenderer0.findDomainBounds(timeSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.findDomainBounds((XYDataset) null);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.setGuideLineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      BasicStroke basicStroke0 = (BasicStroke)XYPlot.DEFAULT_GRIDLINE_STROKE;
      xYShapeRenderer0.setGuideLineStroke(basicStroke0);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.setGuideLinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Color color0 = new Color(0, false);
      xYShapeRenderer0.setGuideLinePaint(color0);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.setPaintScale((PaintScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      
      xYShapeRenderer0.setUseOutlinePaint(false);
      boolean boolean0 = xYShapeRenderer0.getUseOutlinePaint();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      boolean boolean0 = xYShapeRenderer0.getDrawOutlines();
      assertFalse(boolean0);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      boolean boolean0 = xYShapeRenderer0.getUseFillPaint();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(boolean0);
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      PaintScale paintScale0 = xYShapeRenderer0.getPaintScale();
      xYShapeRenderer0.setPaintScale(paintScale0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      boolean boolean0 = xYShapeRenderer0.isGuideLinesVisible();
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(boolean0);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.getGuideLineStroke();
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      int int0 = xYShapeRenderer0.getPassCount();
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2, int0);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Color color0 = (Color)xYShapeRenderer0.getGuideLinePaint();
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(64, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      boolean boolean0 = xYShapeRenderer0.getUseOutlinePaint();
      assertTrue(boolean0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
  }
}
