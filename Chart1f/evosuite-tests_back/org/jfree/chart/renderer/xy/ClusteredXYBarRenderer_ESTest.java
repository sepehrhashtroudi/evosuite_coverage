/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 02:47:51 GMT 2022
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.data.Range;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.Hour;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClusteredXYBarRenderer_ESTest extends ClusteredXYBarRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(timePeriodValuesCollection0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(2610.39859347504, true);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[2];
      histogramDataset0.addSeries((Comparable) clusteredXYBarRenderer0.ZERO, doubleArray0, 3945, (-1592.7950214925636), (double) clusteredXYBarRenderer0.ZERO);
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(histogramDataset0);
      assertNotNull(range0);
      assertEquals((-796.5993859074342), range0.getCentralValue(), 0.01);
      assertEquals(1592.7950214925636, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(2611.5041387300134, true);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[2];
      histogramDataset0.addSeries((Comparable) clusteredXYBarRenderer0.ZERO, doubleArray0, 3945, (double) clusteredXYBarRenderer0.ZERO, (double) clusteredXYBarRenderer0.ZERO);
      Range range0 = clusteredXYBarRenderer0.findDomainBounds(histogramDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertNotNull(range0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Locale locale0 = Locale.CANADA_FRENCH;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", locale0);
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 2, timeZone0);
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.findDomainBounds(dynamicTimeSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(Double.NEGATIVE_INFINITY, true);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.findDomainBounds(vectorSeriesCollection0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.VectorSeriesCollection cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(2, true);
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.drawItem((Graphics2D) null, (XYItemRendererState) null, rectangle2D_Double0, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 1, 0, true, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(0.0, false);
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      XYItemRendererState xYItemRendererState0 = cyclicXYItemRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeXYPlot0, defaultXYZDataset0, plotRenderingInfo0);
      NumberAxis numberAxis0 = new NumberAxis("PaHbjY");
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, defaultCaret0, combinedRangeXYPlot0, numberAxis0, numberAxis0, defaultXYZDataset0, 0, 193, false, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.DefaultXYZDataset cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(0.0, false);
      ClusteredXYBarRenderer clusteredXYBarRenderer1 = new ClusteredXYBarRenderer(0.0, true);
      boolean boolean0 = clusteredXYBarRenderer0.equals(clusteredXYBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(1.0, false);
      boolean boolean0 = clusteredXYBarRenderer0.equals(clusteredXYBarRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_SHADOW_PAINT;
      boolean boolean0 = clusteredXYBarRenderer0.equals(color0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-1218), (-1851.436F));
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeXYPlot0, timePeriodValuesCollection0, plotRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, (-1218), (-1135), (-1169), (-725), 0, false, false, false, true, false, false, false);
      Rectangle2D rectangle2D1 = chartPanel0.getScreenDataArea(0, 1042);
      MockDate mockDate0 = new MockDate(1406, 857, 10, 1042, 0, 768);
      TimeZone timeZone0 = TimeZone.getTimeZone("ZOOM_IN_BOTH");
      Hour hour0 = new Hour(mockDate0, timeZone0);
      Locale locale0 = Locale.JAPANESE;
      PeriodAxis periodAxis0 = new PeriodAxis("ZOOM_IN_BOTH", hour0, hour0, timeZone0, locale0);
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D1, combinedRangeXYPlot0, periodAxis0, periodAxis0, timePeriodValuesCollection0, 1042, 1588, false, 420);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1042, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(2610.39859347504, true);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[2];
      histogramDataset0.addSeries((Comparable) clusteredXYBarRenderer0.ZERO, doubleArray0, 3945, (-1592.7950214925636), (double) clusteredXYBarRenderer0.ZERO);
      clusteredXYBarRenderer0.findDomainBounds(histogramDataset0);
      clusteredXYBarRenderer0.findDomainBounds(histogramDataset0);
      // Undeclared exception!
      clusteredXYBarRenderer0.findDomainBoundsWithOffset(histogramDataset0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.findDomainBoundsWithOffset((IntervalXYDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(2610.39859347504, true);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Range range0 = clusteredXYBarRenderer0.findDomainBounds(histogramDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Range range0 = clusteredXYBarRenderer0.findDomainBounds((XYDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(1.0, false);
      Object object0 = clusteredXYBarRenderer0.clone();
      boolean boolean0 = clusteredXYBarRenderer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      int int0 = clusteredXYBarRenderer0.getPassCount();
      assertEquals(2, int0);
  }
}
