/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:07:40 GMT 2022
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.text.DateFormat;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYAreaRenderer2_ESTest extends XYAreaRenderer2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      assertFalse(stackedXYAreaRenderer2_0.isOutline());
      
      stackedXYAreaRenderer2_0.setOutline(true);
      boolean boolean0 = stackedXYAreaRenderer2_0.isOutline();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DateFormat dateFormat0 = DateFormat.getDateInstance(0, locale0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, dateFormat0);
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYToolTipGenerator0, (XYURLGenerator) null);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("oI;a;,na.", stackedXYAreaRenderer2_0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0}: ({1}, {2})");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      TimeZone timeZone0 = TimeZone.getDefault();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0, locale0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = defaultXYItemRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeXYPlot0, timeTableXYDataset0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer2_0.drawItem(graphics2D0, xYItemRendererState0, defaultCaret0, combinedRangeXYPlot0, numberAxis3D0, numberAxis3D0, timeTableXYDataset0, (-2009), 46, false, (-446));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 46, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYToolTipGenerator0, customXYURLGenerator0);
      Object object0 = xYAreaRenderer2_0.clone();
      assertTrue(object0.equals((Object)xYAreaRenderer2_0));
      
      xYAreaRenderer2_0.setLegendArea(xYAreaRenderer2_0.DEFAULT_SHAPE);
      boolean boolean0 = xYAreaRenderer2_0.equals(object0);
      assertFalse(object0.equals((Object)xYAreaRenderer2_0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYToolTipGenerator0, customXYURLGenerator0);
      boolean boolean0 = xYAreaRenderer2_0.equals(standardXYToolTipGenerator0);
      assertFalse(boolean0);
      assertFalse(xYAreaRenderer2_0.isOutline());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYToolTipGenerator0, customXYURLGenerator0);
      boolean boolean0 = xYAreaRenderer2_0.equals(xYAreaRenderer2_0);
      assertFalse(xYAreaRenderer2_0.isOutline());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("org.jfree.chart.renderer.xy.XYAreaRenderer2");
      XYAreaRenderer2 xYAreaRenderer2_1 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      boolean boolean0 = xYAreaRenderer2_0.equals(xYAreaRenderer2_1);
      assertFalse(xYAreaRenderer2_1.isOutline());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      Rectangle rectangle0 = new Rectangle(0, 0);
      Rectangle2D rectangle2D0 = rectangleInsets0.createOutsetRectangle((Rectangle2D) rectangle0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeXYPlot0, vectorSeriesCollection0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        xYAreaRenderer2_0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D0, combinedRangeXYPlot0, (ValueAxis) null, (ValueAxis) null, (XYDataset) null, 0, 1, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYAreaRenderer2", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      xYAreaRenderer2_0.setPlot(combinedDomainXYPlot0);
      xYAreaRenderer2_0.getLegendItem(1, 1471);
      assertFalse(xYAreaRenderer2_0.isOutline());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYToolTipGenerator0, customXYURLGenerator0);
      xYAreaRenderer2_0.getLegendItem(0, 0);
      assertFalse(xYAreaRenderer2_0.isOutline());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer2_0.setLegendArea((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.renderer.xy.XYAreaRenderer2", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DateFormat dateFormat0 = DateFormat.getDateInstance(0, locale0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, dateFormat0);
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYToolTipGenerator0, (XYURLGenerator) null);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double((double) stackedXYAreaRenderer2_0.ZERO, 2557.0368, (double) stackedXYAreaRenderer2_0.ZERO, 2557.0368);
      stackedXYAreaRenderer2_0.setLegendArea(ellipse2D_Double0);
      assertFalse(stackedXYAreaRenderer2_0.isOutline());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DateFormat dateFormat0 = DateFormat.getDateInstance(0, locale0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, dateFormat0);
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYToolTipGenerator0, (XYURLGenerator) null);
      stackedXYAreaRenderer2_0.getLegendArea();
      assertFalse(stackedXYAreaRenderer2_0.isOutline());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DateFormat dateFormat0 = DateFormat.getDateInstance(0, locale0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, dateFormat0);
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYToolTipGenerator0, (XYURLGenerator) null);
      boolean boolean0 = stackedXYAreaRenderer2_0.isOutline();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      xYAreaRenderer2_0.setOutline(true);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("org.jfree.chart.renderer.xy.XYAreaRenderer2");
      XYAreaRenderer2 xYAreaRenderer2_1 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      boolean boolean0 = xYAreaRenderer2_0.equals(xYAreaRenderer2_1);
      assertTrue(xYAreaRenderer2_0.isOutline());
      assertFalse(xYAreaRenderer2_1.isOutline());
      assertFalse(boolean0);
  }
}
