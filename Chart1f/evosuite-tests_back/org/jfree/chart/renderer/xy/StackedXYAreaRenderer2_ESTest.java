/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:19:10 GMT 2022
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.data.Range;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackedXYAreaRenderer2_ESTest extends StackedXYAreaRenderer2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      assertTrue(stackedXYAreaRenderer2_0.getRoundXCoordinates());
      
      stackedXYAreaRenderer2_0.setRoundXCoordinates(false);
      boolean boolean0 = stackedXYAreaRenderer2_0.getRoundXCoordinates();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeSeries) null);
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer2_0.findRangeBounds(timeSeriesCollection0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.time.TimeSeriesCollection cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer2", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2((XYToolTipGenerator) null, standardXYURLGenerator0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1067, Double.POSITIVE_INFINITY, 1068.1918, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = clusteredXYBarRenderer0.createState(plotRenderingInfo0);
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer2_0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, combinedDomainXYPlot0, dateAxis0, dateAxis0, defaultTableXYDataset0, 1340, 0, true, (-3445));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1340, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      boolean boolean0 = stackedXYAreaRenderer2_0.equals(stackedXYAreaRenderer2_0);
      assertTrue(boolean0);
      assertTrue(stackedXYAreaRenderer2_0.getRoundXCoordinates());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2((XYToolTipGenerator) null, customXYURLGenerator0);
      boolean boolean0 = stackedXYAreaRenderer2_0.equals(customXYURLGenerator0);
      assertFalse(boolean0);
      assertTrue(stackedXYAreaRenderer2_0.getRoundXCoordinates());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(0.0F);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = xYSplineRenderer0.initialise((Graphics2D) null, rectangle2D0, (XYPlot) null, defaultBoxAndWhiskerXYDataset0, plotRenderingInfo0);
      NumberAxis numberAxis0 = new NumberAxis();
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer2_0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D0, (XYPlot) null, numberAxis0, numberAxis0, defaultBoxAndWhiskerXYDataset0, 500, 1937, true, (-570));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer2", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedXYAreaRenderer2_0.ZERO, "?UVQz[9uVn~2");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(xIntervalSeriesCollection0, cyclicNumberAxis0, defaultPolarItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("*XAY+D&\"K~");
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", choiceFormat0, choiceFormat0, choiceFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("{0}: ({1}, {2}, {3})", "{0}: ({1}, {2}, {3})", "{0}: ({1}, {2}, {3})");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10, standardXYZToolTipGenerator0, standardXYURLGenerator0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      XYItemRendererState xYItemRendererState0 = xYStepAreaRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedDomainXYPlot0, xIntervalSeriesCollection0, (PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer2_0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, combinedDomainXYPlot0, cyclicNumberAxis0, cyclicNumberAxis0, (XYDataset) null, 500, 1, true, 500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer2", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("Null 'widthType' argument.");
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", numberFormat0, dateFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("(B2 p", "Null 'widthType' argument.", "{0}: ({1}, {2})");
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYToolTipGenerator0, standardXYURLGenerator0);
      stackedXYAreaRenderer2_0.findRangeBounds((XYDataset) null);
      assertTrue(stackedXYAreaRenderer2_0.getRoundXCoordinates());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      Range range0 = stackedXYAreaRenderer2_0.findRangeBounds(jDBCXYDataset0);
      assertTrue(stackedXYAreaRenderer2_0.getRoundXCoordinates());
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_1 = (StackedXYAreaRenderer2)stackedXYAreaRenderer2_0.clone();
      boolean boolean0 = stackedXYAreaRenderer2_0.equals(stackedXYAreaRenderer2_1);
      assertTrue(boolean0);
      assertTrue(stackedXYAreaRenderer2_1.getRoundXCoordinates());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      boolean boolean0 = stackedXYAreaRenderer2_0.getRoundXCoordinates();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2((XYToolTipGenerator) null, customXYURLGenerator0);
      int int0 = stackedXYAreaRenderer2_0.getPassCount();
      assertEquals(1, int0);
      assertTrue(stackedXYAreaRenderer2_0.getRoundXCoordinates());
  }
}
