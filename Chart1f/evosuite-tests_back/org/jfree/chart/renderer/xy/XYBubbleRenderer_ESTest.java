/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:22:39 GMT 2022
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.SamplingXYLineRenderer;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.data.time.DateRange;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYBubbleRenderer_ESTest extends XYBubbleRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYBubbleRenderer xYBubbleRenderer1 = new XYBubbleRenderer(1);
      boolean boolean0 = xYBubbleRenderer1.equals(xYBubbleRenderer0);
      assertFalse(boolean0);
      assertEquals(1, xYBubbleRenderer1.getScaleType());
      assertFalse(xYBubbleRenderer0.equals((Object)xYBubbleRenderer1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer(2);
      int int0 = xYBubbleRenderer0.getScaleType();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYItemRendererState xYItemRendererState0 = xYBubbleRenderer0.createState((PlotRenderingInfo) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, (String) null);
      // Undeclared exception!
      try { 
        xYBubbleRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, (Rectangle2D) null, (XYPlot) null, cyclicNumberAxis0, cyclicNumberAxis0, (XYDataset) null, 0, 0, false, 500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYBubbleRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double(1320.082, 2, 0.0, 1.0F);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Date[] dateArray0 = new Date[1];
      double[] doubleArray0 = new double[7];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(1.0F, dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = samplingXYLineRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainXYPlot0, defaultHighLowDataset0, plotRenderingInfo0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      // Undeclared exception!
      try { 
        xYBubbleRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D0, combinedDomainXYPlot0, periodAxis0, periodAxis0, defaultHighLowDataset0, (-3400), 10, true, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.jfree.data.xy.DefaultHighLowDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      boolean boolean0 = xYBubbleRenderer0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0, xYBubbleRenderer0.getScaleType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      boolean boolean0 = xYBubbleRenderer0.equals(xYBubbleRenderer0);
      assertTrue(boolean0);
      assertEquals(0, xYBubbleRenderer0.getScaleType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYBubbleRenderer xYBubbleRenderer1 = new XYBubbleRenderer(2);
      boolean boolean0 = xYBubbleRenderer0.equals(xYBubbleRenderer1);
      assertEquals(2, xYBubbleRenderer1.getScaleType());
      assertEquals(0, xYBubbleRenderer0.getScaleType());
      assertFalse(xYBubbleRenderer1.equals((Object)xYBubbleRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      xYBubbleRenderer0.getLegendItem((-1), (-1062));
      assertEquals(0, xYBubbleRenderer0.getScaleType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      xYBubbleRenderer0.setPlot(combinedDomainXYPlot0);
      xYBubbleRenderer0.getLegendItem((-3480), 95);
      assertEquals(0, xYBubbleRenderer0.getScaleType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(2);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(347.7275793478271, 2, (double) xYStepAreaRenderer0.ZERO, (-1909.02367042));
      Rectangle rectangle0 = new Rectangle();
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("0o", dateRange0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(moduloAxis0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = xYStepAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeXYPlot0, xYSeriesCollection0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        xYBubbleRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle0, combinedRangeXYPlot0, moduloAxis0, moduloAxis0, xYSeriesCollection0, 366, 0, true, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 366, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = null;
      try {
        xYBubbleRenderer0 = new XYBubbleRenderer(19);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid 'scaleType'.
         //
         verifyException("org.jfree.chart.renderer.xy.XYBubbleRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = null;
      try {
        xYBubbleRenderer0 = new XYBubbleRenderer((-7));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid 'scaleType'.
         //
         verifyException("org.jfree.chart.renderer.xy.XYBubbleRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYBubbleRenderer xYBubbleRenderer1 = (XYBubbleRenderer)xYBubbleRenderer0.clone();
      boolean boolean0 = xYBubbleRenderer0.equals(xYBubbleRenderer1);
      assertEquals(0, xYBubbleRenderer1.getScaleType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      int int0 = xYBubbleRenderer0.getScaleType();
      assertEquals(0, int0);
  }
}
