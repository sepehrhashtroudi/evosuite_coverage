/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 19:47:26 GMT 2022
 */

package org.jfree.data;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.KeyedValueComparatorType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KeyedValueComparatorType_ESTest extends KeyedValueComparatorType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      KeyedValueComparatorType keyedValueComparatorType1 = KeyedValueComparatorType.BY_KEY;
      boolean boolean0 = keyedValueComparatorType0.equals(keyedValueComparatorType1);
      assertFalse(keyedValueComparatorType1.equals((Object)keyedValueComparatorType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      KeyedValueComparatorType keyedValueComparatorType1 = KeyedValueComparatorType.BY_KEY;
      boolean boolean0 = keyedValueComparatorType1.equals(keyedValueComparatorType0);
      assertFalse(boolean0);
      assertFalse(keyedValueComparatorType0.equals((Object)keyedValueComparatorType1));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      boolean boolean0 = keyedValueComparatorType0.equals(keyedValueComparatorType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      boolean boolean0 = keyedValueComparatorType0.equals("KeyedValueComparatorType.BY_VALUE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      String string0 = keyedValueComparatorType0.toString();
      assertEquals("KeyedValueComparatorType.BY_VALUE", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      keyedValueComparatorType0.hashCode();
  }
}
