/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 20:15:59 GMT 2022
 */

package org.jfree.data.pie;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.pie.PieDatasetChangeInfo;
import org.jfree.data.pie.PieDatasetChangeType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieDatasetChangeInfo_ESTest extends PieDatasetChangeInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PieDatasetChangeType pieDatasetChangeType0 = PieDatasetChangeType.ADD_AND_REMOVE;
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo(pieDatasetChangeType0, 251, 251);
      int int0 = pieDatasetChangeInfo0.getIndex2();
      assertEquals(251, int0);
      assertEquals(251, pieDatasetChangeInfo0.getIndex1());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PieDatasetChangeType pieDatasetChangeType0 = PieDatasetChangeType.CLEAR;
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo(pieDatasetChangeType0, (-421), (-421));
      int int0 = pieDatasetChangeInfo0.getIndex2();
      assertEquals((-421), pieDatasetChangeInfo0.getIndex1());
      assertEquals((-421), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PieDatasetChangeType pieDatasetChangeType0 = PieDatasetChangeType.ADD_AND_REMOVE;
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo(pieDatasetChangeType0, 251, 251);
      int int0 = pieDatasetChangeInfo0.getIndex1();
      assertEquals(251, int0);
      assertEquals(251, pieDatasetChangeInfo0.getIndex2());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PieDatasetChangeType pieDatasetChangeType0 = PieDatasetChangeType.CLEAR;
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo(pieDatasetChangeType0, (-421), (-421));
      int int0 = pieDatasetChangeInfo0.getIndex1();
      assertEquals((-421), int0);
      assertEquals((-421), pieDatasetChangeInfo0.getIndex2());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PieDatasetChangeType pieDatasetChangeType0 = PieDatasetChangeType.ADD_AND_REMOVE;
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo(pieDatasetChangeType0, 251, 251);
      pieDatasetChangeInfo0.getChangeType();
      assertEquals(251, pieDatasetChangeInfo0.getIndex1());
      assertEquals(251, pieDatasetChangeInfo0.getIndex2());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo((PieDatasetChangeType) null, 0, 0);
      pieDatasetChangeInfo0.getChangeType();
      assertEquals(0, pieDatasetChangeInfo0.getIndex2());
      assertEquals(0, pieDatasetChangeInfo0.getIndex1());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo((PieDatasetChangeType) null, 0, 0);
      int int0 = pieDatasetChangeInfo0.getIndex1();
      assertEquals(0, int0);
      assertEquals(0, pieDatasetChangeInfo0.getIndex2());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PieDatasetChangeInfo pieDatasetChangeInfo0 = new PieDatasetChangeInfo((PieDatasetChangeType) null, 0, 0);
      int int0 = pieDatasetChangeInfo0.getIndex2();
      assertEquals(0, int0);
      assertEquals(0, pieDatasetChangeInfo0.getIndex1());
  }
}
