/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 19:53:16 GMT 2022
 */

package org.jfree.data.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.event.SeriesChangeEvent;
import org.jfree.data.general.SeriesChangeInfo;
import org.jfree.data.general.SeriesChangeType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SeriesChangeEvent_ESTest extends SeriesChangeEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SeriesChangeType seriesChangeType0 = SeriesChangeType.CHANGE_KEY;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 0, (-1104));
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent("MBVx", seriesChangeInfo0);
      SeriesChangeInfo seriesChangeInfo1 = seriesChangeEvent0.getSummary();
      assertSame(seriesChangeInfo1, seriesChangeInfo0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SeriesChangeType seriesChangeType0 = SeriesChangeType.CHANGE_KEY;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 0, (-1104));
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent("MBVx", seriesChangeInfo0);
      SeriesChangeInfo seriesChangeInfo1 = new SeriesChangeInfo(seriesChangeType0, 1, 0);
      seriesChangeEvent0.setSummary(seriesChangeInfo1);
      SeriesChangeInfo seriesChangeInfo2 = seriesChangeEvent0.getSummary();
      assertSame(seriesChangeInfo2, seriesChangeInfo1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SeriesChangeType seriesChangeType0 = SeriesChangeType.UPDATE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 0, 0);
      SeriesChangeEvent seriesChangeEvent0 = null;
      try {
        seriesChangeEvent0 = new SeriesChangeEvent((Object) null, seriesChangeInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SeriesChangeEvent seriesChangeEvent0 = null;
      try {
        seriesChangeEvent0 = new SeriesChangeEvent((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      SeriesChangeType seriesChangeType0 = SeriesChangeType.REMOVE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, (-1462), 2760);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(object0, seriesChangeInfo0);
      SeriesChangeInfo seriesChangeInfo1 = seriesChangeEvent0.getSummary();
      assertSame(seriesChangeInfo0, seriesChangeInfo1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(object0);
      SeriesChangeType seriesChangeType0 = SeriesChangeType.UPDATE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 1, (-1583));
      seriesChangeEvent0.setSummary(seriesChangeInfo0);
      assertEquals(1, seriesChangeInfo0.getIndex1());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object object0 = new Object();
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(object0);
      SeriesChangeInfo seriesChangeInfo0 = seriesChangeEvent0.getSummary();
      assertNull(seriesChangeInfo0);
  }
}
