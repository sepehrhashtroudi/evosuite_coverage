/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 19:53:57 GMT 2022
 */

package org.jfree.data.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.event.DatasetChangeInfo;
import org.jfree.data.event.DatasetChangeEvent;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatasetChangeEvent_ESTest extends DatasetChangeEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(object0, (Dataset) null, datasetChangeInfo0);
      Dataset dataset0 = datasetChangeEvent0.getDataset();
      assertNull(dataset0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object[][][] objectArray0 = new Object[7][3][0];
      Object[][] objectArray1 = new Object[2][3];
      objectArray0[0] = objectArray1;
      objectArray0[1] = objectArray0[0];
      objectArray0[2] = objectArray1;
      objectArray0[3] = objectArray1;
      objectArray0[4] = objectArray0[0];
      objectArray0[5] = objectArray0[3];
      objectArray0[6] = objectArray0[2];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      DatasetChangeEvent datasetChangeEvent0 = null;
      try {
        datasetChangeEvent0 = new DatasetChangeEvent((Object) null, defaultWindDataset0, datasetChangeInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      DatasetChangeEvent datasetChangeEvent0 = null;
      try {
        datasetChangeEvent0 = new DatasetChangeEvent(object0, timeTableXYDataset0, (DatasetChangeInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.data.event.DatasetChangeEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(object0, categoryTableXYDataset0, datasetChangeInfo0);
      DatasetChangeInfo datasetChangeInfo1 = datasetChangeEvent0.getInfo();
      assertSame(datasetChangeInfo0, datasetChangeInfo1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent("org.jfree.data.UnknownKeyException", defaultKeyedValuesDataset0, datasetChangeInfo0);
      Dataset dataset0 = datasetChangeEvent0.getDataset();
      assertSame(defaultKeyedValuesDataset0, dataset0);
  }
}
