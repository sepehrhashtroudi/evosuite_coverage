/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 20:26:18 GMT 2022
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BoxAndWhiskerItem_ESTest extends BoxAndWhiskerItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, byte0, byte0, (Number) null, byte0, byte0, (Number) null, byte0, linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ3();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Byte byte0 = new Byte((byte)50);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, byte0, byte0, (Number) null, byte0, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ3();
      assertEquals((byte)50, number0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-1935.6193233548), (-1935.6193233548), 990.4424877, (-1935.6193233548), 990.4424877, (-1622.142), 990.4424877, (-1.0), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ3();
      assertEquals((-1935.6193233548), number0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), 1.0, (-2926.481016002401), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ3();
      assertEquals((-2926.481016002401), number0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long(401L);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, long0, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ1();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-2042.157043146846), 205.0533, 1061.066825626908, 205.0533, 899.8219021178, 1061.066825626908, 0.0, 0.0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ1();
      assertEquals(1061.066825626908, number0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double(0.0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ1();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), 1.0, (-2926.481016002401), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ1();
      assertEquals((-2926.481016002401), number0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long(401L);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, long0, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinRegularValue();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-6727.3261900458), 0.0, (-6727.3261900458), 0.0, 344.07700825655, 344.07700825655, 0.0, (-6727.3261900458), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinRegularValue();
      assertEquals(344.07700825655, number0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinRegularValue();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), 1.0, (-2926.481016002401), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinRegularValue();
      assertEquals((-2926.481016002401), number0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double(1887.9956351962062);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, (Number) null, (Number) null, double0, linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinOutlier();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-1868.4089674932), (-2366.2039649127255), (-2366.2039649127255), (-3599.8547783058034), 2425.1923, 0.0, 1356.57, 0.0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinOutlier();
      assertEquals(1356.57, number0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-338.171), (-338.171), (-338.171), (-338.171), (-338.171), (-338.171), (-338.171), (-338.171), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinOutlier();
      assertEquals((-338.171), number0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Byte byte0 = new Byte((byte)50);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, byte0, byte0, (Number) null, byte0, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getMedian();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-6727.3261900458), 1.0, 0.0, 0.0, 344.07700825655, 0.0, 0.0, (-6727.3261900458), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMedian();
      assertEquals(1.0, number0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Float float0 = new Float(0.0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, float0, (Number) null, (Number) null, float0, (Number) null, float0, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getMedian();
      assertEquals(0.0F, number0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, (-1624.190629432278), 0.0, (-1624.190629432278), 0.0, 3066.415851439153, 0.0, 1.0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMedian();
      assertEquals((-1624.190629432278), number0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Byte byte0 = new Byte((byte)50);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, byte0, byte0, (Number) null, byte0, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getMean();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Byte byte0 = new Byte((byte)103);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMean();
      assertEquals((byte)103, number0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Float float0 = new Float(0.0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMean();
      assertEquals(0.0F, number0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), (-2926.481016002401), 1.0, (-2926.481016002401), (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMean();
      assertEquals((-2926.481016002401), number0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxRegularValue();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(794);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) integer0, (Number) integer0, (Number) integer0, (Number) integer0, (Number) integer0, (Number) integer0, (Number) integer0, (Number) integer0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxRegularValue();
      assertEquals(794, number0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Long long0 = new Long((-1379L));
      Double double0 = new Double(0.0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) long0, (Number) long0, (Number) double0, (Number) double0, (Number) long0, (Number) long0, (Number) long0, (Number) double0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxRegularValue();
      assertEquals((-1379L), number0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Byte byte0 = new Byte((byte)50);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, byte0, byte0, (Number) null, byte0, (Number) null, linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxOutlier();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Double double0 = new Double((-1004.0));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxOutlier();
      assertEquals((-1004.0), number0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, (-1624.190629432278), 0.0, (-1624.190629432278), 0.0, 3066.415851439153, 0.0, 1.0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxOutlier();
      assertEquals(1.0, number0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, 0.0, 0.0, 0.0, 0.0, (-2151.7375), 4247.61, 4247.61, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxOutlier();
      assertEquals(4247.61, number0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Float float0 = new Float(1.0F);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (List) linkedList0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (List) linkedList1);
      assertTrue(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      
      linkedList1.add((Object) boxAndWhiskerItem0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      Double double0 = new Double(0.0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (List) linkedList0);
      Integer integer0 = new Integer(1);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) integer0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Float float0 = new Float((float) (short) (-28));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (List) linkedList0);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem(float0, float0, float0, float0, float0, float0, (Number) null, (Number) null, linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Short short0 = new Short((short) (-33));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      Long long0 = new Long((short) (-33));
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) long0, (Number) short0, (Number) short0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (List) linkedList0);
      Float float0 = new Float((float) byte0);
      Double double0 = new Double((double) byte0);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) byte0, (Number) byte0, (Number) byte0, (Number) byte0, (Number) float0, (Number) byte0, (Number) double0, (Number) double0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem1.equals(boxAndWhiskerItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Double double0 = new Double(0.0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Double double0 = new Double(0.0);
      Integer integer0 = new Integer((-918));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) integer0, (Number) double0, (Number) double0, (Number) integer0, (Number) integer0, (List) linkedList0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem(0.0, 0.0, (double) (-918), 0.0, (-1.0), 0.0, 349.905649165, 0.0, (List) linkedList1);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (List) linkedList0);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem(0.0, (-1543.79088948), 0.0, 0.0, 482.05213, 0.0, 0.0, 0.0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Double double0 = new Double(0.0);
      Integer integer0 = new Integer((-918));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) integer0, (Number) double0, (Number) double0, (Number) integer0, (Number) integer0, (List) linkedList0);
      Float float0 = new Float(349.905649165);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) integer0, (Number) float0, (Number) integer0, (Number) integer0, (Number) float0, (Number) double0, (Number) double0, (Number) integer0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Double double0 = new Double((-2238.8947411323));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      Short short0 = new Short((short) (-4207));
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) short0, (Number) short0, (Number) short0, (Number) double0, (Number) double0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double double0 = new Double(0.0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(boxAndWhiskerItem0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Double double0 = new Double((-2238.8947411323));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      boolean boolean0 = boxAndWhiskerItem0.equals(double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (List) null);
      List list0 = boxAndWhiskerItem0.getOutliers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Double double0 = new Double((-2238.8947411323));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      List list0 = boxAndWhiskerItem0.getOutliers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getQ3();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMinOutlier();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Double double0 = new Double(0.0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxOutlier();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (List) linkedList0);
      Number number0 = boxAndWhiskerItem0.getMaxRegularValue();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Float float0 = new Float(1.0F);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (Number) float0, (List) linkedList0);
      String string0 = boxAndWhiskerItem0.toString();
      assertNotNull(string0);
  }
}
