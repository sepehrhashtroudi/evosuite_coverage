/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 20:32:51 GMT 2022
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.statistics.BoxAndWhiskerCalculator;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BoxAndWhiskerCalculator_ESTest extends BoxAndWhiskerCalculator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      Byte byte0 = new Byte((byte)0);
      linkedList0.add((int) (byte)0, byte0);
      double double0 = BoxAndWhiskerCalculator.calculateQ3(linkedList0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(0.0);
      linkedList0.add(double0);
      double double1 = BoxAndWhiskerCalculator.calculateQ1(linkedList0);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateQ3(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.statistics.Statistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("@/0%sR/");
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateQ3(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.statistics.Statistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      linkedList0.add((Long) null);
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateQ1(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.statistics.Statistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateQ1(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.statistics.Statistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      linkedList0.add((Long) null);
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.statistics.Statistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Double double0 = new Double(923.49819);
      Float float0 = new Float(1027.2955);
      linkedList0.add((Object) float0);
      linkedList0.offer(double0);
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((-4374.5967));
      linkedList0.add(double0);
      List<Double> list0 = linkedList0.subList(1, 1);
      linkedList0.add(double0);
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Integer integer0 = new Integer(0);
      Double double0 = new Double(1.0);
      linkedList0.add((Object) double0);
      linkedList0.add((Object) integer0);
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Double cannot be cast to java.lang.Integer
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((-4374.5967));
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      double double1 = BoxAndWhiskerCalculator.calculateQ3(linkedList0);
      assertEquals((-4374.5967), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(213.53080124731636);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      double double1 = BoxAndWhiskerCalculator.calculateQ3(linkedList0);
      assertEquals(213.53080124731636, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      double double0 = BoxAndWhiskerCalculator.calculateQ3(linkedList0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((-4374.5967));
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      double double1 = BoxAndWhiskerCalculator.calculateQ1(linkedList0);
      assertEquals((-4374.5967), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(213.53080124731636);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      linkedList0.add(double0);
      double double1 = BoxAndWhiskerCalculator.calculateQ1(linkedList0);
      assertEquals(213.53080124731636, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      double double0 = BoxAndWhiskerCalculator.calculateQ1(linkedList0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(213.53080124731636);
      linkedList0.add(double0);
      Double double1 = new Double((-2318.943));
      linkedList0.add(double1);
      Double double2 = new Double((-0.8320450908699566));
      linkedList0.add(double2);
      Double double3 = new Double(84.81232049892654);
      linkedList0.add(double3);
      linkedList0.add(double2);
      BoxAndWhiskerItem boxAndWhiskerItem0 = BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0, true);
      assertNotNull(boxAndWhiskerItem0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((-2318.943));
      linkedList0.add(double0);
      linkedList0.add(double0);
      Double double1 = new Double(84.81232049892654);
      linkedList0.add(double1);
      linkedList0.add(double0);
      linkedList0.add(double0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0, true);
      assertNotNull(boxAndWhiskerItem0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      linkedList0.add((Long) null);
      BoxAndWhiskerItem boxAndWhiskerItem0 = BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0, true);
      assertNotNull(boxAndWhiskerItem0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'values' argument.
         //
         verifyException("org.jfree.data.statistics.BoxAndWhiskerCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateQ3((List) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'values' argument.
         //
         verifyException("org.jfree.data.statistics.BoxAndWhiskerCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateQ1((List) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'values' argument.
         //
         verifyException("org.jfree.data.statistics.BoxAndWhiskerCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(213.53080124731636);
      linkedList0.add(double0);
      Double double1 = new Double((-0.8320450908699566));
      linkedList0.add(double1);
      Double double2 = new Double(84.81232049892654);
      linkedList0.add(double2);
      linkedList0.add(double1);
      linkedList0.add(double1);
      BoxAndWhiskerItem boxAndWhiskerItem0 = BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0);
      assertNotNull(boxAndWhiskerItem0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(Double.NaN);
      linkedList0.add(double0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) linkedList0, true);
      assertNotNull(boxAndWhiskerItem0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics((List) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'values' argument.
         //
         verifyException("org.jfree.data.statistics.BoxAndWhiskerCalculator", e);
      }
  }
}
