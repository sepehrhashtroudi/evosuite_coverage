/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 20:11:04 GMT 2022
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.event.DatasetChangeInfo;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.event.DatasetChangeEvent;
import org.jfree.data.event.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultHeatMapDataset;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(categoryTableXYDataset0);
      categoryTableXYDataset0.remove((-1.0), "7Sfjdd");
      assertEquals(1.0, categoryTableXYDataset0.getIntervalWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(bigInteger0);
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      defaultValueDataset0.fireDatasetChanged(datasetChangeInfo0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2777, 2777, 2777, 1845.30685, (-534.45405), 0.0);
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0, datasetChangeInfo0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      assertEquals(2777, defaultHeatMapDataset0.getXSampleCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      XYDataItem xYDataItem0 = new XYDataItem(bigInteger0, bigInteger0);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(xYDataItem0, bigInteger0);
      Object object0 = defaultKeyedValueDataset0.clone();
      assertNotSame(object0, defaultKeyedValueDataset0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2609, 2609, 787.8480687, 0.0, 0.0, 0.0);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.fireDatasetChanged((DatasetChangeInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.data.event.DatasetChangeEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(79, 79, 79, 79, 1417.43804207, 1922.0);
      defaultHeatMapDataset0.addChangeListener((DatasetChangeListener) null);
      assertEquals(1922.0, defaultHeatMapDataset0.getMaximumYValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      Object object0 = defaultValueDataset0.clone();
      assertTrue(object0.equals((Object)defaultValueDataset0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset((byte)76, (byte)76, (byte)76, (byte)76, (byte)76, (byte)76);
      boolean boolean0 = defaultHeatMapDataset0.hasListener(xYDatasetTableModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      defaultValueDataset0.removeChangeListener(xYDatasetTableModel0);
      assertEquals(0, xYDatasetTableModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(4026, 4026, bigInteger0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, (-2134));
      waferMapDataset0.removeChangeListener(categoryToPieDataset0);
      assertEquals(0.0, waferMapDataset0.getChipSpace(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-3500), (-252), bigInteger0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(timeTableXYDataset0);
      waferMapDataset0.addChangeListener(xYDatasetTableModel0);
      assertEquals((-252), waferMapDataset0.getMaxChipY());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(60, 691, 691, 691, 691, 691);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      DatasetGroup datasetGroup0 = new DatasetGroup();
      defaultMultiValueCategoryDataset0.setGroup(datasetGroup0);
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DatasetGroup datasetGroup0 = defaultValueDataset0.getGroup();
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(4026, 4026, 0.0, 0.0, (-1537.2275), 4026);
      defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.clone();
      // Undeclared exception!
      defaultHeatMapDataset0.clone();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(bigInteger0);
      defaultValueDataset0.validateObject();
  }
}
