/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 21:15:23 GMT 2022
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.XYCoordinate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYCoordinate_ESTest extends XYCoordinate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate((-1656.8605538), (-1656.8605538));
      xYCoordinate0.hashCode();
      assertEquals((-1656.8605538), xYCoordinate0.getX(), 0.01);
      assertEquals((-1656.8605538), xYCoordinate0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, (-718.6));
      XYCoordinate xYCoordinate1 = new XYCoordinate();
      boolean boolean0 = xYCoordinate0.equals(xYCoordinate1);
      assertEquals(0.0, xYCoordinate1.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
      assertFalse(xYCoordinate1.equals((Object)xYCoordinate0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(2286.85049053, 0.0);
      XYCoordinate xYCoordinate1 = new XYCoordinate();
      boolean boolean0 = xYCoordinate1.equals(xYCoordinate0);
      assertFalse(boolean0);
      assertFalse(xYCoordinate0.equals((Object)xYCoordinate1));
      assertEquals(0.0, xYCoordinate0.getY(), 0.01);
      assertEquals(0.0, xYCoordinate1.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 0.0);
      double double0 = xYCoordinate0.getY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate((-2980.834212), (-2980.834212));
      double double0 = xYCoordinate0.getY();
      assertEquals((-2980.834212), double0, 0.01);
      assertEquals((-2980.834212), xYCoordinate0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(580.7, (-2160.6299635));
      double double0 = xYCoordinate0.getX();
      assertEquals((-2160.6299635), xYCoordinate0.getY(), 0.01);
      assertEquals(580.7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate((-841.0438), (-841.0438));
      double double0 = xYCoordinate0.getX();
      assertEquals((-841.0438), double0, 0.01);
      assertEquals((-841.0438), xYCoordinate0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      XYCoordinate xYCoordinate1 = new XYCoordinate();
      int int0 = xYCoordinate1.compareTo(xYCoordinate0);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      XYCoordinate xYCoordinate1 = new XYCoordinate();
      int int0 = xYCoordinate0.compareTo(xYCoordinate1);
      assertEquals(1, int0);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate();
      XYCoordinate xYCoordinate1 = new XYCoordinate((-744.276103078519), (-744.276103078519));
      int int0 = xYCoordinate1.compareTo(xYCoordinate0);
      assertEquals((-1), int0);
      assertEquals((-744.276103078519), xYCoordinate1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate();
      XYCoordinate xYCoordinate1 = new XYCoordinate((-308.4732799933689), (-308.4732799933689));
      int int0 = xYCoordinate0.compareTo(xYCoordinate1);
      assertEquals(1, int0);
      assertEquals((-308.4732799933689), xYCoordinate1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate();
      // Undeclared exception!
      try { 
        xYCoordinate0.compareTo("C|Qn#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Incomparable object.
         //
         verifyException("org.jfree.data.xy.XYCoordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      int int0 = xYCoordinate0.compareTo(xYCoordinate0);
      assertEquals(1916.460479004, xYCoordinate0.getY(), 0.01);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate();
      XYCoordinate xYCoordinate1 = new XYCoordinate();
      boolean boolean0 = xYCoordinate0.equals(xYCoordinate1);
      assertEquals(0.0, xYCoordinate1.getX(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, xYCoordinate1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate();
      XYCoordinate xYCoordinate1 = new XYCoordinate((-744.276103078519), (-744.276103078519));
      boolean boolean0 = xYCoordinate0.equals(xYCoordinate1);
      assertFalse(boolean0);
      assertEquals((-744.276103078519), xYCoordinate1.getX(), 0.01);
      assertEquals((-744.276103078519), xYCoordinate1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate();
      Object object0 = new Object();
      boolean boolean0 = xYCoordinate0.equals(object0);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYCoordinate0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      boolean boolean0 = xYCoordinate0.equals(xYCoordinate0);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
      assertEquals(1916.460479004, xYCoordinate0.getY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      XYCoordinate xYCoordinate1 = new XYCoordinate();
      boolean boolean0 = xYCoordinate0.equals(xYCoordinate1);
      assertFalse(boolean0);
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
      assertFalse(xYCoordinate1.equals((Object)xYCoordinate0));
      assertEquals(0.0, xYCoordinate1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      String string0 = xYCoordinate0.toString();
      assertEquals("(0.0, 1916.460479004)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      double double0 = xYCoordinate0.getY();
      assertEquals(0.0, xYCoordinate0.getX(), 0.01);
      assertEquals(1916.460479004, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYCoordinate xYCoordinate0 = new XYCoordinate(0.0, 1916.460479004);
      double double0 = xYCoordinate0.getX();
      assertEquals(1916.460479004, xYCoordinate0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }
}
