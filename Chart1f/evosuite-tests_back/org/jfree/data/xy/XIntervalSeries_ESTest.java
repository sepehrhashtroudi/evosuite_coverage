/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 21:16:15 GMT 2022
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.ComparableObjectItem;
import org.jfree.data.time.Day;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.Second;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XIntervalSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XIntervalSeries_ESTest extends XIntervalSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, 0, 999, 0.0);
      double double0 = xIntervalSeries0.getYValue(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, 999, 999, 999);
      double double0 = xIntervalSeries0.getYValue(0);
      assertEquals(999.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, (-355.315246609659), (-355.315246609659), (-355.315246609659));
      double double0 = xIntervalSeries0.getYValue(0);
      assertEquals((-355.315246609659), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, 0, 999, 0.0);
      double double0 = xIntervalSeries0.getXLowValue(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, 999, 999, 999);
      double double0 = xIntervalSeries0.getXLowValue(0);
      assertEquals(999.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, (-355.315246609659), (-355.315246609659), (-355.315246609659));
      double double0 = xIntervalSeries0.getXLowValue(0);
      assertEquals((-355.315246609659), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add((-1.0), 0.0, 0.0, (-1.0));
      double double0 = xIntervalSeries0.getXHighValue(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, 0, 999, 0.0);
      double double0 = xIntervalSeries0.getXHighValue(0);
      assertEquals(999.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, (-355.315246609659), (-355.315246609659), (-355.315246609659));
      double double0 = xIntervalSeries0.getXHighValue(0);
      assertEquals((-355.315246609659), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Millisecond millisecond0 = new Millisecond(date0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add((-1.0), 0.0, 0.0, (-1.0));
      Number number0 = xIntervalSeries0.getX(0);
      assertEquals((-1.0), number0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, (-355.315246609659), (-355.315246609659), (-355.315246609659));
      ComparableObjectItem comparableObjectItem0 = xIntervalSeries0.getDataItem(0);
      assertNotNull(comparableObjectItem0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1, (-456), 2631);
      Year year0 = new Year(mockDate0);
      Month month0 = new Month(1, year0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(month0);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getYValue((-9999));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Day day0 = new Day();
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(day0, false, true);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getXLowValue((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Year year0 = new Year(1);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(year0);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getXHighValue((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(quarter0, false, false);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getX(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XIntervalSeries xIntervalSeries0 = null;
      try {
        xIntervalSeries0 = new XIntervalSeries((Comparable) null, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XIntervalSeries xIntervalSeries0 = null;
      try {
        xIntervalSeries0 = new XIntervalSeries((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(quarter0, false, false);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getDataItem((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getDataItem(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getXHighValue(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getXLowValue(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getX((-1875));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      // Undeclared exception!
      try { 
        xIntervalSeries0.getYValue(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Second second0 = new Second(date0);
      Millisecond millisecond0 = new Millisecond(0, second0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(millisecond0);
      xIntervalSeries0.add(0, 999, 999, 999);
      Number number0 = xIntervalSeries0.getX(0);
      assertEquals(0.0, number0);
  }
}
