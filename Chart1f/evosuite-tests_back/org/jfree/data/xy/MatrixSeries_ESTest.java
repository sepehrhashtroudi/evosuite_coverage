/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 21:26:57 GMT 2022
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Checkbox;
import java.awt.CheckboxGroup;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.Chronology;
import java.util.Locale;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JInternalFrame;
import javax.swing.plaf.multi.MultiLabelUI;
import javax.swing.plaf.synth.SynthViewportUI;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MatrixSeries_ESTest extends MatrixSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("", 1, 1747);
      double[][] doubleArray0 = new double[7][5];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 1747;
      doubleArray1[1] = (double) 1747;
      doubleArray1[2] = (double) 1747;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 1;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = (double) 1747;
      doubleArray1[7] = (double) 1747;
      doubleArray1[8] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) 1747;
      doubleArray2[3] = (double) 1747;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = 0.0;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = 0.0;
      doubleArray3[3] = (double) 1747;
      doubleArray3[4] = (double) 1747;
      doubleArray3[5] = (double) 1;
      doubleArray3[6] = (double) 1747;
      doubleArray3[7] = (double) 1747;
      doubleArray3[8] = (double) 1747;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1747;
      doubleArray4[1] = (double) 1;
      doubleArray4[2] = 0.0;
      doubleArray4[3] = (double) 1747;
      doubleArray4[4] = (double) 1;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (double) 1747;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[2];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = 0.0;
      doubleArray0[6] = doubleArray7;
      matrixSeries0.data = doubleArray0;
      matrixSeries0.getItemRow(1);
      matrixSeries0.equals("");
      matrixSeries0.getItemRow(1);
      int int0 = matrixSeries0.getItemCount();
      assertEquals(63, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      MatrixSeries matrixSeries0 = new MatrixSeries("", 1, 1);
      matrixSeries0.getItemRow(1);
      CheckboxGroup checkboxGroup0 = new CheckboxGroup();
      checkboxGroup0.getSelectedCheckbox();
      checkboxGroup0.getSelectedCheckbox();
      MultiLabelUI multiLabelUI0 = new MultiLabelUI();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem(defaultEditorKit_PasteAction0);
      // Undeclared exception!
      try { 
        multiLabelUI0.getMinimumSize(jCheckBoxMenuItem0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 0;
      MatrixSeries matrixSeries0 = new MatrixSeries("+OU^+< eA[V(._B]Nx", 1896, 0);
      double[][] doubleArray0 = new double[0][0];
      matrixSeries0.data = doubleArray0;
      matrixSeries0.getRowCount();
      // Undeclared exception!
      try { 
        matrixSeries0.zeroAll();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "";
      int int0 = 0;
      MatrixSeries matrixSeries0 = new MatrixSeries("", 4841, 0);
      matrixSeries0.getItemCount();
      int int1 = 0;
      // Undeclared exception!
      try { 
        matrixSeries0.getItemColumn(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 30;
      MatrixSeries matrixSeries0 = new MatrixSeries("", 30, 30);
      matrixSeries0.setDescription("");
      matrixSeries0.getItem(30);
      matrixSeries0.getRowCount();
      int int1 = 5;
      matrixSeries0.setDescription((String) null);
      // Undeclared exception!
      try { 
        matrixSeries0.update(30, 5, 30);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      MatrixSeries matrixSeries0 = new MatrixSeries("-;&cLvd{|", 1208, 0);
      matrixSeries0.zeroAll();
      matrixSeries0.getColumnsCount();
      String string0 = "qcfyN dmP:5?a_T9";
      matrixSeries0.setDescription("qcfyN dmP:5?a_T9");
      // Undeclared exception!
      try { 
        matrixSeries0.getItem((-1));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ",Mr]hn0!{]RcV8G:{f{";
      MatrixSeries matrixSeries0 = new MatrixSeries(",Mr]hn0!{]RcV8G:{f{", 47, 47);
      matrixSeries0.setKey(",Mr]hn0!{]RcV8G:{f{");
      int int0 = (-1);
      // Undeclared exception!
      try { 
        matrixSeries0.update(47, (-1), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 47
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 91;
      MatrixSeries matrixSeries0 = new MatrixSeries(").", 91, 91);
      matrixSeries0.clone();
      int int1 = 0;
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      matrixSeries0.addChangeListener(defaultIntervalXYDataset0);
      matrixSeries0.getItem(0);
      SynthViewportUI synthViewportUI0 = new SynthViewportUI();
      matrixSeries0.getItem(0);
      JInternalFrame.JDesktopIcon jInternalFrame_JDesktopIcon0 = null;
      try {
        jInternalFrame_JDesktopIcon0 = new JInternalFrame.JDesktopIcon((JInternalFrame) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.metal.MetalDesktopIconUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      MatrixSeries matrixSeries0 = new MatrixSeries("{T4o-tR226v", 1042, 1);
      int int0 = matrixSeries0.getItemColumn(0);
      assertEquals(1042, matrixSeries0.getItemCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("*wS]WM84P[7+cOT6", 1, 1);
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      // Undeclared exception!
      try { 
        matrixSeries0.update(1, 1, (-2158.26));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      MatrixSeries matrixSeries0 = new MatrixSeries("39'3**x-A0XKjgQ", 2113, 0);
      // Undeclared exception!
      try { 
        matrixSeries0.getItem(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("m4OjqL688@Y|OPyjk", 46, 46);
      matrixSeries0.zeroAll();
      assertEquals(2116, matrixSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("", 2, 2);
      matrixSeries0.setKey("");
      matrixSeries0.fireSeriesChanged();
      Locale locale0 = Locale.ENGLISH;
      Chronology chronology0 = Chronology.ofLocale(locale0);
      ChronoLocalDate chronoLocalDate0 = chronology0.dateEpochDay(0L);
      matrixSeries0.equals(chronoLocalDate0);
      matrixSeries0.equals("");
      matrixSeries0.setKey("");
      matrixSeries0.setKey("");
      matrixSeries0.setKey("");
      matrixSeries0.getRowCount();
      matrixSeries0.getColumnsCount();
      matrixSeries0.equals("");
      matrixSeries0.getColumnsCount();
      // Undeclared exception!
      try { 
        matrixSeries0.get(2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("xepXxaG", 3061, 1);
      int int0 = matrixSeries0.getColumnsCount();
      assertEquals(3061, matrixSeries0.getItemCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "";
      int int0 = 1;
      MatrixSeries matrixSeries0 = new MatrixSeries("", 1, 1);
      matrixSeries0.clone();
      // Undeclared exception!
      try { 
        matrixSeries0.getItem(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "";
      int int0 = 480;
      MatrixSeries matrixSeries0 = new MatrixSeries("", 480, 480);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "W*K$V;f6bC/2sFd3?'";
      int int0 = 0;
      MatrixSeries matrixSeries0 = null;
      try {
        matrixSeries0 = new MatrixSeries("W*K$V;f6bC/2sFd3?'", 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = ">-Jy|^5qV|ArZ%'";
      MatrixSeries matrixSeries0 = null;
      try {
        matrixSeries0 = new MatrixSeries(">-Jy|^5qV|ArZ%'", (-1472), (-1472));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = null;
      int int0 = (-1);
      MatrixSeries matrixSeries0 = null;
      try {
        matrixSeries0 = new MatrixSeries((String) null, (-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("", 1, 1747);
      int int0 = matrixSeries0.getItemRow(1);
      assertEquals(0, int0);
      
      CheckboxGroup checkboxGroup0 = new CheckboxGroup();
      checkboxGroup0.getSelectedCheckbox();
      checkboxGroup0.setSelectedCheckbox((Checkbox) null);
      checkboxGroup0.getSelectedCheckbox();
      matrixSeries0.equals((Object) null);
      boolean boolean0 = matrixSeries0.equals("");
      assertFalse(boolean0);
      assertEquals(1747, matrixSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = (-1003);
      MatrixSeries matrixSeries0 = null;
      try {
        matrixSeries0 = new MatrixSeries("", (-1003), 2524);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("d~F U<>", 182, 21);
      double[][] doubleArray0 = new double[7][7];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 182;
      doubleArray1[1] = (double) 182;
      doubleArray1[2] = (double) 182;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 182;
      doubleArray2[1] = (double) 21;
      doubleArray2[2] = (double) 182;
      doubleArray2[3] = (double) 21;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 21;
      doubleArray3[3] = (double) 182;
      doubleArray3[4] = (double) 21;
      doubleArray3[5] = (double) 21;
      doubleArray3[6] = 0.5;
      doubleArray3[7] = (double) 0;
      doubleArray3[8] = (double) 182;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 21;
      doubleArray4[1] = 0.5;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = 0.5;
      doubleArray4[4] = 0.5;
      doubleArray4[5] = 0.5;
      doubleArray4[6] = (-2220.4762);
      doubleArray4[7] = (double) 182;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) 21;
      doubleArray6[1] = 0.5;
      doubleArray6[2] = (-2220.4762);
      doubleArray6[3] = (-2220.4762);
      doubleArray6[4] = (-2220.4762);
      doubleArray6[5] = 0.5;
      doubleArray6[6] = (double) 0;
      doubleArray6[7] = (double) 21;
      doubleArray6[8] = (double) 21;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[2];
      doubleArray7[0] = (double) 182;
      doubleArray7[1] = (-2220.4762);
      doubleArray0[6] = doubleArray7;
      matrixSeries0.data = doubleArray0;
      matrixSeries0.update(0, 0, 182);
      // Undeclared exception!
      try { 
        matrixSeries0.getItem(182);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "mM\"5A9tv`T";
      int int0 = 1;
      MatrixSeries matrixSeries0 = new MatrixSeries("mM\"5A9tv`T", 1, 1);
      matrixSeries0.setKey("mM\"5A9tv`T");
      int int1 = (-291);
      matrixSeries0.isEmpty();
      // Undeclared exception!
      try { 
        matrixSeries0.update((-291), (-291), 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -291
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MatrixSeries matrixSeries0 = null;
      try {
        matrixSeries0 = new MatrixSeries((String) null, (-2196), (-2196));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "CT+V";
      int int0 = 0;
      MatrixSeries matrixSeries0 = null;
      try {
        matrixSeries0 = new MatrixSeries("CT+V", 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
