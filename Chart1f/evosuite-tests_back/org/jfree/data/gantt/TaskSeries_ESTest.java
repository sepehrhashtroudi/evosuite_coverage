/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 20:23:20 GMT 2022
 */

package org.jfree.data.gantt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.gantt.Task;
import org.jfree.data.gantt.TaskSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TaskSeries_ESTest extends TaskSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      MockDate mockDate0 = new MockDate(4214, 0, 1090, 1090, 0, 0);
      Task task0 = new Task("Ow&I+ev!5f*'e83L)", mockDate0, mockDate0);
      taskSeries0.add(task0);
      int int0 = taskSeries0.getItemCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      MockDate mockDate0 = new MockDate(0, 0, 1090, 1090, 1090, 0);
      Task task0 = new Task("Ow&I+ev!5f*'e83L)", mockDate0, mockDate0);
      task0.addSubtask(task0);
      taskSeries0.add(task0);
      Task task1 = taskSeries0.get("Ow&I+ev!5f*'e83L)");
      assertNull(task1.getPercentComplete());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      MockDate mockDate0 = new MockDate(4214, 0, 1090, 1090, 0, 0);
      Task task0 = new Task("Ow&I+ev!5f*'e83L)", mockDate0, mockDate0);
      taskSeries0.add(task0);
      Task task1 = taskSeries0.get(0);
      assertEquals("Ow&I+ev!5f*'e83L)", task1.getDescription());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("^Ygm6f%8M");
      // Undeclared exception!
      try { 
        taskSeries0.get((-412));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TaskSeries taskSeries0 = null;
      try {
        taskSeries0 = new TaskSeries((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      Object object0 = taskSeries0.clone();
      assertTrue(object0.equals((Object)taskSeries0));
      
      MockDate mockDate0 = new MockDate(4214, 0, 1090, 1090, 0, 0);
      Task task0 = new Task("Ow&I+ev!5f*'e83L)", mockDate0, mockDate0);
      taskSeries0.add(task0);
      boolean boolean0 = taskSeries0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("I!X,@GsmZw1#5:dW?");
      TaskSeries taskSeries1 = new TaskSeries("=hYCLa#/Y<");
      boolean boolean0 = taskSeries0.equals(taskSeries1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      Object object0 = taskSeries0.clone();
      boolean boolean0 = taskSeries0.equals(object0);
      assertTrue(boolean0);
      assertNotSame(object0, taskSeries0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("^Ygm6f%8");
      boolean boolean0 = taskSeries0.equals(taskSeries0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      MockDate mockDate0 = new MockDate(4214, 0, 1090, 1090, 0, 0);
      Task task0 = new Task("Ow&I+ev!5f*'e83L)", mockDate0, mockDate0);
      boolean boolean0 = taskSeries0.equals(task0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      Task task0 = new Task("Ow&I+ev!5f*'e83L)", mockDate0, mockDate0);
      taskSeries0.add(task0);
      Task task1 = taskSeries0.get("Ow&I+ev!5f*'e83L)");
      assertSame(task1, task0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      Task task0 = taskSeries0.get("org.jfree.data.gantt.TaskSeries");
      assertNull(task0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Null 'categoryKeys' argument.");
      // Undeclared exception!
      try { 
        taskSeries0.add((Task) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'task' argument.
         //
         verifyException("org.jfree.data.gantt.TaskSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      MockDate mockDate0 = new MockDate(4214, 0, 1090, 1090, 0, 0);
      Task task0 = new Task("Ow&I+ev!5f*'e83L)", mockDate0, mockDate0);
      taskSeries0.add(task0);
      Task task1 = taskSeries0.get("The 'data' is nll.");
      assertNull(task1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("");
      // Undeclared exception!
      try { 
        taskSeries0.get(706);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 706, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Null 'categoryKeys' argument.");
      taskSeries0.remove((Task) null);
      assertEquals(0, taskSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      int int0 = taskSeries0.getItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      taskSeries0.removeAll();
      assertNull(taskSeries0.getDescription());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TaskSeries taskSeries0 = new TaskSeries("Ow&I+ev!5f*'e83L)");
      List list0 = taskSeries0.getTasks();
      assertTrue(list0.isEmpty());
  }
}
