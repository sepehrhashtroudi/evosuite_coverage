/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 20:49:46 GMT 2022
 */

package org.jfree.data.time.ohlc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.MinguoDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.ComparableObjectItem;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.Year;
import org.jfree.data.time.ohlc.OHLCSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OHLCSeries_ESTest extends OHLCSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Quarter quarter0 = new Quarter(1, 1);
      OHLCSeries oHLCSeries0 = new OHLCSeries(quarter0);
      oHLCSeries0.add(quarter0, 1, 1, 1955.67023, 1.0);
      ComparableObjectItem comparableObjectItem0 = oHLCSeries0.remove(0);
      assertNotNull(comparableObjectItem0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Year year0 = new Year((-1098));
      OHLCSeries oHLCSeries0 = new OHLCSeries(year0);
      oHLCSeries0.add(year0, 9999, 9999, 0.0, (-9999));
      RegularTimePeriod regularTimePeriod0 = oHLCSeries0.getPeriod(0);
      assertEquals("-1098", regularTimePeriod0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1, (-1728), 1, 1, 0);
      Quarter quarter0 = new Quarter(mockDate0);
      OHLCSeries oHLCSeries0 = new OHLCSeries(quarter0);
      oHLCSeries0.add(quarter0, 249.17, (-1728), 4, 1915.5592327794534);
      ComparableObjectItem comparableObjectItem0 = oHLCSeries0.getDataItem(0);
      assertNotNull(comparableObjectItem0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1, (-1728), 1, 1, 0);
      Quarter quarter0 = new Quarter(mockDate0);
      OHLCSeries oHLCSeries0 = new OHLCSeries(quarter0);
      // Undeclared exception!
      try { 
        oHLCSeries0.remove(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Month month0 = new Month(mockDate0);
      OHLCSeries oHLCSeries0 = new OHLCSeries(month0);
      // Undeclared exception!
      try { 
        oHLCSeries0.getPeriod(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      OHLCSeries oHLCSeries0 = new OHLCSeries(fixedMillisecond0);
      oHLCSeries0.add(fixedMillisecond0, 0.0, (-1324.5717255), (-1324.5717255), 0.0);
      // Undeclared exception!
      try { 
        oHLCSeries0.add((RegularTimePeriod) null, (-1.0), (-1.0), (-1.0), (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.ohlc.OHLCSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OHLCSeries oHLCSeries0 = null;
      try {
        oHLCSeries0 = new OHLCSeries((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1, (-1728), 1, 1, 0);
      Quarter quarter0 = new Quarter(mockDate0);
      OHLCSeries oHLCSeries0 = new OHLCSeries(quarter0);
      // Undeclared exception!
      try { 
        oHLCSeries0.getDataItem(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(629);
      OHLCSeries oHLCSeries0 = new OHLCSeries(spreadsheetDate0);
      Day day0 = new Day();
      Hour hour0 = new Hour(0, day0);
      oHLCSeries0.add(hour0, 3, 1, 1.0, 2);
      // Undeclared exception!
      try { 
        oHLCSeries0.add(day0, 3728.197, 1, 1.7976931348623157E308, 196.74131865967);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't mix RegularTimePeriod class types.
         //
         verifyException("org.jfree.data.time.ohlc.OHLCSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Year year0 = new Year((-1098));
      OHLCSeries oHLCSeries0 = new OHLCSeries(year0);
      oHLCSeries0.add(year0, 9999, 9999, (-1098), (-9999));
      // Undeclared exception!
      try { 
        oHLCSeries0.add(year0, (-9999), (-9999), (-9999), 9999);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // X-value already exists.
         //
         verifyException("org.jfree.data.ComparableObjectSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Month month0 = new Month();
      OHLCSeries oHLCSeries0 = new OHLCSeries(month0);
      // Undeclared exception!
      try { 
        oHLCSeries0.getPeriod((-1673));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MinguoDate minguoDate0 = MockMinguoDate.now();
      OHLCSeries oHLCSeries0 = new OHLCSeries(minguoDate0);
      // Undeclared exception!
      try { 
        oHLCSeries0.remove((-1362));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Day day0 = new Day();
      OHLCSeries oHLCSeries0 = new OHLCSeries(day0);
      // Undeclared exception!
      try { 
        oHLCSeries0.getDataItem((-332));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
