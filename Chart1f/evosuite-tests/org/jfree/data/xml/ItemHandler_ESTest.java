/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 19:48:40 GMT 2022
 */

package org.jfree.data.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.data.xml.CategorySeriesHandler;
import org.jfree.data.xml.ItemHandler;
import org.jfree.data.xml.PieDatasetHandler;
import org.jfree.data.xml.RootHandler;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ItemHandler_ESTest extends ItemHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, pieDatasetHandler0);
      Short short0 = new Short((short)0);
      itemHandler0.setValue(short0);
      Number number0 = itemHandler0.getValue();
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Float float0 = new Float(2012.44F);
      itemHandler0.setValue(float0);
      Number number0 = itemHandler0.getValue();
      assertEquals(2012.44F, number0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Comparable<PieDatasetHandler> comparable0 = (Comparable<PieDatasetHandler>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("Item").when(comparable0).toString();
      itemHandler0.setKey(comparable0);
      Comparable comparable1 = itemHandler0.getKey();
      assertNotNull(comparable1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      CategorySeriesHandler categorySeriesHandler0 = new CategorySeriesHandler(pieDatasetHandler0);
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, categorySeriesHandler0);
      itemHandler0.setKey("Item");
      // Undeclared exception!
      try { 
        itemHandler0.endElement("Item", "be]!]po", "Item");
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      CategorySeriesHandler categorySeriesHandler0 = new CategorySeriesHandler(pieDatasetHandler0);
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, categorySeriesHandler0);
      // Undeclared exception!
      try { 
        itemHandler0.endElement((String) null, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, pieDatasetHandler0);
      // Undeclared exception!
      try { 
        itemHandler0.endElement(":R-L|J%8MMaAM", "Item", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xml.PieDatasetHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      itemHandler0.endElement("", "", "Item");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      itemHandler0.startElement("", "", "Value", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      itemHandler0.startElement("", "", "Item", (Attributes) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      try { 
        itemHandler0.startElement("+3$-CN^xBZ", "Gtp", "Salue", (Attributes) null);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Expected <Item> or <Value>...found Salue
         //
         verifyException("org.jfree.data.xml.ItemHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Comparable comparable0 = itemHandler0.getKey();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Double double0 = new Double((-1771.317514741418));
      itemHandler0.setValue(double0);
      Number number0 = itemHandler0.getValue();
      assertEquals((-1771.317514741418), number0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Number number0 = itemHandler0.getValue();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ItemHandler itemHandler0 = new ItemHandler((RootHandler) null, (DefaultHandler) null);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      // Undeclared exception!
      try { 
        itemHandler0.startElement("'position' out of bounds.", "y`Um=6E7u}", (String) null, attributesImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
