/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 20:04:58 GMT 2022
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.general.DefaultValueDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultValueDataset_ESTest extends DefaultValueDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Float float0 = new Float(0.0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) float0);
      Number number0 = defaultValueDataset0.getValue();
      assertEquals(0.0F, number0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-666.121602));
      Number number0 = defaultValueDataset0.getValue();
      assertEquals((-666.121602), number0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(187.480648137876);
      Number number0 = defaultValueDataset0.getValue();
      assertEquals(187.480648137876, number0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Float float0 = new Float(0.0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) float0);
      defaultValueDataset0.hashCode();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      defaultValueDataset0.hashCode();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      boolean boolean0 = defaultValueDataset0.equals(defaultValueDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      boolean boolean0 = defaultValueDataset0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.0);
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset();
      boolean boolean0 = defaultValueDataset0.equals(defaultValueDataset1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      Number number0 = defaultValueDataset0.getValue();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) null);
      defaultValueDataset0.setValue((Number) null);
  }
}
