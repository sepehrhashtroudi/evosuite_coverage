/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 21:40:59 GMT 2022
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.YInterval;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class YInterval_ESTest extends YInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-1.0), (-1.0), (-1.0));
      YInterval yInterval1 = new YInterval((-1.0), (-1.0), 0.0);
      boolean boolean0 = yInterval0.equals(yInterval1);
      assertEquals((-1.0), yInterval1.getYLow(), 0.01);
      assertEquals((-1.0), yInterval1.getY(), 0.01);
      assertEquals(0.0, yInterval1.getYHigh(), 0.01);
      assertFalse(boolean0);
      assertFalse(yInterval1.equals((Object)yInterval0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-982.8400593594), (-2673.62344659918), 0.0);
      YInterval yInterval1 = new YInterval((-982.8400593594), 3311.475401110435, 3940.705);
      boolean boolean0 = yInterval0.equals(yInterval1);
      assertEquals(3940.705, yInterval1.getYHigh(), 0.01);
      assertEquals((-982.8400593594), yInterval1.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals(3311.475401110435, yInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      YInterval yInterval0 = new YInterval(1747.24869, 1747.24869, 0.0);
      YInterval yInterval1 = new YInterval(0.0, 0.0, 1747.24869);
      boolean boolean0 = yInterval0.equals(yInterval1);
      assertEquals(0.0, yInterval1.getYLow(), 0.01);
      assertEquals(1747.24869, yInterval1.getYHigh(), 0.01);
      assertEquals(0.0, yInterval1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      YInterval yInterval0 = new YInterval(2002.142416, 2002.142416, 2002.142416);
      double double0 = yInterval0.getYLow();
      assertEquals(2002.142416, double0, 0.01);
      assertEquals(2002.142416, yInterval0.getY(), 0.01);
      assertEquals(2002.142416, yInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-3222.97), (-3222.97), (-3222.97));
      double double0 = yInterval0.getYLow();
      assertEquals((-3222.97), yInterval0.getYHigh(), 0.01);
      assertEquals((-3222.97), yInterval0.getY(), 0.01);
      assertEquals((-3222.97), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      YInterval yInterval0 = new YInterval(0.0, 0.0, 0.0);
      double double0 = yInterval0.getYHigh();
      assertEquals(0.0, yInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, yInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      YInterval yInterval0 = new YInterval(0.0, 0.0, 1747.24869);
      double double0 = yInterval0.getYHigh();
      assertEquals(0.0, yInterval0.getY(), 0.01);
      assertEquals(0.0, yInterval0.getYLow(), 0.01);
      assertEquals(1747.24869, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      YInterval yInterval0 = new YInterval(1433.677941501, 1433.677941501, 1433.677941501);
      double double0 = yInterval0.getY();
      assertEquals(1433.677941501, yInterval0.getYHigh(), 0.01);
      assertEquals(1433.677941501, double0, 0.01);
      assertEquals(1433.677941501, yInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-1.0), 3047.981500315996, (-1.0));
      double double0 = yInterval0.getY();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(3047.981500315996, yInterval0.getYLow(), 0.01);
      assertEquals((-1.0), yInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      YInterval yInterval0 = new YInterval(0.0, 0.0, 0.0);
      YInterval yInterval1 = new YInterval(0.0, 0.0, 0.0);
      boolean boolean0 = yInterval0.equals(yInterval1);
      assertTrue(boolean0);
      assertEquals(0.0, yInterval1.getYLow(), 0.01);
      assertEquals(0.0, yInterval1.getYHigh(), 0.01);
      assertEquals(0.0, yInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-1.0), 3047.981500315996, (-1.0));
      YInterval yInterval1 = new YInterval((-1.0), (-1.0), (-1.0));
      boolean boolean0 = yInterval0.equals(yInterval1);
      assertFalse(boolean0);
      assertEquals((-1.0), yInterval1.getYLow(), 0.01);
      assertEquals((-1.0), yInterval0.getY(), 0.01);
      assertEquals((-1.0), yInterval0.getYHigh(), 0.01);
      assertFalse(yInterval1.equals((Object)yInterval0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-1.0), 3047.981500315996, (-1.0));
      YInterval yInterval1 = new YInterval(0.0, (-1.0), (-1.0));
      boolean boolean0 = yInterval0.equals(yInterval1);
      assertEquals((-1.0), yInterval1.getYHigh(), 0.01);
      assertEquals(3047.981500315996, yInterval0.getYLow(), 0.01);
      assertEquals(0.0, yInterval1.getY(), 0.01);
      assertEquals((-1.0), yInterval0.getYHigh(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-1.0), 3047.981500315996, (-1.0));
      boolean boolean0 = yInterval0.equals("Q");
      assertEquals((-1.0), yInterval0.getY(), 0.01);
      assertEquals((-1.0), yInterval0.getYHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(3047.981500315996, yInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      YInterval yInterval0 = new YInterval(0.0, 0.0, 0.0);
      boolean boolean0 = yInterval0.equals(yInterval0);
      assertEquals(0.0, yInterval0.getYHigh(), 0.01);
      assertEquals(0.0, yInterval0.getY(), 0.01);
      assertEquals(0.0, yInterval0.getYLow(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      YInterval yInterval0 = new YInterval(0.0, 0.0, 0.0);
      YInterval yInterval1 = new YInterval(0.0, 0.0, (-1388.0));
      boolean boolean0 = yInterval0.equals(yInterval1);
      assertFalse(yInterval1.equals((Object)yInterval0));
      assertEquals(0.0, yInterval1.getY(), 0.01);
      assertEquals((-1388.0), yInterval1.getYHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, yInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      YInterval yInterval0 = new YInterval(0.0, 0.0, 0.0);
      double double0 = yInterval0.getY();
      assertEquals(0.0, yInterval0.getYLow(), 0.01);
      assertEquals(0.0, yInterval0.getYHigh(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      YInterval yInterval0 = new YInterval(0.0, 0.0, 0.0);
      double double0 = yInterval0.getYLow();
      assertEquals(0.0, yInterval0.getYHigh(), 0.01);
      assertEquals(0.0, yInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      YInterval yInterval0 = new YInterval((-1.0), 3047.981500315996, (-1.0));
      double double0 = yInterval0.getYHigh();
      assertEquals(3047.981500315996, yInterval0.getYLow(), 0.01);
      assertEquals((-1.0), yInterval0.getY(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }
}
