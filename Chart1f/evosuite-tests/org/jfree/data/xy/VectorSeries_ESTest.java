/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 21:32:53 GMT 2022
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneOffset;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.ComparableObjectItem;
import org.jfree.data.time.Day;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Second;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.VectorDataItem;
import org.jfree.data.xy.VectorSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VectorSeries_ESTest extends VectorSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0, true, true);
      vectorSeries0.add(59, 59, 0.0, 0.0);
      ComparableObjectItem comparableObjectItem0 = vectorSeries0.remove(0);
      assertNotNull(comparableObjectItem0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0, true, true);
      vectorSeries0.add(59, 59, 0.0, 0.0);
      double double0 = vectorSeries0.getYValue(0);
      assertEquals(59.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Hour hour0 = new Hour();
      VectorSeries vectorSeries0 = new VectorSeries(hour0);
      vectorSeries0.add(0, 0.0, 0, 0.0);
      double double0 = vectorSeries0.getXValue(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0, true, true);
      vectorSeries0.add((-827.4175059699929), 0, 0.0, (-827.4175059699929));
      double double0 = vectorSeries0.getXValue(0);
      assertEquals((-827.4175059699929), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Hour hour0 = new Hour();
      VectorSeries vectorSeries0 = new VectorSeries(hour0);
      vectorSeries0.add(0, 0.0, 0, 0.0);
      double double0 = vectorSeries0.getVectorYValue(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      VectorSeries vectorSeries0 = new VectorSeries(zoneOffset0);
      vectorSeries0.add(3321.172072, 3321.172072, 3321.172072, 1.0);
      double double0 = vectorSeries0.getVectorYValue(0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Hour hour0 = new Hour();
      VectorSeries vectorSeries0 = new VectorSeries(hour0);
      vectorSeries0.add(0, 0.0, 0, 0.0);
      double double0 = vectorSeries0.getVectorXValue(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Hour hour0 = new Hour();
      VectorSeries vectorSeries0 = new VectorSeries(hour0);
      vectorSeries0.add(0, 0.0, 0, 0.0);
      ComparableObjectItem comparableObjectItem0 = vectorSeries0.getDataItem(0);
      assertNotNull(comparableObjectItem0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Day day0 = new Day();
      VectorSeries vectorSeries0 = new VectorSeries(day0, true, false);
      // Undeclared exception!
      try { 
        vectorSeries0.remove((-1639));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2591), (-2591), (-2591), (-814), (-814));
      Week week0 = new Week(mockDate0);
      VectorSeries vectorSeries0 = new VectorSeries(week0, true, true);
      // Undeclared exception!
      try { 
        vectorSeries0.getYValue((-9999));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0);
      // Undeclared exception!
      try { 
        vectorSeries0.getXValue((-314));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VectorDataItem vectorDataItem0 = new VectorDataItem(1739.8482988227327, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, 1955.3);
      VectorSeries vectorSeries0 = new VectorSeries(vectorDataItem0, true, true);
      // Undeclared exception!
      try { 
        vectorSeries0.getVectorYValue((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2591), (-2591), (-2591), (-814), (-814));
      Week week0 = new Week(mockDate0);
      VectorSeries vectorSeries0 = new VectorSeries(week0);
      // Undeclared exception!
      try { 
        vectorSeries0.getVectorXValue((-1251));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, (-2071), 0);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.GERMANY;
      Year year0 = new Year(mockDate0, timeZone0, locale0);
      Week week0 = new Week((-2071), year0);
      VectorSeries vectorSeries0 = new VectorSeries(week0);
      // Undeclared exception!
      try { 
        vectorSeries0.getDataItem((-9999));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VectorSeries vectorSeries0 = null;
      try {
        vectorSeries0 = new VectorSeries((Comparable) null, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VectorSeries vectorSeries0 = null;
      try {
        vectorSeries0 = new VectorSeries((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0, true, true);
      // Undeclared exception!
      try { 
        vectorSeries0.getDataItem(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0, true, true);
      // Undeclared exception!
      try { 
        vectorSeries0.remove(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0, true, true);
      // Undeclared exception!
      try { 
        vectorSeries0.getVectorXValue(59);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 59, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Hour hour0 = new Hour();
      VectorSeries vectorSeries0 = new VectorSeries(hour0);
      // Undeclared exception!
      try { 
        vectorSeries0.getYValue(23);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 23, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Minute minute0 = new Minute(mockDate0);
      VectorSeries vectorSeries0 = new VectorSeries(minute0);
      // Undeclared exception!
      try { 
        vectorSeries0.getXValue(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Second second0 = new Second();
      VectorSeries vectorSeries0 = new VectorSeries(second0, true, true);
      vectorSeries0.add(59, 59, 0.0, 0.0);
      double double0 = vectorSeries0.getXValue(0);
      assertEquals(59.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      VectorSeries vectorSeries0 = new VectorSeries(zoneOffset0);
      // Undeclared exception!
      try { 
        vectorSeries0.getVectorYValue(26);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 26, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
