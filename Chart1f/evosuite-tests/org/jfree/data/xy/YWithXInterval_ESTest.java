/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 21:23:07 GMT 2022
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.YWithXInterval;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class YWithXInterval_ESTest extends YWithXInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, (-277.56802027626));
      YWithXInterval yWithXInterval1 = new YWithXInterval(0.0, 0.0, 0.0);
      boolean boolean0 = yWithXInterval1.equals(yWithXInterval0);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
      assertFalse(yWithXInterval0.equals((Object)yWithXInterval1));
      assertEquals(0.0, yWithXInterval0.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, yWithXInterval1.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(44.5442900762129, 44.5442900762129, 1.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(44.5442900762129, 821.677846025, 1016.1);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(1016.1, yWithXInterval1.getXHigh(), 0.01);
      assertEquals(821.677846025, yWithXInterval1.getXLow(), 0.01);
      assertEquals(44.5442900762129, yWithXInterval1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1348.276029, 1348.276029, 1348.276029);
      YWithXInterval yWithXInterval1 = new YWithXInterval(1.0, (-4747.048), 0.0);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(0.0, yWithXInterval1.getXHigh(), 0.01);
      assertEquals(1.0, yWithXInterval1.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals((-4747.048), yWithXInterval1.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, (-277.56802027626));
      double double0 = yWithXInterval0.getY();
      assertEquals((-277.56802027626), yWithXInterval0.getXHigh(), 0.01);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1.0, 1.0, 1.0);
      double double0 = yWithXInterval0.getY();
      assertEquals(1.0, yWithXInterval0.getXLow(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, yWithXInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, (-277.56802027626));
      double double0 = yWithXInterval0.getXLow();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, yWithXInterval0.getY(), 0.01);
      assertEquals((-277.56802027626), yWithXInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-954.5126386636), (-954.5126386636), (-954.5126386636));
      double double0 = yWithXInterval0.getXLow();
      assertEquals((-954.5126386636), double0, 0.01);
      assertEquals((-954.5126386636), yWithXInterval0.getXHigh(), 0.01);
      assertEquals((-954.5126386636), yWithXInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      double double0 = yWithXInterval0.getXHigh();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, yWithXInterval0.getY(), 0.01);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, (-277.56802027626));
      double double0 = yWithXInterval0.getXHigh();
      assertEquals((-277.56802027626), double0, 0.01);
      assertEquals(0.0, yWithXInterval0.getY(), 0.01);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1.0, 1.0, 1.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(1.0, 1.0, 1.0);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(1.0, yWithXInterval1.getY(), 0.01);
      assertTrue(boolean0);
      assertEquals(1.0, yWithXInterval1.getXHigh(), 0.01);
      assertEquals(1.0, yWithXInterval1.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1.0, 1.0, 1.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(1.0, (-1333.83), 107.27021);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertFalse(boolean0);
      assertEquals(1.0, yWithXInterval1.getY(), 0.01);
      assertEquals(107.27021, yWithXInterval1.getXHigh(), 0.01);
      assertEquals((-1333.83), yWithXInterval1.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-4773.75086378), 1.0, 1.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(1.0, (-1.518498965968622), 1.0);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(1.0, yWithXInterval1.getXHigh(), 0.01);
      assertEquals((-4773.75086378), yWithXInterval0.getY(), 0.01);
      assertEquals((-1.518498965968622), yWithXInterval1.getXLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, yWithXInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-4773.75086378), 1.0, 1.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval((-4773.75086378), 1.0, 306.129744);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertFalse(yWithXInterval1.equals((Object)yWithXInterval0));
      assertEquals(306.129744, yWithXInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, yWithXInterval1.getXLow(), 0.01);
      assertEquals((-4773.75086378), yWithXInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-4773.75086378), 1.0, 1.0);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval0);
      assertEquals(1.0, yWithXInterval0.getXLow(), 0.01);
      assertEquals(1.0, yWithXInterval0.getXHigh(), 0.01);
      assertTrue(boolean0);
      assertEquals((-4773.75086378), yWithXInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-4773.75086378), 1.0, 1.0);
      Object object0 = new Object();
      boolean boolean0 = yWithXInterval0.equals(object0);
      assertEquals(1.0, yWithXInterval0.getXLow(), 0.01);
      assertFalse(boolean0);
      assertEquals((-4773.75086378), yWithXInterval0.getY(), 0.01);
      assertEquals(1.0, yWithXInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-4773.75086378), 1.0, 1.0);
      double double0 = yWithXInterval0.getY();
      assertEquals(1.0, yWithXInterval0.getXHigh(), 0.01);
      assertEquals((-4773.75086378), double0, 0.01);
      assertEquals(1.0, yWithXInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-4773.75086378), 1.0, 1.0);
      double double0 = yWithXInterval0.getXHigh();
      assertEquals(1.0, yWithXInterval0.getXLow(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals((-4773.75086378), yWithXInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-4773.75086378), 1.0, 1.0);
      double double0 = yWithXInterval0.getXLow();
      assertEquals(1.0, double0, 0.01);
      assertEquals((-4773.75086378), yWithXInterval0.getY(), 0.01);
      assertEquals(1.0, yWithXInterval0.getXHigh(), 0.01);
  }
}
