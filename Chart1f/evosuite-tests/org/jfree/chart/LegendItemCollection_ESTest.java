/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:26:26 GMT 2022
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Polygon;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.text.AttributedString;
import java.util.Iterator;
import javax.swing.JPasswordField;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LegendItemCollection_ESTest extends LegendItemCollection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      legendItemCollection0.addAll(legendItemCollection0);
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      LegendItem legendItem0 = new LegendItem("org.jfree.chart.LegendItemCollection", "org.jfree.chart.LegendItemCollection", "org.jfree.chart.LegendItemCollection", "org.jfree.chart.LegendItemCollection", line2D_Double0, systemColor0);
      legendItemCollection0.add(legendItem0);
      int int0 = legendItemCollection0.getItemCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      legendItemCollection0.add((LegendItem) null);
      LegendItem legendItem0 = legendItemCollection0.get(0);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      AttributedString attributedString0 = new AttributedString("4En(\"[m_G~(u*2");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      BasicStroke basicStroke0 = new BasicStroke(0.0F, 0, 0, 1442.8282F);
      LegendItem legendItem0 = new LegendItem(attributedString0, "4En(\"[m_G~(u*2", "4En(\"[m_G~(u*2", "T#;jvJO:'(2G~?TU", (Shape) null, color0, basicStroke0, color0);
      legendItemCollection0.add(legendItem0);
      LegendItem legendItem1 = legendItemCollection0.get(0);
      assertTrue(legendItem1.isShapeVisible());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      int[] intArray0 = new int[0];
      Polygon polygon0 = new Polygon(intArray0, intArray0, 0);
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      BasicStroke basicStroke0 = new BasicStroke(0.0F);
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      LegendItem legendItem0 = new LegendItem("P", "", "P", "P", rectangle2D0, basicStroke0, systemColor0);
      legendItemCollection0.add(legendItem0);
      LegendItem legendItem1 = legendItemCollection0.get(0);
      assertEquals(0, legendItem1.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      LegendItem legendItem0 = new LegendItem("", "", "", "", line2D_Double0, systemColor0);
      legendItem0.setSeriesIndex(134);
      legendItemCollection0.add(legendItem0);
      LegendItem legendItem1 = legendItemCollection0.get(0);
      assertFalse(legendItem1.isShapeOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      LegendItem legendItem0 = new LegendItem("", "", "", "", line2D_Double0, systemColor0);
      legendItem0.setDatasetIndex(1);
      legendItemCollection0.add(legendItem0);
      LegendItem legendItem1 = legendItemCollection0.get(0);
      assertEquals("", legendItem1.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      // Undeclared exception!
      try { 
        legendItemCollection0.get((-668));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      LegendItem legendItem0 = new LegendItem("org.jfree.chart.LegendItemCollection", "org.jfree.chart.LegendItemCollection", "org.jfree.chart.LegendItemCollection", "org.jfree.chart.LegendItemCollection", line2D_Double0, systemColor0);
      legendItem0.setOutlineStroke((Stroke) null);
      legendItemCollection0.add(legendItem0);
      Object object0 = legendItemCollection0.clone();
      // Undeclared exception!
      try { 
        legendItemCollection0.equals(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.LegendItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      SystemColor systemColor0 = SystemColor.window;
      LegendItem legendItem0 = new LegendItem("bins", "bins", "bins", "bins", line2D_Double0, systemColor0);
      legendItemCollection0.add(legendItem0);
      LegendItemCollection legendItemCollection1 = new LegendItemCollection();
      boolean boolean0 = legendItemCollection0.equals(legendItemCollection1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      LegendItemCollection legendItemCollection1 = new LegendItemCollection();
      boolean boolean0 = legendItemCollection0.equals(legendItemCollection1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      boolean boolean0 = legendItemCollection0.equals(legendItemCollection0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JPasswordField jPasswordField0 = new JPasswordField("org.jfree.chart.LegendItemCollection");
      boolean boolean0 = legendItemCollection0.equals(jPasswordField0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      int int0 = legendItemCollection0.getItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      // Undeclared exception!
      try { 
        legendItemCollection0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      // Undeclared exception!
      try { 
        legendItemCollection0.addAll((LegendItemCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.LegendItemCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      Iterator iterator0 = legendItemCollection0.iterator();
      assertNotNull(iterator0);
  }
}
