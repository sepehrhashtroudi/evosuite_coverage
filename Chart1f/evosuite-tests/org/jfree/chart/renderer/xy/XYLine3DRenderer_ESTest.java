/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:21:43 GMT 2022
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.DefaultCategoryDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYLine3DRenderer_ESTest extends XYLine3DRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getBaseItemLabelPaint();
      xYLine3DRenderer0.setWallPaint(paint0);
      XYLine3DRenderer xYLine3DRenderer1 = (XYLine3DRenderer)xYLine3DRenderer0.clone();
      boolean boolean0 = xYLine3DRenderer0.equals(xYLine3DRenderer1);
      assertTrue(boolean0);
      assertEquals(8.0, xYLine3DRenderer1.getYOffset(), 0.01);
      assertEquals(12.0, xYLine3DRenderer1.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setYOffset(1859.4338912503797);
      Object object0 = xYLine3DRenderer0.clone();
      boolean boolean0 = xYLine3DRenderer0.equals(object0);
      assertEquals(1859.4338912503797, xYLine3DRenderer0.getYOffset(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setXOffset(118.9307723541799);
      XYLine3DRenderer xYLine3DRenderer1 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.equals(xYLine3DRenderer1);
      assertEquals(118.9307723541799, xYLine3DRenderer0.getXOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setXOffset(118.9307723541799);
      Object object0 = xYLine3DRenderer0.clone();
      boolean boolean0 = xYLine3DRenderer0.equals(object0);
      assertEquals(118.9307723541799, xYLine3DRenderer0.getXOffset(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isItemPass(680);
      assertFalse(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isLinePass((-1));
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertFalse(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("kns%LbDq(q{{C", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (-871.586044941185), (-4895.79188470948), chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      xYLine3DRenderer0.drawShape1(sunGraphics2D0, 0, 0, 41, false, spiderWebPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      assertEquals((-2236963), sunGraphics2D0.pixel);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      
      xYLine3DRenderer0.setYOffset(0.0);
      double double0 = xYLine3DRenderer0.getYOffset();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      
      xYLine3DRenderer0.setXOffset(0);
      double double0 = xYLine3DRenderer0.getXOffset();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setXOffset((-2409));
      double double0 = xYLine3DRenderer0.getXOffset();
      assertEquals((-2409.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setWallPaint((Paint) null);
      Paint paint0 = xYLine3DRenderer0.getWallPaint();
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertNull(paint0);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      Paint paint0 = xYBoxAndWhiskerRenderer0.getBoxPaint();
      xYLine3DRenderer0.setWallPaint(paint0);
      XYLine3DRenderer xYLine3DRenderer1 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.equals(xYLine3DRenderer1);
      assertEquals(8.0, xYLine3DRenderer1.getYOffset(), 0.01);
      assertFalse(boolean0);
      assertEquals(12.0, xYLine3DRenderer1.getXOffset(), 0.01);
      assertFalse(xYLine3DRenderer1.equals((Object)xYLine3DRenderer0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setYOffset((double) xYLine3DRenderer0.ZERO);
      XYLine3DRenderer xYLine3DRenderer1 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.equals(xYLine3DRenderer1);
      assertFalse(boolean0);
      assertEquals(0.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setXOffset((-3316.1839321));
      XYLine3DRenderer xYLine3DRenderer1 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.equals(xYLine3DRenderer1);
      assertEquals((-3316.1839321), xYLine3DRenderer0.getXOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.equals(xYLine3DRenderer0);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertTrue(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      Shape shape0 = xYLine3DRenderer0.lookupLegendShape(3);
      boolean boolean0 = xYLine3DRenderer0.equals(shape0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertFalse(boolean0);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("kns%LbDq(q{{C", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (-871.586044941185), (-4895.79188470948), chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        xYLine3DRenderer0.drawShape1(graphics2D0, 0, (-153), (-153), false, (Shape) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("kns%LbDq(q{{C", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (-871.586044941185), (-4895.79188470948), chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      xYLine3DRenderer0.drawShape1(sunGraphics2D0, 56, 0, 41, false, spiderWebPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      assertEquals((-16776961), sunGraphics2D0.eargb);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isShadowPass(0);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertTrue(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isShadowPass((-894));
      assertFalse(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isItemPass(2);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertTrue(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isItemPass(0);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertFalse(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isLinePass(1);
      assertTrue(boolean0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      boolean boolean0 = xYLine3DRenderer0.isLinePass(0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYLine3DRenderer0.setYOffset((-1169.43217238927));
      double double0 = xYLine3DRenderer0.getYOffset();
      assertEquals((-1169.43217238927), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      double double0 = xYLine3DRenderer0.getYOffset();
      assertEquals(8.0, double0, 0.01);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      double double0 = xYLine3DRenderer0.getXOffset();
      assertEquals(12.0, double0, 0.01);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      int int0 = xYLine3DRenderer0.getPassCount();
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      Color color0 = (Color)xYLine3DRenderer0.getWallPaint();
      xYLine3DRenderer0.setWallPaint(color0);
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertEquals(221, color0.getRed());
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
  }
}
