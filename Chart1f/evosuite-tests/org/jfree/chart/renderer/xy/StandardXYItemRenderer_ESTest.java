/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:13:42 GMT 2022
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.text.DateFormat;
import java.text.DateFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.CustomXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.TimeSeriesURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.UnitType;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.Week;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardXYItemRenderer_ESTest extends StandardXYItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4, 1508, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      DateAxis dateAxis0 = new DateAxis("RectangleAnchor.TOP_LEFT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      XYItemRendererState xYItemRendererState0 = xYAreaRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedDomainXYPlot0, xYIntervalSeriesCollection0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        standardXYItemRenderer0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, combinedDomainXYPlot0, dateAxis0, dateAxis0, xYIntervalSeriesCollection0, 15, 3, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(1401);
      boolean boolean0 = cyclicXYItemRenderer0.getItemShapeFilled(1900, 0);
      assertFalse(cyclicXYItemRenderer0.getPlotLines());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("org.jfree.chart.renderer.xy.StandardXYItemRenderer$State", numberFormat0, dateFormat0);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0, standardXYToolTipGenerator0);
      standardXYItemRenderer0.setSeriesShapesFilled(0, (Boolean) null);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(13, customXYToolTipGenerator0);
      boolean boolean0 = standardXYItemRenderer0.getPlotLines();
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(boolean0);
      assertTrue(standardXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(standardXYItemRenderer0.getBaseShapesVisible());
      assertTrue(standardXYItemRenderer0.getPlotImages());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-1481), standardXYZToolTipGenerator0);
      boolean boolean0 = standardXYItemRenderer0.getPlotImages();
      assertTrue(standardXYItemRenderer0.getBaseShapesVisible());
      assertTrue(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertTrue(boolean0);
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0, (XYToolTipGenerator) null);
      boolean boolean0 = standardXYItemRenderer0.getPlotDiscontinuous();
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertFalse(boolean0);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      
      standardXYItemRenderer0.setGapThreshold(0);
      double double0 = standardXYItemRenderer0.getGapThreshold();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(1);
      boolean boolean0 = cyclicXYItemRenderer0.getBaseShapesVisible();
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(boolean0);
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getPlotLines());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(4);
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      
      cyclicXYItemRenderer0.setBaseShapesFilled(false);
      boolean boolean0 = cyclicXYItemRenderer0.getBaseShapesFilled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("org.jfree.chart.renderer.xy.StandardXYItemRenderer", "", "org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(244, (XYToolTipGenerator) null, standardXYURLGenerator0);
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0, standardXYToolTipGenerator0, timeSeriesURLGenerator0);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator("org.jfree.chart.renderer.xy.StandardXYItemRenderer$State", (DateFormat) null, numberFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-2213), boxAndWhiskerXYToolTipGenerator0, standardXYURLGenerator0);
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertTrue(standardXYItemRenderer0.getBaseShapesVisible());
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      StandardXYItemRenderer standardXYItemRenderer1 = (StandardXYItemRenderer)standardXYItemRenderer0.clone();
      boolean boolean0 = standardXYItemRenderer0.equals(standardXYItemRenderer1);
      assertNotSame(standardXYItemRenderer1, standardXYItemRenderer0);
      assertFalse(standardXYItemRenderer1.getBaseShapesVisible());
      assertTrue(boolean0);
      assertTrue(standardXYItemRenderer1.getBaseShapesFilled());
      assertTrue(standardXYItemRenderer1.getPlotLines());
      assertEquals(1.0, standardXYItemRenderer1.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer1.getPlotImages());
      assertFalse(standardXYItemRenderer1.getPlotDiscontinuous());
      assertFalse(standardXYItemRenderer1.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      boolean boolean0 = standardXYItemRenderer0.equals(standardXYItemRenderer0);
      assertTrue(standardXYItemRenderer0.getPlotLines());
      assertTrue(boolean0);
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(standardXYItemRenderer0.getPlotImages());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-1334), standardXYZToolTipGenerator0);
      boolean boolean0 = cyclicXYItemRenderer0.equals(standardXYZToolTipGenerator0);
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(boolean0);
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, 0, 2, 0, 15, 1, false, true, false, false, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      StandardXYItemRenderer.State standardXYItemRenderer_State0 = new StandardXYItemRenderer.State(plotRenderingInfo0);
      Rectangle rectangle0 = new Rectangle(10, 4, 2, 2);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Week week0 = new Week(3876, 2);
      Locale locale0 = Locale.ITALY;
      DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      PeriodAxis periodAxis0 = new PeriodAxis("X|1/SG6?~8y", week0, week0, timeZone0, locale0);
      // Undeclared exception!
      try { 
        standardXYItemRenderer0.drawItem((Graphics2D) null, standardXYItemRenderer_State0, rectangle0, combinedDomainXYPlot0, periodAxis0, periodAxis0, (XYDataset) null, 2, 305, true, 4105);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(66, boxAndWhiskerXYToolTipGenerator0, (XYURLGenerator) null);
      cyclicXYItemRenderer0.getLegendItem((-2464), 0);
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      standardXYItemRenderer0.setPlot(combinedRangeXYPlot0);
      standardXYItemRenderer0.getLegendItem(594, (-32));
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(standardXYItemRenderer0.getPlotLines());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1920);
      // Undeclared exception!
      try { 
        standardXYItemRenderer0.setLegendLine((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'line' argument.
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      
      standardXYItemRenderer0.setPlotDiscontinuous(true);
      assertTrue(standardXYItemRenderer0.getPlotDiscontinuous());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(66, boxAndWhiskerXYToolTipGenerator0, (XYURLGenerator) null);
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      
      cyclicXYItemRenderer0.setPlotDiscontinuous(false);
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      assertFalse(standardXYItemRenderer0.getPlotImages());
      
      standardXYItemRenderer0.setPlotImages(true);
      assertTrue(standardXYItemRenderer0.getPlotImages());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-1334), standardXYZToolTipGenerator0);
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      
      cyclicXYItemRenderer0.setPlotImages(false);
      assertTrue(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1920);
      // Undeclared exception!
      try { 
        standardXYItemRenderer0.setGapThresholdType((UnitType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'thresholdType' argument.
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-1334), standardXYZToolTipGenerator0);
      UnitType unitType0 = UnitType.ABSOLUTE;
      cyclicXYItemRenderer0.setGapThresholdType(unitType0);
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertTrue(cyclicXYItemRenderer0.getPlotDiscontinuous());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(127, standardXYToolTipGenerator0);
      assertTrue(standardXYItemRenderer0.getPlotLines());
      
      standardXYItemRenderer0.setPlotLines(false);
      assertFalse(standardXYItemRenderer0.getPlotLines());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(13);
      assertFalse(standardXYItemRenderer0.getPlotLines());
      
      standardXYItemRenderer0.setPlotLines(false);
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertTrue(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(standardXYItemRenderer0.getBaseShapesVisible());
      assertTrue(standardXYItemRenderer0.getPlotDiscontinuous());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-1334), standardXYZToolTipGenerator0);
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      
      cyclicXYItemRenderer0.setBaseShapesVisible(true);
      assertTrue(cyclicXYItemRenderer0.getBaseShapesVisible());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      
      standardXYItemRenderer0.setBaseShapesVisible(false);
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-1202));
      Line2D.Double line2D_Double0 = (Line2D.Double)standardXYItemRenderer0.getLegendLine();
      standardXYItemRenderer0.setLegendLine(line2D_Double0);
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertTrue(standardXYItemRenderer0.getPlotImages());
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertTrue(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getPlotDiscontinuous());
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-375), (XYToolTipGenerator) null);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(3, (XYToolTipGenerator) null, (XYURLGenerator) null);
      boolean boolean0 = standardXYItemRenderer0.equals(cyclicXYItemRenderer0);
      assertTrue(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertFalse(boolean0);
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(standardXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(66, boxAndWhiskerXYToolTipGenerator0, (XYURLGenerator) null);
      cyclicXYItemRenderer0.getGapThresholdType();
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      double double0 = standardXYItemRenderer0.getGapThreshold();
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertEquals(1.0, double0, 0.01);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0);
      standardXYItemRenderer0.getSeriesShapesFilled(0);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(standardXYItemRenderer0.getPlotImages());
      assertFalse(standardXYItemRenderer0.getPlotLines());
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(66, boxAndWhiskerXYToolTipGenerator0, (XYURLGenerator) null);
      // Undeclared exception!
      try { 
        cyclicXYItemRenderer0.setSeriesShapesFilled((-1566), (Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      
      standardXYItemRenderer0.setGapThreshold((-1));
      double double0 = standardXYItemRenderer0.getGapThreshold();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(66, boxAndWhiskerXYToolTipGenerator0, (XYURLGenerator) null);
      boolean boolean0 = cyclicXYItemRenderer0.getBaseShapesFilled();
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(boolean0);
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      boolean boolean0 = standardXYItemRenderer0.getPlotLines();
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(boolean0);
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(standardXYItemRenderer0.getPlotImages());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3, 10, 1, (-871.8275));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1336.50199141, (-871.8275), "1'%EL+V3`iK&1 4%%S");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StandardXYItemRenderer.State standardXYItemRenderer_State0 = (StandardXYItemRenderer.State)cyclicXYItemRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainXYPlot0, (XYDataset) null, plotRenderingInfo0);
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertEquals((-1), standardXYItemRenderer_State0.getSeriesIndex());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-2456));
      boolean boolean0 = cyclicXYItemRenderer0.getPlotDiscontinuous();
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertTrue(boolean0);
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(66, boxAndWhiskerXYToolTipGenerator0, (XYURLGenerator) null);
      boolean boolean0 = cyclicXYItemRenderer0.getDrawSeriesLineAsPath();
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      boolean boolean0 = cyclicXYItemRenderer0.getBaseShapesVisible();
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
      assertFalse(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertFalse(boolean0);
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-2456));
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection((TimePeriodValues) null);
      DateAxis dateAxis0 = new DateAxis();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, dateAxis0, dateAxis0, cyclicXYItemRenderer0);
      cyclicXYItemRenderer0.getImage(xYPlot0, 0, 0, 10, (-1.0));
      assertFalse(cyclicXYItemRenderer0.getPlotImages());
      assertTrue(cyclicXYItemRenderer0.getPlotDiscontinuous());
      assertEquals(1.0, cyclicXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      assertFalse(cyclicXYItemRenderer0.getPlotLines());
      assertFalse(cyclicXYItemRenderer0.getBaseShapesVisible());
      assertTrue(cyclicXYItemRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      boolean boolean0 = standardXYItemRenderer0.getPlotImages();
      assertTrue(standardXYItemRenderer0.getPlotLines());
      assertFalse(standardXYItemRenderer0.getBaseShapesVisible());
      assertFalse(boolean0);
      assertTrue(standardXYItemRenderer0.getBaseShapesFilled());
      assertFalse(standardXYItemRenderer0.getPlotDiscontinuous());
      assertEquals(1.0, standardXYItemRenderer0.getGapThreshold(), 0.01);
      assertFalse(standardXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        standardXYItemRenderer0.getImageHotspot(combinedDomainCategoryPlot0, 10, 10, 1.0F, 10, (Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-1334), standardXYZToolTipGenerator0);
      assertFalse(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
      
      cyclicXYItemRenderer0.setDrawSeriesLineAsPath(true);
      assertTrue(cyclicXYItemRenderer0.getDrawSeriesLineAsPath());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StandardXYItemRenderer.State standardXYItemRenderer_State0 = new StandardXYItemRenderer.State((PlotRenderingInfo) null);
      int int0 = standardXYItemRenderer_State0.getSeriesIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StandardXYItemRenderer.State standardXYItemRenderer_State0 = new StandardXYItemRenderer.State(plotRenderingInfo0);
      standardXYItemRenderer_State0.setLastPointGood(false);
      assertFalse(standardXYItemRenderer_State0.isLastPointGood());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StandardXYItemRenderer.State standardXYItemRenderer_State0 = new StandardXYItemRenderer.State(plotRenderingInfo0);
      boolean boolean0 = standardXYItemRenderer_State0.isLastPointGood();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StandardXYItemRenderer.State standardXYItemRenderer_State0 = new StandardXYItemRenderer.State(plotRenderingInfo0);
      standardXYItemRenderer_State0.setSeriesIndex((-1));
      assertEquals((-1), standardXYItemRenderer_State0.getSeriesIndex());
  }
}
