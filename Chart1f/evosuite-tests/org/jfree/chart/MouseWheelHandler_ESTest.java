/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:14:27 GMT 2022
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.event.MouseWheelEvent;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.MouseWheelHandler;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MouseWheelHandler_ESTest extends MouseWheelHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, 10, 10, 10, 10, 5, false, false, false, false, false, false, false);
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      assertEquals(0.1, mouseWheelHandler0.getZoomFactor(), 0.01);
      
      mouseWheelHandler0.setZoomFactor(0.0);
      double double0 = mouseWheelHandler0.getZoomFactor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 121, 0, 1273, 1403, 196, 196, true, true, true, true, true, true);
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      mouseWheelHandler0.setZoomFactor((-2435.95));
      double double0 = mouseWheelHandler0.getZoomFactor();
      assertEquals((-2435.95), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 853, (-719), 853, (-719), 10, false, false, false, false, false, false, false);
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      // Undeclared exception!
      try { 
        mouseWheelHandler0.mouseWheelMoved((MouseWheelEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.MouseWheelHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MouseWheelHandler mouseWheelHandler0 = null;
      try {
        mouseWheelHandler0 = new MouseWheelHandler((ChartPanel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.MouseWheelHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Font font0 = new Font((String) null, 2826, 2826);
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, font0, meterPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      JTable jTable0 = new JTable();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTable0, 15, 1024, 300, 680, 15, 680, 680, 15, true, 680, 15, 2826);
      mouseWheelHandler0.mouseWheelMoved(mouseWheelEvent0);
      assertEquals(0.1, mouseWheelHandler0.getZoomFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 500, 500, 500, 10, 10, true, true, false, true, true, true, false);
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 10, 680, 10, 500, 420, 680, 15, 300, true, 15, 768, 1024);
      mouseWheelHandler0.mouseWheelMoved(mouseWheelEvent0);
      assertEquals(2.0, periodAxis0.getUpperBound(), 0.01);
      assertEquals(0.1, mouseWheelHandler0.getZoomFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 768, 200, 10, 768, 10, 768, 680, 300, true, 768, 300, 768);
      mouseWheelHandler0.mouseWheelMoved(mouseWheelEvent0);
      assertEquals(0.1, mouseWheelHandler0.getZoomFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      double double0 = mouseWheelHandler0.getZoomFactor();
      assertEquals(0.1, double0, 0.01);
  }
}
