/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:15:21 GMT 2022
 */

package org.jfree.chart.imagemap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PrintWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.ImageMapUtilities;
import org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.StandardURLTagFragmentGenerator;
import org.jfree.chart.imagemap.ToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.URLTagFragmentGenerator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImageMapUtilities_ESTest extends ImageMapUtilities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ImageMapUtilities.javascriptEscape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ImageMapUtilities.htmlEscape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      // Undeclared exception!
      try { 
        ImageMapUtilities.writeImageMap((PrintWriter) null, "&amp;", chartRenderingInfo0, (ToolTipTagFragmentGenerator) dynamicDriveToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) standardURLTagFragmentGenerator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("y%%,,Cj_`9li9[0qu`");
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      // Undeclared exception!
      try { 
        ImageMapUtilities.writeImageMap((PrintWriter) mockPrintWriter0, (String) null, chartRenderingInfo0, (ToolTipTagFragmentGenerator) dynamicDriveToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) standardURLTagFragmentGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("=>-pJ9q8u_^c|A&");
      // Undeclared exception!
      try { 
        ImageMapUtilities.writeImageMap((PrintWriter) mockPrintWriter0, "=>-pJ9q8u_^c|A&", (ChartRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        ImageMapUtilities.writeImageMap((PrintWriter) null, (String) null, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      // Undeclared exception!
      try { 
        ImageMapUtilities.getImageMap("Fy9 !NT*7&[", (ChartRenderingInfo) null, (ToolTipTagFragmentGenerator) null, (URLTagFragmentGenerator) standardURLTagFragmentGenerator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      // Undeclared exception!
      try { 
        ImageMapUtilities.getImageMap((String) null, chartRenderingInfo0, (ToolTipTagFragmentGenerator) dynamicDriveToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) standardURLTagFragmentGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageMapUtilities.getImageMap("Xun Kang", (ChartRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        ImageMapUtilities.getImageMap((String) null, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = ImageMapUtilities.javascriptEscape("(25)H");
      assertEquals("(25)H", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ImageMapUtilities.htmlEscape("v<W- ");
      assertEquals("v&lt;W- ", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageMapUtilities.htmlEscape((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      String string0 = ImageMapUtilities.getImageMap("&amp;", chartRenderingInfo0, (ToolTipTagFragmentGenerator) dynamicDriveToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) standardURLTagFragmentGenerator0);
      assertEquals("<map id=\"&amp;amp;\" name=\"&amp;amp;\">\n</map>", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      String string0 = ImageMapUtilities.getImageMap("<map id=\"@A)_c8\" name=\"@A)_c8\">\n</map>", chartRenderingInfo0, (ToolTipTagFragmentGenerator) overLIBToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) standardURLTagFragmentGenerator0);
      assertEquals("<map id=\"&lt;map id=&quot;@A)_c8&quot; name=&quot;@A)_c8&quot;&gt;\n&lt;/map&gt;\" name=\"&lt;map id=&quot;@A)_c8&quot; name=&quot;@A)_c8&quot;&gt;\n&lt;/map&gt;\">\n</map>", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = ImageMapUtilities.javascriptEscape(" onMouseOver=\"return stm(['',''],Style[1]);\" onMouseOut=\"return htm();\"");
      assertEquals(" onMouseOver=\\\"return stm([\\'\\',\\'\\'],Style[1]);\\\" onMouseOut=\\\"return htm();\\\"", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageMapUtilities.javascriptEscape((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = ImageMapUtilities.htmlEscape(" onMouseOver=\"return stm(['','?XqHac>(U\\&=fL2U='],Style[1]);\" onMouseOut=\"return htm();\"");
      assertEquals(" onMouseOver=&quot;return stm([&#39;&#39;,&#39;?XqHac&gt;(U&#092;&amp;=fL2U=&#39;],Style[1]);&quot; onMouseOut=&quot;return htm();&quot;", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      File file0 = MockFile.createTempFile("2T%", "J6'5V'F |QxY;Tmq");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        ImageMapUtilities.writeImageMap((PrintWriter) mockPrintWriter0, (String) null, chartRenderingInfo0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      ImageMapUtilities.writeImageMap((PrintWriter) mockPrintWriter0, "HorizontalAlignment.RIGHT", chartRenderingInfo0, (ToolTipTagFragmentGenerator) dynamicDriveToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) standardURLTagFragmentGenerator0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        ImageMapUtilities.writeImageMap((PrintWriter) null, "Requires h > 0.", chartRenderingInfo0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.imagemap.ImageMapUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      ImageMapUtilities.writeImageMap((PrintWriter) mockPrintWriter0, "?XqHac&gt;(U&#092;&amp;=fL2U=", chartRenderingInfo0, false);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      ImageMapUtilities.writeImageMap((PrintWriter) mockPrintWriter0, " onMouseOver=\"return stm(['',''],Style[1]);\" onMouseOut=\"return htm();\"", chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      String string0 = ImageMapUtilities.getImageMap("<map id=\"}z;lCu&gt;N&gt;\" name=\"}z;lCu&gt;N&gt;\">\n</map>", chartRenderingInfo0);
      assertEquals("<map id=\"&lt;map id=&quot;}z;lCu&amp;gt;N&amp;gt;&quot; name=&quot;}z;lCu&amp;gt;N&amp;gt;&quot;&gt;\n&lt;/map&gt;\" name=\"&lt;map id=&quot;}z;lCu&amp;gt;N&amp;gt;&quot; name=&quot;}z;lCu&amp;gt;N&amp;gt;&quot;&gt;\n&lt;/map&gt;\">\n</map>", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImageMapUtilities imageMapUtilities0 = new ImageMapUtilities();
  }
}
