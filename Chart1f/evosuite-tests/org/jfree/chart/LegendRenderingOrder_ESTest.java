/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:11:35 GMT 2022
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.LegendRenderingOrder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LegendRenderingOrder_ESTest extends LegendRenderingOrder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LegendRenderingOrder legendRenderingOrder0 = LegendRenderingOrder.STANDARD;
      LegendRenderingOrder legendRenderingOrder1 = LegendRenderingOrder.REVERSE;
      boolean boolean0 = legendRenderingOrder0.equals(legendRenderingOrder1);
      assertFalse(boolean0);
      assertFalse(legendRenderingOrder1.equals((Object)legendRenderingOrder0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LegendRenderingOrder legendRenderingOrder0 = LegendRenderingOrder.REVERSE;
      String string0 = legendRenderingOrder0.toString();
      assertEquals("LegendRenderingOrder.REVERSE", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LegendRenderingOrder legendRenderingOrder0 = LegendRenderingOrder.REVERSE;
      boolean boolean0 = legendRenderingOrder0.equals("w;+[75N1151EloG");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LegendRenderingOrder legendRenderingOrder0 = LegendRenderingOrder.REVERSE;
      boolean boolean0 = legendRenderingOrder0.equals(legendRenderingOrder0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LegendRenderingOrder legendRenderingOrder0 = LegendRenderingOrder.REVERSE;
      LegendRenderingOrder legendRenderingOrder1 = LegendRenderingOrder.STANDARD;
      boolean boolean0 = legendRenderingOrder0.equals(legendRenderingOrder1);
      assertFalse(legendRenderingOrder1.equals((Object)legendRenderingOrder0));
      assertFalse(boolean0);
  }
}
