/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 01:40:29 GMT 2022
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import javax.swing.JFormattedTextField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.dial.DialCap;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesTableModel;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DialCap_ESTest extends DialCap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      dialCap0.setRadius(498.3909070173166);
      DialCap dialCap1 = new DialCap();
      boolean boolean0 = dialCap0.equals(dialCap1);
      assertEquals(498.3909070173166, dialCap0.getRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1519, 4280, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2.5E-4, (-2967.1252777), 10, 1230.14192);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(sunGraphics2D0.transform, sunGraphics2D0.hints);
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)affineTransformOp0.getBounds2D(bufferedImage0);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createUnion(rectangle2D_Float0);
      dialCap0.draw(sunGraphics2D0, dialPlot0, rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(2, sunGraphics2D0.strokeState);
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      // Undeclared exception!
      try { 
        dialCap0.setRadius((-2785.00371));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires radius > 0.0.
         //
         verifyException("org.jfree.chart.plot.dial.DialCap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      dialCap0.setOutlineStroke(basicStroke0);
      DialCap dialCap1 = new DialCap();
      boolean boolean0 = dialCap0.equals(dialCap1);
      assertFalse(boolean0);
      assertEquals(0.05, dialCap1.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      Object object0 = dialCap0.clone();
      assertTrue(object0.equals((Object)dialCap0));
      
      Color color0 = (Color)BarRenderer3D.DEFAULT_WALL_PAINT;
      dialCap0.setOutlinePaint(color0);
      boolean boolean0 = dialCap0.equals(object0);
      assertFalse(object0.equals((Object)dialCap0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      DialCap dialCap1 = (DialCap)dialCap0.clone();
      dialCap1.setRadius(154.5);
      boolean boolean0 = dialCap0.equals(dialCap1);
      assertEquals(154.5, dialCap1.getRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      boolean boolean0 = dialCap0.equals(dialCap0);
      assertTrue(boolean0);
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      boolean boolean0 = dialCap0.equals(systemColor0);
      assertFalse(boolean0);
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      // Undeclared exception!
      try { 
        dialCap0.setOutlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialCap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      // Undeclared exception!
      try { 
        dialCap0.setOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialCap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      // Undeclared exception!
      try { 
        dialCap0.setFillPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.dial.DialCap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      dialCap0.setFillPaint(xYErrorRenderer0.DEFAULT_PAINT);
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      // Undeclared exception!
      try { 
        dialCap0.setRadius(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires radius > 0.0.
         //
         verifyException("org.jfree.chart.plot.dial.DialCap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      double double0 = dialCap0.getRadius();
      assertEquals(0.05, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      BasicStroke basicStroke0 = (BasicStroke)dialCap0.getOutlineStroke();
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      boolean boolean0 = dialCap0.isClippedToWindow();
      assertTrue(boolean0);
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      DialCap dialCap1 = (DialCap)dialCap0.clone();
      boolean boolean0 = dialCap0.equals(dialCap1);
      assertEquals(0.05, dialCap1.getRadius(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      dialCap0.getFillPaint();
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      dialCap0.hashCode();
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 10);
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(1570, 810);
      TimeSeries timeSeries0 = new TimeSeries(1.0F);
      TimeSeriesTableModel timeSeriesTableModel0 = new TimeSeriesTableModel(timeSeries0);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField(timeSeriesTableModel0);
      Dimension dimension0 = jFormattedTextField0.getPreferredSize();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      // Undeclared exception!
      try { 
        dialCap0.draw((Graphics2D) null, dialPlot0, rectangle0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialCap", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DialCap dialCap0 = new DialCap();
      Paint paint0 = dialCap0.getOutlinePaint();
      dialCap0.setFillPaint(paint0);
      DialCap dialCap1 = new DialCap();
      boolean boolean0 = dialCap0.equals(dialCap1);
      assertEquals(0.05, dialCap1.getRadius(), 0.01);
      assertFalse(boolean0);
  }
}
