/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:57:24 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.text.DateFormatSymbols;
import java.util.Date;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.plot.PieLabelRecord;
import org.jfree.chart.text.TextBox;
import org.jfree.data.time.Day;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.SerialDate;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieLabelRecord_ESTest extends PieLabelRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 0.5, 999);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(millisecond0, 0, 0, textBox0, 0, 425.293042, 0.5);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord1);
      assertEquals(425.293042, pieLabelRecord1.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.5, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, pieLabelRecord1.getAllocatedY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(quarter0, 1, 1, (TextBox) null, (-1941.35986), 5441.85677763322, 0.0);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(quarter0, (-1941.35986), 0.0, (TextBox) null, 105.0, 105.0, 0.0);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord1);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertFalse(boolean0);
      assertEquals(5441.85677763322, pieLabelRecord0.getGap(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(971.67993, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getAllocatedY(), 0.01);
      assertEquals((-1941.35986), pieLabelRecord1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2243.4277840458512), (-2243.4277840458512), textBox0, (-2243.4277840458512), (-2243.4277840458512), (-2243.4277840458512));
      assertEquals((-2243.4277840458512), pieLabelRecord0.getBaseY(), 0.01);
      
      pieLabelRecord0.setBaseY(Double.NaN);
      int int0 = pieLabelRecord0.compareTo(pieLabelRecord0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 0, textBox0, 0, (-712.0615), 0.5);
      double double0 = pieLabelRecord0.getUpperY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.5, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-712.0615), pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAllocatedY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Day day0 = new Day();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(day0, (-1060.273278075), (-1060.273278075), (TextBox) null, (-1060.273278075), (-1060.273278075), (-1343.39184305));
      double double0 = pieLabelRecord0.getUpperY();
      assertEquals((-1060.273278075), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1590.4099171125), double0, 0.01);
      assertEquals((-1060.273278075), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1060.273278075), pieLabelRecord0.getGap(), 0.01);
      assertEquals((-1343.39184305), pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 0, textBox0, 0, (-712.0615), 0.5);
      double double0 = pieLabelRecord0.getLowerY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-712.0615), pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(", ", dateFormatSymbols0);
      Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
      SerialDate serialDate0 = SerialDate.createInstance(date0);
      TextBox textBox0 = new TextBox(", ");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(serialDate0, (-1.0), (-2213.9889), textBox0, 2958465, 3725.14596701714, 0);
      double double0 = pieLabelRecord0.getLowerY();
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-2213.9889), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1481446.4889), double0, 0.01);
      assertEquals(3725.14596701714, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(quarter0, 1, 1, (TextBox) null, (-1941.35986), 5441.85677763322, 0.0);
      double double0 = pieLabelRecord0.getLinkPercent();
      assertEquals(971.67993, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(5441.85677763322, pieLabelRecord0.getGap(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Day day0 = new Day();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(day0, (-1060.273278075), (-1060.273278075), (TextBox) null, (-1060.273278075), (-1060.273278075), (-1343.39184305));
      double double0 = pieLabelRecord0.getLinkPercent();
      assertEquals((-1590.4099171125), pieLabelRecord0.getUpperY(), 0.01);
      assertEquals((-1060.273278075), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1343.39184305), double0, 0.01);
      assertEquals((-1060.273278075), pieLabelRecord0.getGap(), 0.01);
      assertEquals((-1060.273278075), pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextBox textBox0 = new TextBox(", ");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 23, textBox0, 0.0, 0.0, 23);
      double double0 = pieLabelRecord0.getLabelHeight();
      assertEquals(23.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Week week0 = new Week();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(week0, 74.854231481, 1, (TextBox) null, (-2701.0), 74.854231481, 2.0);
      double double0 = pieLabelRecord0.getLabelHeight();
      assertEquals(74.854231481, pieLabelRecord0.getGap(), 0.01);
      assertEquals(2.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(74.854231481, pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-2701.0), double0, 0.01);
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1349.5), pieLabelRecord0.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2243.4277840458512), (-2243.4277840458512), textBox0, (-2243.4277840458512), (-2243.4277840458512), (-2243.4277840458512));
      textBox0.setShadowYOffset(0.0);
      pieLabelRecord0.getLabel();
      assertEquals((-3365.141676068777), pieLabelRecord0.getUpperY(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getGap(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextBox textBox0 = new TextBox((String) null);
      textBox0.setShadowYOffset((-545L));
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-545L), 1.7976931348623157E308, textBox0, (-1941.35986), (-1941.35986), 1.7976931348623157E308);
      pieLabelRecord0.getLabel();
      assertEquals((-1941.35986), pieLabelRecord0.getGap(), 0.01);
      assertEquals(1.7976931348623157E308, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(1.7976931348623157E308, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals((-1941.35986), pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals((-545.0), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1.7976931348623157E308, pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 999, 999);
      textBox0.setShadowXOffset(0);
      pieLabelRecord0.getLabel();
      assertEquals(999.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2243.4277840458512), (-2243.4277840458512), textBox0, (-2243.4277840458512), (-2243.4277840458512), (-2243.4277840458512));
      textBox0.setShadowXOffset((-1.7976931348623157E308));
      pieLabelRecord0.getLabel();
      assertEquals((-1121.7138920229256), pieLabelRecord0.getLowerY(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextBox textBox0 = new TextBox(", ");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 23, textBox0, 0.0, 0.0, 23);
      pieLabelRecord0.getKey();
      assertEquals(23.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
      Minute minute0 = new Minute(date0);
      TextBox textBox0 = new TextBox("");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 0, 1.0, textBox0, 0.0, 0, 0.0);
      double double0 = pieLabelRecord0.getGap();
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Day day0 = new Day();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(day0, (-1060.273278075), (-1060.273278075), (TextBox) null, (-1060.273278075), (-1060.273278075), (-1343.39184305));
      double double0 = pieLabelRecord0.getGap();
      assertEquals((-1060.273278075), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1060.273278075), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1060.273278075), double0, 0.01);
      assertEquals((-1590.4099171125), pieLabelRecord0.getUpperY(), 0.01);
      assertEquals((-1343.39184305), pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Day day0 = new Day();
      TextBox textBox0 = new TextBox("sl~SE7Fx.1y");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(day0, 0.0, 0.0, textBox0, 0.0, 0.0, 3394.5600126);
      double double0 = pieLabelRecord0.getBaseY();
      assertEquals(3394.5600126, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, (-1.0), textBox0, 0, 0.5, (-1.0));
      double double0 = pieLabelRecord0.getBaseY();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 1.0, 1.0, textBox0, 1.0, 1.0, 1.0);
      double double0 = pieLabelRecord0.getAngle();
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(1.5, pieLabelRecord0.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Day day0 = new Day();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(day0, (-1060.273278075), (-1060.273278075), (TextBox) null, (-1060.273278075), (-1060.273278075), (-1343.39184305));
      double double0 = pieLabelRecord0.getAngle();
      assertEquals((-1060.273278075), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1343.39184305), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1060.273278075), pieLabelRecord0.getGap(), 0.01);
      assertEquals((-1590.4099171125), pieLabelRecord0.getUpperY(), 0.01);
      assertEquals((-1060.273278075), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 0, textBox0, 0, (-712.0615), 0.5);
      double double0 = pieLabelRecord0.getAllocatedY();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-712.0615), pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, (-1.0), textBox0, 0, 0.5, (-1.0));
      double double0 = pieLabelRecord0.getAllocatedY();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, (-1.0), textBox0, 0, 0.5, (-1.0));
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord0);
      assertEquals((-1.0), pieLabelRecord0.getLinkPercent(), 0.01);
      assertTrue(boolean0);
      assertEquals((-1.0), pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TextBox textBox0 = new TextBox("");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 2756.29281400399, 1.0, textBox0, (-925.4303480599507), 2.0, 2.0);
      // Undeclared exception!
      try { 
        pieLabelRecord0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2243.4277840458512), (-2243.4277840458512), textBox0, (-2243.4277840458512), (-2243.4277840458512), (-2243.4277840458512));
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord((Comparable) null, (-2243.4277840458512), Double.NEGATIVE_INFINITY, textBox0, Double.NEGATIVE_INFINITY, 0.8, (-2243.4277840458512));
      // Undeclared exception!
      try { 
        pieLabelRecord0.equals(pieLabelRecord1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2243.4277840458512), (-2243.4277840458512), textBox0, (-2243.4277840458512), (-2243.4277840458512), (-2243.4277840458512));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      boolean boolean0 = pieLabelRecord0.equals(sunHints_Key0);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getBaseY(), 0.01);
      assertFalse(boolean0);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getGap(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-2243.4277840458512), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1121.7138920229256), pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 999, 999);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(millisecond0, 0, 0, textBox0, 0, 999, 999);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord1);
      assertEquals(0.0, pieLabelRecord1.getLabelHeight(), 0.01);
      assertEquals(999.0, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getAllocatedY(), 0.01);
      assertFalse(boolean0);
      assertEquals(999.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(999.0, pieLabelRecord1.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, (-1.0), textBox0, 0, 0.5, (-1.0));
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(millisecond0, 2341.39955, 0, textBox0, 0, 425.293042, 0.5);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord1);
      assertEquals(425.293042, pieLabelRecord1.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.5, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals((-1.0), pieLabelRecord0.getBaseY(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, pieLabelRecord1.getUpperY(), 0.01);
      assertEquals(2341.39955, pieLabelRecord1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 0.5, 999);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(millisecond0, 0, 0, textBox0, 0, 0, 0.5);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord1);
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getAllocatedY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getLabelHeight(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.5, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-1799.9654966441929), (-1799.9654966441929), textBox0, (-1799.9654966441929), (-1799.9654966441929), (-1799.9654966441929));
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, (-1799.9654966441929), 1, textBox0, 250.699799, Double.NEGATIVE_INFINITY, 1679.493484);
      boolean boolean0 = pieLabelRecord1.equals(pieLabelRecord0);
      assertEquals(Double.NEGATIVE_INFINITY, pieLabelRecord1.getGap(), 0.01);
      assertFalse(boolean0);
      assertEquals(1679.493484, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(126.3498995, pieLabelRecord1.getUpperY(), 0.01);
      assertEquals((-1799.9654966441929), pieLabelRecord1.getAngle(), 0.01);
      assertEquals(1.0, pieLabelRecord1.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-1799.9654966441929), (-1799.9654966441929), textBox0, (-1799.9654966441929), (-1799.9654966441929), (-1799.9654966441929));
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord((Comparable) null, (-1799.9654966441929), Double.NEGATIVE_INFINITY, textBox0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, (-1799.9654966441929));
      int int0 = pieLabelRecord0.compareTo(pieLabelRecord1);
      assertEquals((-1799.9654966441929), pieLabelRecord1.getAngle(), 0.01);
      assertEquals((-1799.9654966441929), pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(Double.NaN, pieLabelRecord1.getLowerY(), 0.01);
      assertEquals(1, int0);
      assertEquals(Double.NEGATIVE_INFINITY, pieLabelRecord1.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-1799.9654966441929), (-1799.9654966441929), textBox0, (-1799.9654966441929), (-1799.9654966441929), (-1799.9654966441929));
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord((Comparable) null, (-1799.9654966441929), Double.NEGATIVE_INFINITY, textBox0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, (-1799.9654966441929));
      int int0 = pieLabelRecord1.compareTo(pieLabelRecord0);
      assertEquals((-1799.9654966441929), pieLabelRecord1.getAngle(), 0.01);
      assertEquals((-1799.9654966441929), pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(Double.NaN, pieLabelRecord1.getLowerY(), 0.01);
      assertEquals((-1), int0);
      assertEquals(Double.NEGATIVE_INFINITY, pieLabelRecord1.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-1799.9654966441929), (-1799.9654966441929), textBox0, (-1799.9654966441929), (-1799.9654966441929), (-1799.9654966441929));
      int int0 = pieLabelRecord0.compareTo(pieLabelRecord0);
      assertEquals((-1799.9654966441929), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1799.9654966441929), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1799.9654966441929), pieLabelRecord0.getGap(), 0.01);
      assertEquals(0, int0);
      assertEquals((-899.9827483220964), pieLabelRecord0.getLowerY(), 0.01);
      assertEquals((-1799.9654966441929), pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TextBox textBox0 = new TextBox(", ");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 23, textBox0, 0.0, 0.0, 23);
      int int0 = pieLabelRecord0.compareTo(textBox0);
      assertEquals(23.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0, int0);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 0.5, 999);
      double double0 = pieLabelRecord0.getLowerY();
      assertEquals(999.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(999.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(quarter0, 1, 1, (TextBox) null, 1, 4, 0.0);
      assertEquals(1.5, pieLabelRecord0.getUpperY(), 0.01);
      
      pieLabelRecord0.setAllocatedY(4);
      assertEquals(4.0, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Year year0 = new Year(0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 9999, textBox0, (-1.7976931348623157E308), (-1.7976931348623157E308), 9999);
      double double0 = pieLabelRecord0.getAngle();
      assertEquals(0.0, double0, 0.01);
      assertEquals(9999.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1.7976931348623157E308), pieLabelRecord0.getGap(), 0.01);
      assertEquals((-8.988465674311579E307), pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(9999.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(9999.0, pieLabelRecord0.getAllocatedY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TextBox textBox0 = new TextBox(", ");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 23, textBox0, 0.0, 0.0, 23);
      double double0 = pieLabelRecord0.getLinkPercent();
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(23.0, double0, 0.01);
      assertEquals(23.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(quarter0, 1, 1, (TextBox) null, 1, 4, 0.0);
      pieLabelRecord0.getLabel();
      assertEquals(4.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1.5, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 0.5, 999);
      pieLabelRecord0.toString();
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TextBox textBox0 = new TextBox(", ");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 23, textBox0, 0.0, 0.0, 23);
      double double0 = pieLabelRecord0.getAllocatedY();
      assertEquals(23.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(23.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(23.0, double0, 0.01);
      assertEquals(23.0, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(quarter0, 1, 1, (TextBox) null, 1, 4, 0.0);
      double double0 = pieLabelRecord0.getLabelHeight();
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(4.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.5, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 0.5, 999);
      pieLabelRecord0.getKey();
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(quarter0, 1, 1, (TextBox) null, 1, 4, 0.0);
      double double0 = pieLabelRecord0.getGap();
      assertEquals(1.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.5, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(4.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 999, 999);
      double double0 = pieLabelRecord0.getBaseY();
      assertEquals(999.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(999.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TextBox textBox0 = new TextBox("\"&?86aqa:4M.");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(millisecond0, 0, 999, textBox0, 0, 0.5, 999);
      double double0 = pieLabelRecord0.getUpperY();
      assertEquals(0.5, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(999.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(999.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
  }
}
