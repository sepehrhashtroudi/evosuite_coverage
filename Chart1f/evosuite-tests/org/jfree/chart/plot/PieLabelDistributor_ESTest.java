/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:59:32 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JPopupMenu;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.plot.PieLabelDistributor;
import org.jfree.chart.plot.PieLabelRecord;
import org.jfree.chart.text.TextBox;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieLabelDistributor_ESTest extends PieLabelDistributor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(666);
      MockDate mockDate0 = new MockDate(666, 666, 666, 666, 666, 666);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 4.0, 4.0, textBox0, 0, (-1.0), 666);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.spreadEvenly(9999, (-237.54949));
      assertEquals(3, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(666);
      MockDate mockDate0 = new MockDate(666, 666, 666, 666, 666, 666);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 4.0, 4.0, textBox0, 0, (-1.0), 666);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.adjustUpwards(4.0, 964.4684617074622);
      assertEquals(2, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, 696, 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.adjustUpwards(696, 964.4684617074622);
      assertEquals(3, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.adjustUpwards((-1.0), 0);
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(3397);
      pieLabelDistributor0.adjustDownwards(3397, 3397);
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, 696, 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.adjustDownwards(Double.NEGATIVE_INFINITY, 59);
      pieLabelDistributor0.adjustInwards();
      assertEquals(3, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      Year year0 = new Year(696);
      Week week0 = new Week(696, year0);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(week0, 1, 1, textBox0, 9999, 9999, 9999);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord1);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.adjustInwards();
      assertEquals(3, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-173));
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", (-3000.225958464), 4.0, (TextBox) null, (-173), (-304.0), 621.612);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.distributeLabels((-1946.0), (-3000.225958464));
      assertEquals(1, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(739);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 0.0, (TextBox) null, 349.5377486, 0, 0.0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(1);
      Stack<Object> stack0 = new Stack<Object>();
      pieLabelDistributor0.labels = (List) stack0;
      stack0.add((Object) pieLabelDistributor0.labels);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(92);
      Vector<XYDatasetTableModel> vector0 = new Vector<XYDatasetTableModel>();
      pieLabelDistributor0.labels = (List) vector0;
      vector0.add((XYDatasetTableModel) null);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.spreadEvenly((-2781.080432360746), 3478.96863633);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(1457);
      Stack<String> stack0 = new Stack<String>();
      pieLabelDistributor0.labels = (List) stack0;
      stack0.add("PT-#}7aX0t6q");
      // Undeclared exception!
      try { 
        pieLabelDistributor0.spreadEvenly(5.0, 0.0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.chart.plot.PieLabelRecord
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.sort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.distributeLabels(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(30);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      pieLabelDistributor0.labels = (List) linkedList0;
      Vector<JPopupMenu.Separator> vector0 = new Vector<JPopupMenu.Separator>();
      pieLabelDistributor0.labels = (List) vector0;
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      pieLabelDistributor0.labels = (List) linkedList1;
      linkedList1.add((Object) pieLabelDistributor0.labels);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.distributeLabels(30, 452.74282);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.LinkedList cannot be cast to org.jfree.chart.plot.PieLabelRecord
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      ArrayList<JPopupMenu.Separator> arrayList0 = new ArrayList<JPopupMenu.Separator>();
      pieLabelDistributor0.labels = (List) arrayList0;
      arrayList0.add((JPopupMenu.Separator) null);
      arrayList0.add((JPopupMenu.Separator) null);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustUpwards(0.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add(") outside valid range.");
      arrayList0.add("");
      pieLabelDistributor0.labels = (List) arrayList0;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustUpwards(Double.NaN, Double.NaN);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.chart.plot.PieLabelRecord
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-3111));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustInwards();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      String string0 = pieLabelDistributor0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      String string0 = pieLabelDistributor0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.spreadEvenly(9999, 696);
      assertEquals(2, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      Year year0 = new Year(696);
      Week week0 = new Week(696, year0);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(week0, 1, 1, textBox0, 9999, 9999, 9999);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord1);
      pieLabelDistributor0.adjustUpwards(696, 1);
      assertEquals(2, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.adjustUpwards(696, 1);
      assertEquals(2, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      Year year0 = new Year(696);
      Week week0 = new Week(696, year0);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(week0, 1, 1, textBox0, 9999, 9999, 9999);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord1);
      pieLabelDistributor0.adjustDownwards(1, (-1.0));
      assertEquals(2, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.adjustDownwards(1, (-1.0));
      assertEquals(2, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(696);
      MockDate mockDate0 = new MockDate(696, 696, 696, 696, 696, 696);
      Minute minute0 = new Minute(mockDate0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(minute0, 696, 696, textBox0, (-1.0), 696, 696);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.adjustInwards();
      assertEquals(3, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(5);
      Vector<Object> vector0 = new Vector<Object>();
      pieLabelDistributor0.labels = (List) vector0;
      vector0.add((Object) pieLabelDistributor0.labels);
      vector0.add((Object) pieLabelDistributor0);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustInwards();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to org.jfree.chart.plot.PieLabelRecord
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(30);
      pieLabelDistributor0.adjustInwards();
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(3397);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", 0.0, 0.0, textBox0, 3397, 0.0, 0.0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.distributeLabels(0.0, 3397);
      pieLabelDistributor0.distributeLabels(0.0, 3397);
      assertEquals(1, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.sort();
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-64));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustDownwards((-1176.481696791), 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }
}
