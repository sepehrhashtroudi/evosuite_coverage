/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:56:09 GMT 2022
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.text.AttributedCharacterIterator;
import java.util.Hashtable;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemSource;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.FlowArrangement;
import org.jfree.chart.entity.TitleEntity;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.title.CompositeTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.ShortTextTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TitleEntity_ESTest extends TitleEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Shape shape0 = cyclicXYItemRenderer0.getLegendLine();
      CompositeTitle compositeTitle0 = new CompositeTitle();
      TitleEntity titleEntity0 = new TitleEntity(shape0, compositeTitle0, "f", "f");
      compositeTitle0.setVisible(false);
      Title title0 = titleEntity0.getTitle();
      assertEquals(1.0, title0.getContentYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("IgO");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) null, numberAxis3D0, categoryStepRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 84, 84, 500, 84, 84, (-1), true, true, true, false, true, true, true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(0, 84);
      TextTitle textTitle0 = new TextTitle("((f>o=\"y#\":~");
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D0, textTitle0, "PROPERTIES", "Hn*JnjfQu");
      textTitle0.setWidth(768);
      TextTitle textTitle1 = (TextTitle)titleEntity0.getTitle();
      assertEquals("((f>o=\"y#\":~", textTitle1.getText());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Shape shape0 = cyclicXYItemRenderer0.getLegendLine();
      CompositeTitle compositeTitle0 = new CompositeTitle();
      TitleEntity titleEntity0 = new TitleEntity(shape0, compositeTitle0, "f", "f");
      compositeTitle0.setNotify(false);
      Title title0 = titleEntity0.getTitle();
      assertSame(title0, compositeTitle0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Shape shape0 = cyclicXYItemRenderer0.getLegendLine();
      CompositeTitle compositeTitle0 = new CompositeTitle();
      TitleEntity titleEntity0 = new TitleEntity(shape0, compositeTitle0, "", "");
      compositeTitle0.setHeight(4);
      Title title0 = titleEntity0.getTitle();
      assertNull(title0.getID());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Shape shape0 = cyclicXYItemRenderer0.getLegendLine();
      CompositeTitle compositeTitle0 = new CompositeTitle();
      compositeTitle0.setHeight((-87.922696996705));
      TitleEntity titleEntity0 = new TitleEntity(shape0, compositeTitle0, "f", "f");
      Title title0 = titleEntity0.getTitle();
      assertTrue(title0.visible);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Paint[] paintArray0 = new Paint[1];
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke[] strokeArray0 = new Stroke[9];
      Shape[] shapeArray0 = new Shape[7];
      shapeArray0[0] = areaRenderer0.DEFAULT_SHAPE;
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier(paintArray0, paintArray0, paintArray0, strokeArray0, strokeArray0, shapeArray0);
      Shape shape0 = defaultDrawingSupplier0.getNextShape();
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Q#|ot_F]j%<V6/");
      shortTextTitle0.setPadding(0.0, 4637.5355, 535.2371172149, (-3029.1442767445));
      TitleEntity titleEntity0 = new TitleEntity(shape0, shortTextTitle0, "", "");
      Title title0 = titleEntity0.getTitle();
      assertEquals(0.0, title0.getContentYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Hashtable<AttributedCharacterIterator.Attribute, Object> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, Object>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      AffineTransform affineTransform0 = new AffineTransform((float) 0, (float) 0, (float) 0, (-1167.0F), (-1.0F), (-1167.0F));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, false);
      Rectangle2D rectangle2D0 = font0.getStringBounds("glwvmV\"F)", 0, 0, fontRenderContext0);
      TextTitle textTitle0 = new TextTitle();
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D0, textTitle0, "glwvmV\"F)");
      textTitle0.setMargin((double) (-1167.0F), 437.8, 52.168920015, 437.8);
      TextTitle textTitle1 = (TextTitle)titleEntity0.getTitle();
      assertNull(textTitle1.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      TitleEntity titleEntity0 = null;
      try {
        titleEntity0 = new TitleEntity(rectangle2D_Double0, (Title) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'title' argument.
         //
         verifyException("org.jfree.chart.entity.TitleEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      TitleEntity titleEntity0 = null;
      try {
        titleEntity0 = new TitleEntity(rectangle0, (Title) null, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'title' argument.
         //
         verifyException("org.jfree.chart.entity.TitleEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Shape shape0 = cyclicXYItemRenderer0.getLegendLine();
      CompositeTitle compositeTitle0 = new CompositeTitle();
      TitleEntity titleEntity0 = new TitleEntity(shape0, compositeTitle0, "f", "f");
      Object object0 = titleEntity0.clone();
      assertTrue(object0.equals((Object)titleEntity0));
      
      titleEntity0.setURLText("TitleEntity: tooltip = f");
      boolean boolean0 = titleEntity0.equals(object0);
      assertFalse(object0.equals((Object)titleEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BlockContainer blockContainer0 = new BlockContainer();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D_Double0, compositeTitle0, "T~", "T~");
      TitleEntity titleEntity1 = new TitleEntity(rectangle2D_Double0, compositeTitle0, "`q<F9:#GjJh", "`q<F9:#GjJh");
      boolean boolean0 = titleEntity0.equals(titleEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-315.29F), 0.0F, 0.0F, (-315.29F));
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(rectangle2D_Float0);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      FlowArrangement flowArrangement0 = new FlowArrangement(horizontalAlignment0, verticalAlignment0, 260.0, 2.0E7);
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null, flowArrangement0, flowArrangement0);
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D0, legendTitle0, "d`/CxL*S]T(lILPOY");
      TitleEntity titleEntity1 = new TitleEntity(rectangle2D_Double0, legendTitle0);
      boolean boolean0 = titleEntity0.equals(titleEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      FlowArrangement flowArrangement0 = new FlowArrangement(horizontalAlignment0, verticalAlignment0, 260.0, 2.0E7);
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null, flowArrangement0, flowArrangement0);
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D_Double0, legendTitle0, "d`/CxL*S]T(lILPOY");
      boolean boolean0 = titleEntity0.equals(titleEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      FlowArrangement flowArrangement0 = new FlowArrangement(horizontalAlignment0, verticalAlignment0, 260.0, 2.0E7);
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null, flowArrangement0, flowArrangement0);
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D_Double0, legendTitle0, "d`/CxL*S]T(lILPOY");
      boolean boolean0 = titleEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point point0 = new Point((-150), 9999);
      Rectangle rectangle0 = new Rectangle(point0);
      TitleEntity titleEntity0 = null;
      try {
        titleEntity0 = new TitleEntity(rectangle0, (Title) null, "]V-iPl)Ois}w");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'title' argument.
         //
         verifyException("org.jfree.chart.entity.TitleEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      FlowArrangement flowArrangement0 = new FlowArrangement(horizontalAlignment0, verticalAlignment0, 260.0, 2.0E7);
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null, flowArrangement0, flowArrangement0);
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D_Double0, legendTitle0, "d`/CxL*S]T(lILPOY");
      Object object0 = titleEntity0.clone();
      boolean boolean0 = titleEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      FlowArrangement flowArrangement0 = new FlowArrangement(horizontalAlignment0, verticalAlignment0, 260.0, 2.0E7);
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null, flowArrangement0, flowArrangement0);
      TitleEntity titleEntity0 = new TitleEntity(rectangle2D_Double0, legendTitle0, "d`/CxL*S]T(lILPOY");
      String string0 = titleEntity0.toString();
      assertEquals("TitleEntity: tooltip = d`/CxL*S]T(lILPOY", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      Shape shape0 = cyclicXYItemRenderer0.getLegendLine();
      CompositeTitle compositeTitle0 = new CompositeTitle();
      TitleEntity titleEntity0 = new TitleEntity(shape0, compositeTitle0, "f", "f");
      titleEntity0.hashCode();
  }
}
