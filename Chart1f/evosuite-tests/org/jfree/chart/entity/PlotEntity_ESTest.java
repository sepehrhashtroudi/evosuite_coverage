/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 04:05:24 GMT 2022
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Rectangle2D;
import javax.swing.JInternalFrame;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.entity.PlotEntity;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.general.WaferMapDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotEntity_ESTest extends PlotEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Font font0 = TextAnnotation.DEFAULT_FONT;
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-395.4));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      Rectangle2D rectangle2D0 = font0.getMaxCharBounds(fontRenderContext0);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot((WaferMapDataset) null);
      PlotEntity plotEntity0 = new PlotEntity(rectangle2D0, waferMapPlot0, "2^dIIW]Tt");
      waferMapPlot0.setParent(waferMapPlot0);
      Plot plot0 = plotEntity0.getPlot();
      assertSame(waferMapPlot0, plot0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      PlotEntity plotEntity0 = null;
      try {
        plotEntity0 = new PlotEntity(rectangle2D_Double0, (Plot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.entity.PlotEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.0F, 0.0F, (-1073.245F), (-1073.245F));
      PlotEntity plotEntity0 = null;
      try {
        plotEntity0 = new PlotEntity(ellipse2D_Float0, (Plot) null, "o+O35g0A)IIT", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.entity.PlotEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      XYPlot xYPlot0 = new XYPlot();
      PlotEntity plotEntity0 = new PlotEntity(ellipse2D_Double0, xYPlot0, "DialShape not recognised.", "DialShape not recognised.");
      PlotEntity plotEntity1 = new PlotEntity(ellipse2D_Double0, xYPlot0, "DialShape not recognised.");
      boolean boolean0 = plotEntity0.equals(plotEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      XYPlot xYPlot0 = new XYPlot();
      PlotEntity plotEntity0 = new PlotEntity(ellipse2D_Double0, xYPlot0, "DialShape not recognised.", "DialShape not recognised.");
      PlotEntity plotEntity1 = new PlotEntity(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, xYPlot0, "SeriesChangeType.REMOVE", "#bdo-g#{L:NnSS+Wb");
      boolean boolean0 = plotEntity0.equals(plotEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      XYPlot xYPlot0 = new XYPlot();
      PlotEntity plotEntity0 = new PlotEntity(ellipse2D_Double0, xYPlot0, "orgjfree.data.im.TimePeriodAnchor", "orgjfree.data.im.TimePeriodAnchor");
      PlotEntity plotEntity1 = (PlotEntity)plotEntity0.clone();
      plotEntity1.setArea(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      boolean boolean0 = plotEntity0.equals(plotEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      XYPlot xYPlot0 = new XYPlot();
      PlotEntity plotEntity0 = new PlotEntity(ellipse2D_Double0, xYPlot0, "DialShape not recognised.", "DialShape not recognised.");
      Object object0 = plotEntity0.clone();
      boolean boolean0 = plotEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      XYPlot xYPlot0 = new XYPlot();
      PlotEntity plotEntity0 = new PlotEntity(ellipse2D_Double0, xYPlot0, "DialShape not recognised.", "DialShape not recognised.");
      boolean boolean0 = plotEntity0.equals(plotEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("'-1>FA", true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotEntity plotEntity0 = new PlotEntity(rectangle0, spiderWebPlot0);
      boolean boolean0 = plotEntity0.equals(rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath(0, 0);
      Rectangle rectangle0 = generalPath0.getBounds();
      PlotEntity plotEntity0 = null;
      try {
        plotEntity0 = new PlotEntity(rectangle0, (Plot) null, "Last");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.entity.PlotEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("'-1>FA", true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotEntity plotEntity0 = new PlotEntity(rectangle0, spiderWebPlot0);
      Plot plot0 = plotEntity0.getPlot();
      assertNull(plot0.getNoDataMessage());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      XYPlot xYPlot0 = new XYPlot();
      PlotEntity plotEntity0 = new PlotEntity(ellipse2D_Double0, xYPlot0, "orgjfree.data.im.TimePeriodAnchor", "orgjfree.data.im.TimePeriodAnchor");
      String string0 = plotEntity0.toString();
      assertEquals("PlotEntity: tooltip = orgjfree.data.im.TimePeriodAnchor", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("'-1>FA", true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotEntity plotEntity0 = new PlotEntity(rectangle0, spiderWebPlot0);
      plotEntity0.hashCode();
  }
}
