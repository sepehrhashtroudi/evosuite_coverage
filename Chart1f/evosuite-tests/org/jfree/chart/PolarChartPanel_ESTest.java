/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:55:07 GMT 2022
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import javax.swing.JCheckBoxMenuItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PolarChartPanel_ESTest extends PolarChartPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, polarPlot0);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
      polarChartPanel0.createPopupMenu(false, true, true, true);
      assertEquals(2000, polarChartPanel0.getMaximumDrawHeight());
      assertEquals(200, polarChartPanel0.getMinimumDrawHeight());
      assertEquals(2000, polarChartPanel0.getMaximumDrawWidth());
      assertEquals(200, polarChartPanel0.getMinimumDrawWidth());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Crosshair crosshair0 = new Crosshair(0.0);
      Font font0 = crosshair0.getLabelFont();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.PolarChartPanel", font0, polarPlot0, false);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("ZOOM_RANGE_BOTH");
      ActionEvent actionEvent0 = new ActionEvent(jCheckBoxMenuItem0, (-675), "PROPERTIES", 467L, 15);
      // Undeclared exception!
      try { 
        polarChartPanel0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, polarPlot0);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
      ActionEvent actionEvent0 = new ActionEvent(polarChartPanel0, 420, "ZOOM_RESET_DOMAIN");
      polarChartPanel0.actionPerformed(actionEvent0);
      assertEquals(200, polarChartPanel0.getMinimumDrawWidth());
      assertEquals(2000, polarChartPanel0.getMaximumDrawWidth());
      assertEquals(2000, polarChartPanel0.getMaximumDrawHeight());
      assertEquals(200, polarChartPanel0.getMinimumDrawHeight());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Crosshair crosshair0 = new Crosshair(0.0);
      Font font0 = crosshair0.getLabelFont();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.PolarChartPanel", font0, polarPlot0, false);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      polarChartPanel0.setChart(jFreeChart0);
      assertEquals(200, polarChartPanel0.getMinimumDrawHeight());
      assertEquals(2000, polarChartPanel0.getMaximumDrawWidth());
      assertEquals(2000, polarChartPanel0.getMaximumDrawHeight());
      assertEquals(200, polarChartPanel0.getMinimumDrawWidth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Crosshair crosshair0 = new Crosshair(0.0);
      Font font0 = crosshair0.getLabelFont();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.PolarChartPanel", font0, polarPlot0, false);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("ZOOM_RANGE_BOTH");
      ActionEvent actionEvent0 = new ActionEvent(jCheckBoxMenuItem0, (-675), "Polar Auto Range", 467L, 15);
      // Undeclared exception!
      try { 
        polarChartPanel0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Crosshair crosshair0 = new Crosshair(0.0);
      Font font0 = crosshair0.getLabelFont();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.PolarChartPanel", font0, polarPlot0, false);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      ActionEvent actionEvent0 = new ActionEvent(polarChartPanel0, 10, "Polar Zoom Out", 680);
      // Undeclared exception!
      try { 
        polarChartPanel0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PolarPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Crosshair crosshair0 = new Crosshair(0.0);
      Font font0 = crosshair0.getLabelFont();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.PolarChartPanel", font0, polarPlot0, true);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      polarChartPanel0.createPopupMenu(false, false, false, true);
      assertEquals(2000, polarChartPanel0.getMaximumDrawHeight());
      assertEquals(200, polarChartPanel0.getMinimumDrawWidth());
      assertEquals(2000, polarChartPanel0.getMaximumDrawWidth());
      assertEquals(200, polarChartPanel0.getMinimumDrawHeight());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Crosshair crosshair0 = new Crosshair(0.0);
      Font font0 = crosshair0.getLabelFont();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.PolarChartPanel", font0, polarPlot0, false);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      polarChartPanel0.createPopupMenu(false, false, true, false);
      assertEquals(200, polarChartPanel0.getMinimumDrawWidth());
      assertEquals(2000, polarChartPanel0.getMaximumDrawHeight());
      assertEquals(200, polarChartPanel0.getMinimumDrawHeight());
      assertEquals(2000, polarChartPanel0.getMaximumDrawWidth());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }
}
