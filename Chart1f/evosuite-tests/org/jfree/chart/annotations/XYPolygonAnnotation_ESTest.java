/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:07:29 GMT 2022
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.data.pie.DefaultPieDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYPolygonAnnotation_ESTest extends XYPolygonAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      BasicStroke basicStroke0 = new BasicStroke();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT);
      xYPolygonAnnotation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      assertNull(xYPolygonAnnotation0.getURL());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      BasicStroke basicStroke0 = (BasicStroke)Plot.DEFAULT_OUTLINE_STROKE;
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, color0);
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(75.0);
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, (Stroke) null, candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Stroke stroke0 = xYPolygonAnnotation0.getOutlineStroke();
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, (Stroke) null, (Paint) null);
      Paint paint0 = xYPolygonAnnotation0.getOutlinePaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      Paint paint0 = xYPolygonAnnotation0.getFillPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-2841.4033891132));
      Stroke stroke0 = candlestickRenderer0.getItemOutlineStroke(1, 692, true);
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT, candlestickRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      Stroke stroke0 = piePlot3D0.getBaseSectionOutlineStroke();
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation((double[]) null, stroke0, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'polygon' argument.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, (Stroke) null, (Paint) null, (Paint) null);
      xYPolygonAnnotation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      BasicStroke basicStroke0 = new BasicStroke();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT);
      XYPolygonAnnotation xYPolygonAnnotation1 = new XYPolygonAnnotation(doubleArray0);
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Stroke stroke0 = fastScatterPlot0.getRangeGridlineStroke();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT);
      XYPolygonAnnotation xYPolygonAnnotation1 = new XYPolygonAnnotation(doubleArray0);
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, (Stroke) null, (Paint) null);
      double[] doubleArray1 = new double[2];
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Stroke stroke0 = defaultPolarItemRenderer0.getItemStroke(2, 0, false);
      XYPolygonAnnotation xYPolygonAnnotation1 = new XYPolygonAnnotation(doubleArray1, stroke0, (Paint) null, defaultPolarItemRenderer0.DEFAULT_OUTLINE_PAINT);
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      BasicStroke basicStroke0 = (BasicStroke)XYPlot.DEFAULT_CROSSHAIR_STROKE;
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("[[ _EZFVE<5upR<", (-891.4), 1845.49855, (-1301.2));
      Paint paint0 = xYPointerAnnotation0.getPaint();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, paint0);
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, paint0);
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      boolean boolean0 = xYPolygonAnnotation0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      double[] doubleArray0 = new double[8];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(symbolAxis0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = chartPanel0.getBounds();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPolygonAnnotation0.draw(sunGraphics2D0, combinedRangeXYPlot0, rectangle0, symbolAxis0, symbolAxis0, 10, plotRenderingInfo0);
      assertEquals((-16777216), sunGraphics2D0.eargb);
      assertEquals((-16777216), sunGraphics2D0.pixel);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, paint0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("; PK]'QvI3{0-i", stringArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPolygonAnnotation0.draw((Graphics2D) null, combinedRangeXYPlot0, rectangle2D0, symbolAxis0, symbolAxis0, 213, plotRenderingInfo0);
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      String[] stringArray0 = new String[9];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1457), 0.0, 10, 0.0);
      // Undeclared exception!
      try { 
        xYPolygonAnnotation0.draw((Graphics2D) null, (XYPlot) null, rectangle2D_Double0, symbolAxis0, symbolAxis0, (-1457), plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      BasicStroke basicStroke0 = (BasicStroke)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, paint0);
      Paint paint1 = xYPolygonAnnotation0.getOutlinePaint();
      assertSame(paint0, paint1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Stroke stroke0 = fastScatterPlot0.getRangeGridlineStroke();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT);
      Color color0 = (Color)xYPolygonAnnotation0.getFillPaint();
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, paint0);
      Object object0 = xYPolygonAnnotation0.clone();
      boolean boolean0 = xYPolygonAnnotation0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, basicStroke0, paint0);
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertNotSame(doubleArray0, doubleArray1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Stroke stroke0 = fastScatterPlot0.getRangeGridlineStroke();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT);
      BasicStroke basicStroke0 = (BasicStroke)xYPolygonAnnotation0.getOutlineStroke();
      assertEquals(2, basicStroke0.getLineJoin());
  }
}
