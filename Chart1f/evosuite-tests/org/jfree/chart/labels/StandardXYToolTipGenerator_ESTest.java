/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:49:43 GMT 2022
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardXYToolTipGenerator_ESTest extends StandardXYToolTipGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[2];
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 4870.6554205285, 0.0);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("{0}: ({1}, {2})", oHLCDataItemArray0);
      standardXYToolTipGenerator0.generateToolTip(defaultOHLCDataset0, 0, 0);
      assertEquals("{0}: ({1}, {2})", standardXYToolTipGenerator0.getFormatString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(timeTableXYDataset0, 1964, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1964, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(histogramDataset0, (-3288), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("Kk5w", (NumberFormat) null, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'xFormat' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DateFormat dateFormat0 = DateFormat.getInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, decimalFormat0, dateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, (DateFormat) null, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, mockSimpleDateFormat0, mockSimpleDateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", (DateFormat) null, numberFormat0);
      assertEquals("", standardXYToolTipGenerator0.getFormatString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      boolean boolean0 = standardXYToolTipGenerator0.equals(standardXYToolTipGenerator0);
      assertTrue(boolean0);
      assertEquals("{0}: ({1}, {2})", standardXYToolTipGenerator0.getFormatString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      Object object0 = new Object();
      boolean boolean0 = standardXYToolTipGenerator0.equals(object0);
      assertFalse(boolean0);
      assertEquals("{0}: ({1}, {2})", standardXYToolTipGenerator0.getFormatString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      DateFormat dateFormat0 = DateFormat.getTimeInstance(0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("d7z'@rGX", numberFormat0, dateFormat0);
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip((XYDataset) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator1 = (StandardXYToolTipGenerator)standardXYToolTipGenerator0.clone();
      assertEquals("{0}: ({1}, {2})", standardXYToolTipGenerator1.getFormatString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("org.jfree.data.Range", mockSimpleDateFormat0, mockSimpleDateFormat0);
      assertEquals("null", standardXYToolTipGenerator0.getNullYString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      Object object0 = standardXYToolTipGenerator0.clone();
      boolean boolean0 = object0.equals(standardXYToolTipGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("3Cy9k(!", decimalFormat0, decimalFormat0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(defaultTableXYDataset0, 1049, 1049);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index outside valid range.
         //
         verifyException("org.jfree.data.xy.DefaultTableXYDataset", e);
      }
  }
}
