/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:38:12 GMT 2022
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Path2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import javax.swing.JEditorPane;
import javax.swing.JInternalFrame;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.border.BevelBorder;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.plaf.synth.SynthScrollBarUI;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.tree.DefaultMutableTreeNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.ShapeUtilities;
import org.jfree.chart.util.Size2D;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShapeUtilities_ESTest extends ShapeUtilities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) null);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(8);
      boolean boolean0 = ShapeUtilities.isPointInRect(0.0, 0.0, rectangle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      Dimension dimension0 = metalComboBoxUI_MetalComboBoxLayoutManager0.minimumLayoutSize(jViewport0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      boolean boolean0 = ShapeUtilities.intersects(rectangle0, rectangle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame(",3B f1\"GWMO `");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      JTree jTree0 = new JTree();
      Rectangle rectangle1 = jTree0.getRowBounds(0);
      boolean boolean0 = ShapeUtilities.contains(rectangle1, rectangle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(1009.0, 1009.0, 1009.0, 1009.0);
      line2D_Double0.x2 = 801.768310546875;
      line2D_Double0.y2 = Double.POSITIVE_INFINITY;
      GeneralPath generalPath0 = (GeneralPath)ShapeUtilities.createLineRegion(line2D_Double0, 1781.0F);
      assertEquals(1, generalPath0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(1009.0, 1009.0, 1009.0, 1009.0);
      line2D_Double0.x2 = 801.768310546875;
      GeneralPath generalPath0 = (GeneralPath)ShapeUtilities.createLineRegion(line2D_Double0, 1781.0F);
      assertEquals(1, generalPath0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      JInternalFrame jInternalFrame0 = new JInternalFrame(",3B f1\"GWMO `");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Path2D.Double path2D_Double0 = (Path2D.Double)ShapeUtilities.createTranslatedShape((Shape) rectangle0, rectangleAnchor0, (double) 0, (-1.5));
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.isPointInRect(0.0, 2062.558785, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.intersects((Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.getPointInRectangle(0.0, (-4260.071F), (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.createLineRegion((Line2D) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.contains((Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      Dimension dimension0 = metalComboBoxUI_MetalComboBoxLayoutManager0.minimumLayoutSize(jViewport0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      // Undeclared exception!
      try { 
        ShapeUtilities.clipLine((Line2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeneralPath generalPath0 = (GeneralPath)ShapeUtilities.createDiagonalCross((-49.716F), 0.0F);
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Double0, rectangleAnchor0);
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D0, point2D0);
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
      JInternalFrame jInternalFrame0 = new JInternalFrame(",3B f1\"GWMO `");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      boolean boolean0 = ShapeUtilities.clipLine(line2D_Double0, rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(2362.808F, 1.0F, 2362.808F, 1.0F);
      SynthScrollBarUI synthScrollBarUI0 = new SynthScrollBarUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      JTree jTree0 = new JTree(defaultMutableTreeNode0, true);
      Dimension dimension0 = synthScrollBarUI0.getMaximumSize(jTree0);
      Rectangle rectangle0 = new Rectangle(dimension0);
      boolean boolean0 = ShapeUtilities.clipLine(line2D_Float0, rectangle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      Dimension dimension0 = metalComboBoxUI_MetalComboBoxLayoutManager0.minimumLayoutSize(jViewport0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      boolean boolean0 = ShapeUtilities.isPointInRect(0, 0, rectangle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0, 4, 0, 0);
      boolean boolean0 = ShapeUtilities.isPointInRect(0, 0, rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      Dimension dimension0 = metalComboBoxUI_MetalComboBoxLayoutManager0.minimumLayoutSize(jViewport0);
      dimension0.width = 2146823687;
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      boolean boolean0 = ShapeUtilities.isPointInRect(1009.0, 2146823687, rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      boolean boolean0 = ShapeUtilities.isPointInRect((-1.0F), (-112.95058), rectangle2D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      boolean boolean0 = ShapeUtilities.isPointInRect((-2404.411127), 0.0, rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-2701), 0, 55, 44);
      Rectangle rectangle1 = new Rectangle((-2701), 44);
      boolean boolean0 = ShapeUtilities.intersects(rectangle0, rectangle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, 1383.86, 0.0, 1296.4192397815);
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D_Double0, rectangle2D_Float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Double0, rectangleAnchor0);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D_Double0, rectangle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Size2D size2D0 = new Size2D((-2195.56), (-2195.56));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, (-2195.56), (-2195.56), rectangleAnchor0);
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("org.jfree.chart.util.ShapeUtilities", false, false, false, false);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      JEditorPane jEditorPane0 = new JEditorPane();
      Color color0 = jEditorPane0.getSelectedTextColor();
      BevelBorder bevelBorder0 = new BevelBorder(2146812341, color0, color0, color0, color0);
      Rectangle rectangle1 = bevelBorder0.getInteriorRectangle((Component) jEditorPane0, 2146812341, 553, 4, 2146831107);
      boolean boolean0 = ShapeUtilities.contains(rectangle0, rectangle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      boolean boolean0 = ShapeUtilities.contains(rectangle2D0, rectangle2D0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
      GeneralPath generalPath0 = (GeneralPath)ShapeUtilities.createLineRegion(line2D_Double0, (-1166.73F));
      assertEquals(1, generalPath0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Shape shape0 = ShapeUtilities.rotateShape((Shape) null, 0.0, (-303.25677F), (-58.0F));
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross(1978.0F, 551.96F);
      Shape shape1 = ShapeUtilities.createTranslatedShape(shape0, (double) 551.96F, 0.0);
      Path2D.Double path2D_Double0 = (Path2D.Double)ShapeUtilities.rotateShape(shape1, (-16.97481), 44, 1118.7F);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle rectangle0 = line2D_Float0.getBounds();
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) rectangle0, (RectangleAnchor) null, (double) 0.0F, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, rectangleAnchor0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDownTriangle((-1.0F));
      Shape shape1 = ShapeUtilities.createTranslatedShape(shape0, (double) (-1.0F), Double.POSITIVE_INFINITY);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Shape shape2 = ShapeUtilities.createTranslatedShape(shape1, rectangleAnchor0, (double) (-1.0F), (-488.987548173958));
      assertNotSame(shape2, shape1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, 802.3406982421875, 802.3406982421875);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GeneralPath generalPath0 = (GeneralPath)ShapeUtilities.createDiagonalCross(3593.9304F, (-551.8F));
      Line2D.Double line2D_Double0 = new Line2D.Double(0, 0.5, 802.3407099341, 2.0);
      GeneralPath generalPath1 = (GeneralPath)ShapeUtilities.createLineRegion(line2D_Double0, 0.0F);
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GeneralPath generalPath0 = (GeneralPath)ShapeUtilities.createDiagonalCross(3593.9304F, (-551.8F));
      GeneralPath generalPath1 = new GeneralPath();
      boolean boolean0 = ShapeUtilities.equal(generalPath1, generalPath0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath();
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((GeneralPath) null, (GeneralPath) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      Polygon polygon1 = new Polygon(polygon0.xpoints, polygon0.xpoints, 0);
      polygon1.xpoints = polygon0.xpoints;
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      Polygon polygon1 = new Polygon(polygon0.xpoints, polygon0.xpoints, 0);
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal((Polygon) null, polygon0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      Dimension dimension0 = metalComboBoxUI_MetalComboBoxLayoutManager0.minimumLayoutSize(jViewport0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle0, Double.NEGATIVE_INFINITY, 0, 2);
      Arc2D.Double arc2D_Double1 = new Arc2D.Double();
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      boolean boolean0 = ShapeUtilities.equal((Arc2D) null, (Arc2D) arc2D_Float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Arc2D) null, (Arc2D) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(2.0F, (-3490.7715F), 2.0F, (-135.88931F), (-135.88931F), 0.0F, 0);
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Ellipse2D.Double ellipse2D_Double1 = new Ellipse2D.Double(0.0, 0, 0.0, (-4252.81317687084));
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) ellipse2D_Double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Line2D.Double line2D_Double1 = new Line2D.Double(0.0, 0.0, 0.0, (-861.618616));
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), (-1.0F), (-1.0F), (-1.0F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 2.0F, 2187.7334F);
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) line2D_Float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDownTriangle((-1.0F));
      boolean boolean0 = ShapeUtilities.equal(shape0, shape0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiamond(4387.28F);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Double0, rectangleAnchor0);
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D0, point2D0);
      boolean boolean0 = ShapeUtilities.equal(shape0, (Shape) line2D_Float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(1.0F, 1.0F, 1.0F, (-1.0F));
      boolean boolean0 = ShapeUtilities.equal((Shape) line2D_Float0, (Shape) line2D_Float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createRegularCross(1931.958F, 1931.958F);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Shape shape1 = ShapeUtilities.createTranslatedShape(shape0, (double) 1931.958F, (-1646.004517426523));
      boolean boolean0 = ShapeUtilities.equal((Shape) line2D_Float0, shape1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.8, 0.8, 0.8, 0.0);
      Shape shape0 = ShapeUtilities.createDiamond((-1.0F));
      boolean boolean0 = ShapeUtilities.equal((Shape) ellipse2D_Double0, shape0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Shape shape0 = ShapeUtilities.clone(line2D_Float0);
      assertNotSame(shape0, line2D_Float0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Shape shape0 = ShapeUtilities.clone((Shape) null);
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.drawRotatedShape((Graphics2D) null, (Shape) null, 1201.5461, 0.0F, 2.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      Dimension dimension0 = metalComboBoxUI_MetalComboBoxLayoutManager0.minimumLayoutSize(jViewport0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Point2D.Double point2D_Double0 = (Point2D.Double)ShapeUtilities.getPointInRectangle(2, (-2868.3332887864467), rectangle0);
      assertEquals(2.0, point2D_Double0.x, 0.01);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      GeneralPath generalPath0 = (GeneralPath)ShapeUtilities.createUpTriangle(1012.357F);
      assertEquals(1, generalPath0.getWindingRule());
  }
}
