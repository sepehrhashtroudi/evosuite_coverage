/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:33:30 GMT 2022
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.Rotation;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Rotation_ESTest extends Rotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Rotation rotation0 = Rotation.ANTICLOCKWISE;
      Rotation rotation1 = Rotation.CLOCKWISE;
      boolean boolean0 = rotation0.equals(rotation1);
      assertFalse(boolean0);
      assertFalse(rotation1.equals((Object)rotation0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Rotation rotation0 = Rotation.ANTICLOCKWISE;
      double double0 = rotation0.getFactor();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Rotation rotation0 = Rotation.CLOCKWISE;
      boolean boolean0 = rotation0.equals("Rotation.CLOCKWISE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Rotation rotation0 = Rotation.CLOCKWISE;
      boolean boolean0 = rotation0.equals(rotation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Rotation rotation0 = Rotation.CLOCKWISE;
      Rotation rotation1 = Rotation.ANTICLOCKWISE;
      boolean boolean0 = rotation0.equals(rotation1);
      assertFalse(rotation1.equals((Object)rotation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Rotation rotation0 = Rotation.CLOCKWISE;
      String string0 = rotation0.toString();
      assertEquals("Rotation.CLOCKWISE", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Rotation rotation0 = Rotation.CLOCKWISE;
      rotation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Rotation rotation0 = Rotation.CLOCKWISE;
      double double0 = rotation0.getFactor();
      assertEquals((-1.0), double0, 0.01);
  }
}
