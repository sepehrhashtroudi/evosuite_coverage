/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:28:13 GMT 2022
 */

package org.jfree.chart.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTKeyStroke;
import java.awt.Font;
import java.text.AttributedCharacterIterator;
import java.util.Locale;
import javax.swing.JToolBar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.event.ChartProgressEvent;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartProgressEvent_ESTest extends ChartProgressEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(object0, (JFreeChart) null, (-1021), (-1021));
      chartProgressEvent0.setPercent((-1021));
      assertEquals((-1021), chartProgressEvent0.getPercent());
      assertEquals((-1021), chartProgressEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(object0, (JFreeChart) null, 3088, 500);
      chartProgressEvent0.setType(0);
      int int0 = chartProgressEvent0.getType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(object0, (JFreeChart) null, (-1021), (-1021));
      int int0 = chartProgressEvent0.getType();
      assertEquals((-1021), chartProgressEvent0.getPercent());
      assertEquals((-1021), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(attributedCharacterIterator_Attribute0, (JFreeChart) null, 0, 0);
      int int0 = chartProgressEvent0.getPercent();
      assertEquals(0, int0);
      assertEquals(0, chartProgressEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(object0, (JFreeChart) null, (-1021), (-1021));
      int int0 = chartProgressEvent0.getPercent();
      assertEquals((-1021), chartProgressEvent0.getType());
      assertEquals((-1021), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      jFreeChart0.setBorderVisible(true);
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(jToolBar_Separator0, jFreeChart0, 10, 2551);
      chartProgressEvent0.getChart();
      assertEquals(10, chartProgressEvent0.getType());
      assertEquals(2551, chartProgressEvent0.getPercent());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("OX{F.q)g4F");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("OX{F.q)g4F", subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(locale0, jFreeChart0, 10, 0);
      chartProgressEvent0.getChart();
      assertEquals(0, chartProgressEvent0.getPercent());
      assertEquals(10, chartProgressEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      jFreeChart0.setBackgroundImageAlpha((-3.0F));
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(attributedCharacterIterator_Attribute0, jFreeChart0, 1262, 15);
      chartProgressEvent0.getChart();
      assertEquals(1262, chartProgressEvent0.getType());
      assertEquals(15, chartProgressEvent0.getPercent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke((-1793), 2);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      jFreeChart0.setBackgroundImageAlignment((-1793));
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(aWTKeyStroke0, jFreeChart0, 2, 2565);
      chartProgressEvent0.getChart();
      assertEquals(2, chartProgressEvent0.getType());
      assertEquals(2565, chartProgressEvent0.getPercent());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      jFreeChart0.setAntiAlias(false);
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(xYDatasetTableModel0, jFreeChart0, 10, 15);
      chartProgressEvent0.getChart();
      assertEquals(15, chartProgressEvent0.getPercent());
      assertEquals(10, chartProgressEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      float[][] floatArray0 = new float[2][5];
      NumberAxis numberAxis0 = new NumberAxis();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, numberAxis0, numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, (Font) null, fastScatterPlot0, true);
      ChartProgressEvent chartProgressEvent0 = null;
      try {
        chartProgressEvent0 = new ChartProgressEvent((Object) null, jFreeChart0, 2, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(jToolBar_Separator0, (JFreeChart) null, 378, 378);
      int int0 = chartProgressEvent0.getType();
      assertEquals(378, int0);
      assertEquals(378, chartProgressEvent0.getPercent());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(jToolBar_Separator0, (JFreeChart) null, 378, 378);
      chartProgressEvent0.setChart((JFreeChart) null);
      assertEquals(378, chartProgressEvent0.getPercent());
      assertEquals(378, chartProgressEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(jToolBar_Separator0, (JFreeChart) null, 378, 378);
      int int0 = chartProgressEvent0.getPercent();
      assertEquals(378, int0);
      assertEquals(378, chartProgressEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator();
      ChartProgressEvent chartProgressEvent0 = new ChartProgressEvent(jToolBar_Separator0, (JFreeChart) null, 378, 378);
      chartProgressEvent0.getChart();
      assertEquals(378, chartProgressEvent0.getType());
      assertEquals(378, chartProgressEvent0.getPercent());
  }
}
