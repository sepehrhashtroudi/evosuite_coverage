/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:27:19 GMT 2022
 */

package org.jfree.chart.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.TitleChangeEvent;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.title.ImageTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.ShortTextTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.data.general.DefaultValueDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TitleChangeEvent_ESTest extends TitleChangeEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      textTitle0.setVisible(false);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(textTitle0);
      TextTitle textTitle1 = (TextTitle)titleChangeEvent0.getTitle();
      assertNull(textTitle1.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("`QA$^byYI.VL=");
      textTitle0.setWidth(1.0E-4);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(textTitle0);
      Title title0 = titleChangeEvent0.getTitle();
      assertEquals(1.0, title0.getContentXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("`QA$^byYI.VL=");
      textTitle0.setNotify(false);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(textTitle0);
      Title title0 = titleChangeEvent0.getTitle();
      assertTrue(title0.visible);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      textTitle0.setHeight(2.5E8);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(textTitle0);
      Title title0 = titleChangeEvent0.getTitle();
      assertEquals(2.5E8, title0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10, 1785.7, 30.0, chartRenderingInfo0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 2.0F);
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      LegendTitle legendTitle0 = new LegendTitle(meterPlot0);
      ImageTitle imageTitle0 = new ImageTitle(bufferedImage0, (-1), (-1), legendTitle0.DEFAULT_POSITION, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT, legendTitle0.DEFAULT_PADDING);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(imageTitle0);
      Title title0 = titleChangeEvent0.getTitle();
      assertEquals((-1.0), title0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("a^rC@3_z_'Gb&(");
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(shortTextTitle0);
      shortTextTitle0.setMargin((-1.0), (-1.0), (-1.0), (-1.0));
      Title title0 = titleChangeEvent0.getTitle();
      assertSame(shortTextTitle0, title0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      textTitle0.setMargin((-529.5), (-391.7701074771), (-391.7701074771), 0.0);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(textTitle0);
      TextTitle textTitle1 = (TextTitle)titleChangeEvent0.getTitle();
      assertEquals(Integer.MAX_VALUE, textTitle1.getMaximumLinesToDisplay());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TitleChangeEvent titleChangeEvent0 = null;
      try {
        titleChangeEvent0 = new TitleChangeEvent((Title) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }
}
