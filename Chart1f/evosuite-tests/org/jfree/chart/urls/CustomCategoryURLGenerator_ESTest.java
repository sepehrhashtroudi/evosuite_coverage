/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:57:22 GMT 2022
 */

package org.jfree.chart.urls;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.temporal.ChronoField;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomCategoryURLGenerator_ESTest extends CustomCategoryURLGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      assertTrue(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      arrayList0.add((Locale.LanguageRange) null);
      customCategoryURLGenerator0.addURLSeries(arrayList0);
      customCategoryURLGenerator1.addURLSeries((List) null);
      boolean boolean0 = customCategoryURLGenerator1.equals(customCategoryURLGenerator0);
      assertFalse(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      assertTrue(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      
      customCategoryURLGenerator1.addURLSeries((List) null);
      boolean boolean0 = customCategoryURLGenerator1.equals(customCategoryURLGenerator0);
      assertFalse(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      Stack<CustomCategoryURLGenerator> stack0 = new Stack<CustomCategoryURLGenerator>();
      customCategoryURLGenerator0.addURLSeries(stack0);
      customCategoryURLGenerator0.addURLSeries(stack0);
      String string0 = customCategoryURLGenerator0.getURL(1, 1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      linkedList0.add("^]*-QcB+sU\"b!Qm67");
      customCategoryURLGenerator0.addURLSeries(linkedList0);
      Object object0 = customCategoryURLGenerator0.clone();
      boolean boolean0 = customCategoryURLGenerator0.equals(object0);
      assertNotSame(object0, customCategoryURLGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      String string0 = customCategoryURLGenerator0.generateURL(defaultStatisticalCategoryDataset0, 1682, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      boolean boolean0 = customCategoryURLGenerator0.equals(customCategoryURLGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      arrayList0.add((Locale.LanguageRange) null);
      customCategoryURLGenerator0.addURLSeries(arrayList0);
      int int0 = customCategoryURLGenerator0.getURLCount(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      Stack<String> stack0 = new Stack<String>();
      stack0.add("Requires start >= 0.");
      customCategoryURLGenerator0.addURLSeries(stack0);
      String string0 = customCategoryURLGenerator0.getURL(0, 0);
      assertEquals("Requires start >= 0.", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      customCategoryURLGenerator0.addURLSeries(linkedList0);
      int int0 = customCategoryURLGenerator0.getListCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
      try { 
        customCategoryURLGenerator0.getURLCount(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
      try { 
        customCategoryURLGenerator0.getURLCount((-440));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) customCategoryURLGenerator0);
      customCategoryURLGenerator0.addURLSeries(vector0);
      // Undeclared exception!
      try { 
        customCategoryURLGenerator0.getURL(0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
      try { 
        customCategoryURLGenerator0.getURL((-1207), 1623);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
      try { 
        customCategoryURLGenerator0.generateURL((CategoryDataset) null, (-1385), (-1385));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = new Integer(0);
      stack0.add(integer0);
      customCategoryURLGenerator0.addURLSeries(stack0);
      Object object0 = customCategoryURLGenerator0.clone();
      // Undeclared exception!
      try { 
        customCategoryURLGenerator0.equals(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      customCategoryURLGenerator0.addURLSeries((List) null);
      String string0 = customCategoryURLGenerator0.getURL(0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      String string0 = customCategoryURLGenerator0.getURL(0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      customCategoryURLGenerator0.addURLSeries(arrayList0);
      String string0 = customCategoryURLGenerator0.getURL(0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      customCategoryURLGenerator0.addURLSeries((List) null);
      int int0 = customCategoryURLGenerator0.getURLCount(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      int int0 = customCategoryURLGenerator0.getListCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      assertTrue(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      arrayList0.add((Locale.LanguageRange) null);
      customCategoryURLGenerator0.addURLSeries(arrayList0);
      customCategoryURLGenerator1.addURLSeries((List) null);
      boolean boolean0 = customCategoryURLGenerator0.equals(customCategoryURLGenerator1);
      assertFalse(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      assertTrue(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      
      customCategoryURLGenerator1.addURLSeries((List) null);
      boolean boolean0 = customCategoryURLGenerator0.equals(customCategoryURLGenerator1);
      assertFalse(customCategoryURLGenerator1.equals((Object)customCategoryURLGenerator0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ChronoField chronoField0 = ChronoField.INSTANT_SECONDS;
      boolean boolean0 = customCategoryURLGenerator0.equals(chronoField0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      Stack<ChronoField> stack0 = new Stack<ChronoField>();
      ChronoField chronoField0 = ChronoField.SECOND_OF_MINUTE;
      stack0.add(chronoField0);
      customCategoryURLGenerator0.addURLSeries(stack0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        customCategoryURLGenerator0.generateURL(defaultKeyedValues2DDataset0, 0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
