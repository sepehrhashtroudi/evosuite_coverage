/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:32:49 GMT 2022
 */

package org.jfree.chart.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.SystemColor;
import java.awt.geom.Path2D;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.List;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBlockAnchor;
import org.jfree.chart.text.TextLine;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.Size2D;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TextBlock_ESTest extends TextBlock_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_RIGHT;
      TextLine textLine0 = new TextLine();
      textBlock0.addLine(textLine0);
      textBlock0.draw((Graphics2D) null, 0.0F, (-3034.0F), textBlockAnchor0, (-3034.0F), 1.0F, (-2846.6836739153));
      assertEquals("TextBlockAnchor.BOTTOM_RIGHT", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_RIGHT;
      TextLine textLine0 = new TextLine();
      textBlock0.addLine(textLine0);
      textBlock0.draw((Graphics2D) null, 555.0F, 0.0F, textBlockAnchor0, 555.0F, 0.0F, (double) 0.0F);
      assertEquals("TextBlockAnchor.BOTTOM_RIGHT", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("", 312, 312);
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      textBlock0.addLine("", font0, (Paint) systemColor0);
      textBlock0.addLine("XQ", font0, (Paint) systemColor0);
      TextLine textLine0 = textBlock0.getLastLine();
      assertNotNull(textLine0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextLine textLine0 = new TextLine("");
      textBlock0.addLine(textLine0);
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_CENTER;
      // Undeclared exception!
      try { 
        textBlock0.draw((Graphics2D) null, 0.0F, 0.0F, textBlockAnchor0, 1.0F, 2741.48F, (double) 1.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      textBlock0.addLine((TextLine) null);
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER_LEFT;
      // Undeclared exception!
      try { 
        textBlock0.draw((Graphics2D) null, 343.83658F, 0.0F, textBlockAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextLine textLine0 = new TextLine("");
      textBlock0.addLine(textLine0);
      // Undeclared exception!
      try { 
        textBlock0.calculateBounds((Graphics2D) null, (-1003.5473F), 0.0F, (TextBlockAnchor) null, 0.0F, 0.0F, Double.POSITIVE_INFINITY);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      textBlock0.setLineAlignment(horizontalAlignment0);
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_CENTER;
      TextLine textLine0 = new TextLine();
      textBlock0.addLine(textLine0);
      textBlock0.draw((Graphics2D) null, 0.0F, 0.0F, textBlockAnchor0, 0.0F, 0.0F, 0.0);
      assertEquals("TextBlockAnchor.BOTTOM_CENTER", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      textBlock0.setLineAlignment(horizontalAlignment0);
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_RIGHT;
      TextLine textLine0 = new TextLine();
      textBlock0.addLine(textLine0);
      textBlock0.draw((Graphics2D) null, 0.0F, 0.0F, textBlockAnchor0, 0.0F, 0.0F, 0.0);
      assertEquals("TextBlockAnchor.BOTTOM_RIGHT", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      Size2D size2D0 = textBlock0.calculateDimensions((Graphics2D) null);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(0.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      textBlock0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlock textBlock1 = new TextBlock();
      boolean boolean0 = textBlock0.equals(textBlock1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      boolean boolean0 = textBlock0.equals(textBlock0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      boolean boolean0 = textBlock0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      textBlock0.draw((Graphics2D) null, 0.0F, 0.0F, textBlockAnchor0);
      assertEquals("TextBlockAnchor.BOTTOM_LEFT", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER_LEFT;
      textBlock0.draw((Graphics2D) null, 343.83658F, 0.0F, textBlockAnchor0);
      assertEquals("TextBlockAnchor.CENTER_LEFT", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_LEFT;
      textBlock0.draw((Graphics2D) null, 0.0F, 0.0F, textBlockAnchor0);
      assertEquals("TextBlockAnchor.TOP_LEFT", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER_RIGHT;
      Path2D.Double path2D_Double0 = (Path2D.Double)textBlock0.calculateBounds((Graphics2D) null, (-1.0F), 462.9417F, textBlockAnchor0, (-891.75854F), (-1.0F), (-1.0F));
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_RIGHT;
      textBlock0.draw((Graphics2D) null, 0.0F, 0.0F, textBlockAnchor0, 0.0F, 0.0F, 0.0);
      assertEquals("TextBlockAnchor.TOP_RIGHT", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_CENTER;
      Path2D.Double path2D_Double0 = (Path2D.Double)textBlock0.calculateBounds((Graphics2D) null, (-463.0F), (-463.0F), textBlockAnchor0, (-463.0F), (-463.0F), 0.0);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      Font font0 = Font.decode("gQe{ ]YTo1H");
      Color color0 = Color.cyan;
      textBlock0.addLine("gQe{ ]YTo1H", font0, (Paint) color0);
      // Undeclared exception!
      try { 
        textBlock0.calculateDimensions((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextLine textLine0 = textBlock0.getLastLine();
      assertNull(textLine0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      // Undeclared exception!
      try { 
        textBlock0.setLineAlignment((HorizontalAlignment) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'alignment' argument.
         //
         verifyException("org.jfree.chart.text.TextBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = textBlock0.getLineAlignment();
      textBlock0.setLineAlignment(horizontalAlignment0);
      assertEquals("HorizontalAlignment.CENTER", horizontalAlignment0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      Path2D.Double path2D_Double0 = (Path2D.Double)textBlock0.calculateBounds((Graphics2D) null, (-1003.5473F), 0.0F, (TextBlockAnchor) null, 0.0F, 0.0F, Double.POSITIVE_INFINITY);
      assertEquals(1, path2D_Double0.getWindingRule());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      Font font0 = Font.decode("gQe{ ]YTo1H");
      Color color0 = Color.cyan;
      textBlock0.addLine("gQe{ ]YTo1H", font0, (Paint) color0);
      TextLine textLine0 = textBlock0.getLastLine();
      assertNotNull(textLine0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER;
      textBlock0.draw((Graphics2D) null, 0.0F, 0.0F, textBlockAnchor0);
      assertEquals("TextBlockAnchor.CENTER", textBlockAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      List list0 = textBlock0.getLines();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      HashMap<AttributedCharacterIterator.Attribute, TextLine> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, TextLine>();
      Font font0 = new Font(hashMap0);
      // Undeclared exception!
      try { 
        textBlock0.addLine((String) null, font0, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }
}
