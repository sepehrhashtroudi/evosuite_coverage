/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 03:29:36 GMT 2022
 */

package org.jfree.chart.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.text.AttributedCharacterIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.UnitType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TextBox_ESTest extends TextBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      textBox0.setShadowXOffset((-860.47));
      textBox0.hashCode();
      assertEquals((-860.47), textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBox textBox1 = new TextBox();
      textBox1.setShadowXOffset(2484.82798954);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2484.82798954, textBox1.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBlock textBlock0 = new TextBlock();
      textBox0.setTextBlock(textBlock0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        textBox0.draw((Graphics2D) null, (-1330.0092F), 0.0F, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "]C\\uFFp";
      TextBox textBox0 = new TextBox(string0);
      textBox0.getTextBlock();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      
      textBox0.setShadowYOffset(0.0);
      double double0 = textBox0.getShadowYOffset();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      textBox0.setShadowYOffset((-1806.34080817));
      double double0 = textBox0.getShadowYOffset();
      assertEquals((-1806.34080817), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextBox textBox0 = new TextBox("<G}wmHU^J(s;!)LVtZ");
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      
      textBox0.setShadowXOffset(0.0);
      double double0 = textBox0.getShadowXOffset();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextBox textBox0 = new TextBox("E>8/Pv");
      textBox0.setShadowXOffset((-437.7521957229));
      double double0 = textBox0.getShadowXOffset();
      assertEquals((-437.7521957229), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      RectangleInsets rectangleInsets0 = new RectangleInsets(2617.31136, (-690.2913), 2617.31136, 0.0);
      textBox0.setInteriorGap(rectangleInsets0);
      textBox0.getInteriorGap();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBlock textBlock0 = new TextBlock();
      textBox0.setTextBlock(textBlock0);
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, (-1.0), (-1.0), 0.0, 20.0);
      textBox0.setInteriorGap(rectangleInsets0);
      textBox0.getHeight((Graphics2D) null);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      double double0 = textBox0.getHeight((Graphics2D) null);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBlock textBlock0 = new TextBlock();
      textBox0.setTextBlock(textBlock0);
      UnitType unitType0 = UnitType.ABSOLUTE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, (-1.0), (-1.0), 0.0, 20.0);
      textBox0.setInteriorGap(rectangleInsets0);
      textBox0.getHeight((Graphics2D) null);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextBox textBox0 = new TextBox("oveOF!.&cWDw\"b5nT$e");
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      
      textBox0.setShadowYOffset(0.0);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setInteriorGap((RectangleInsets) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setOutlinePaint((Paint) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBox textBox1 = new TextBox();
      boolean boolean0 = textBox0.equals(textBox1);
      assertTrue(boolean0);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBox textBox1 = new TextBox("v327Hi('=_");
      SystemColor systemColor0 = SystemColor.inactiveCaptionText;
      textBox0.setShadowPaint(systemColor0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBox textBox1 = new TextBox("v327Hi('=_");
      SystemColor systemColor0 = SystemColor.inactiveCaptionText;
      textBox0.setOutlinePaint(systemColor0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      boolean boolean0 = textBox0.equals(attributedCharacterIterator_Attribute0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      boolean boolean0 = textBox0.equals(textBox0);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBox textBox1 = new TextBox("v327Hi('=_");
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextBox textBox0 = new TextBox((String) null);
      textBox0.setOutlineStroke((Stroke) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      // Undeclared exception!
      try { 
        textBox0.getHeight((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      Color color0 = (Color)textBox0.getBackgroundPaint();
      textBox0.setBackgroundPaint(color0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals((-64), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      RectangleInsets rectangleInsets0 = textBox0.getInteriorGap();
      assertEquals(3.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(1.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(1.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(3.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      double double0 = textBox0.getShadowXOffset();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      textBox0.getTextBlock();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      BasicStroke basicStroke0 = (BasicStroke)textBox0.getOutlineStroke();
      textBox0.setOutlineStroke(basicStroke0);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TextBox textBox0 = new TextBox("");
      textBox0.getOutlinePaint();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      textBox0.getShadowPaint();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      double double0 = textBox0.getShadowYOffset();
      assertEquals(2.0, double0, 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setShadowXOffset(974.1622313);
      TextBox textBox1 = new TextBox(textBlock0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(974.1622313, textBox0.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
  }
}
