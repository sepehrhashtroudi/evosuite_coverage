/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:32:41 GMT 2022
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartRenderingInfo_ESTest extends ChartRenderingInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 1372, 0, 0, 0, (-3147), true, true, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      ChartPanel chartPanel1 = (ChartPanel)chartRenderingInfo0.getRenderingSource();
      assertFalse(chartPanel1.getRefreshBuffer());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      EntityCollection entityCollection0 = chartRenderingInfo0.getEntityCollection();
      assertEquals(0, entityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      rectangle2D0.setFrame((-412.04), (-2812.0), (double) 1090, 0.0);
      Rectangle2D rectangle2D1 = chartRenderingInfo0.getChartArea();
      assertEquals((-2812.0), rectangle2D1.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.x = (double) 10;
      chartRenderingInfo0.setChartArea(rectangle2D_Double0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      assertTrue(rectangle2D0.equals((Object)rectangle2D_Double0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        chartRenderingInfo0.setChartArea((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Rectangle2D$Double", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      boolean boolean0 = chartRenderingInfo0.equals(chartRenderingInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = (ChartRenderingInfo)chartRenderingInfo0.clone();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float((-30.0F), 971.81F, 0.5F, (-3.0F), (-1801.5513F), 300);
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)roundRectangle2D_Float0.getBounds2D();
      chartRenderingInfo1.setChartArea(rectangle2D_Float0);
      boolean boolean0 = chartRenderingInfo0.equals(chartRenderingInfo1);
      assertFalse(boolean0);
      assertFalse(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      Object object0 = chartRenderingInfo0.clone();
      boolean boolean0 = object0.equals(chartRenderingInfo0);
      assertTrue(boolean0);
      assertNotSame(object0, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      boolean boolean0 = chartRenderingInfo0.equals(chartRenderingInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      boolean boolean0 = chartRenderingInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clear();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.clear();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      EntityCollection entityCollection0 = chartRenderingInfo0.getEntityCollection();
      assertNull(entityCollection0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.setRenderingSource((RenderingSource) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      RenderingSource renderingSource0 = chartRenderingInfo0.getRenderingSource();
      assertNull(renderingSource0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float((-30.0F), 971.81F, 0.5F, (-3.0F), (-1801.5513F), 300);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      chartRenderingInfo0.setChartArea(rectangle2D0);
      Rectangle2D rectangle2D1 = chartRenderingInfo0.getChartArea();
      assertEquals((-29.75), rectangle2D1.getCenterX(), 0.01);
  }
}
