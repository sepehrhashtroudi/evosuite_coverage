/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 02:01:22 GMT 2022
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.geom.AffineTransform;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ui.FontChooserPanel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FontChooserPanel_ESTest extends FontChooserPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      String string0 = fontChooserPanel0.getSelectedName();
      assertNotNull(string0);
      assertEquals("Dialog", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0);
      Font font1 = font0.deriveFont((-7), affineTransform0);
      Font font2 = font1.deriveFont(611);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font2);
      Font font3 = fontChooserPanel0.getSelectedFont();
      assertTrue(font3.equals((Object)font2));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FontChooserPanel fontChooserPanel0 = null;
      try {
        fontChooserPanel0 = new FontChooserPanel((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.FontChooserPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont((String) null, 0, 8);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      fontChooserPanel0.setSelectedFont(font0);
      assertEquals("Default", font0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("org.jfree.data.xy.DefaultOHLCDataset", 4216, 4216);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      Font font1 = styleContext0.getFont((AttributeSet) styleContext_NamedStyle0);
      fontChooserPanel0.setSelectedFont(font1);
      assertFalse(font1.hasUniformLineMetrics());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      AttributeSet attributeSet0 = styleContext0.getEmptySet();
      Font font0 = defaultStyledDocument0.getFont(attributeSet0);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      int int0 = fontChooserPanel0.getSelectedSize();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Font font0 = new Font("16", 0, 0);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      int int0 = fontChooserPanel0.getSelectedSize();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Font font0 = Font.decode("Yrsa Medium");
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      int int0 = fontChooserPanel0.getSelectedStyle();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0);
      Font font1 = font0.deriveFont((-7), affineTransform0);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font1);
      int int0 = fontChooserPanel0.getSelectedStyle();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Font font0 = Font.decode("");
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      // Undeclared exception!
      try { 
        fontChooserPanel0.setSelectedFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.FontChooserPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont((String) null, 0, 8);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      Font font1 = fontChooserPanel0.getSelectedFont();
      assertEquals(10, font1.getSize());
      assertEquals("Default", font1.getName());
      assertEquals(0, font1.getStyle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0);
      Font font1 = font0.deriveFont((-7), affineTransform0);
      Font font2 = font1.deriveFont(638);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font2);
      int int0 = fontChooserPanel0.getSelectedStyle();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-7));
      Font font1 = font0.deriveFont((-7), affineTransform0);
      Font font2 = font1.deriveFont(611);
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font2);
      int int0 = fontChooserPanel0.getSelectedStyle();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Font font0 = Font.decode("");
      FontChooserPanel fontChooserPanel0 = new FontChooserPanel(font0);
      String string0 = fontChooserPanel0.getSelectedName();
      assertNull(string0);
  }
}
