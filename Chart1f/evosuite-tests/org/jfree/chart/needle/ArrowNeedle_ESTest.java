/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:04:49 GMT 2022
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.SystemColor;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.text.AttributedCharacterIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.ArrowNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrowNeedle_ESTest extends ArrowNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      // Undeclared exception!
      try { 
        arrowNeedle0.drawNeedle((Graphics2D) null, (Rectangle2D) null, (Point2D) null, 124L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ArrowNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      ArrowNeedle arrowNeedle1 = new ArrowNeedle(true);
      boolean boolean0 = arrowNeedle0.equals(arrowNeedle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      SystemColor systemColor0 = SystemColor.controlShadow;
      arrowNeedle0.setHighlightPaint(systemColor0);
      ArrowNeedle arrowNeedle1 = new ArrowNeedle(false);
      boolean boolean0 = arrowNeedle0.equals(arrowNeedle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      boolean boolean0 = arrowNeedle0.equals(arrowNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      boolean boolean0 = arrowNeedle0.equals(attributedCharacterIterator_Attribute0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      Point point0 = new Point(1, 1);
      Rectangle rectangle0 = new Rectangle(point0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)rectangle0.getFrame();
      arrowNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Double0, point0, (-1579.45));
      assertEquals(1.0, rectangle2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      Point point0 = new Point(1, 1);
      Rectangle rectangle0 = new Rectangle(point0);
      arrowNeedle0.drawNeedle((Graphics2D) null, rectangle0, (Point2D) null, (-1.323224437030711));
      assertEquals(1.0, rectangle0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      Point point0 = new Point(1, 1);
      Rectangle rectangle0 = new Rectangle(point0);
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      arrowNeedle0.drawNeedle((Graphics2D) null, rectangle2D0, point0, 0.0);
      assertEquals(1.0, point0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      Object object0 = arrowNeedle0.clone();
      boolean boolean0 = arrowNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      arrowNeedle0.hashCode();
  }
}
