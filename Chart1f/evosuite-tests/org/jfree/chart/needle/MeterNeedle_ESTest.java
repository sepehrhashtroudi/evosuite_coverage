/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:02:46 GMT 2022
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JTextArea;
import javax.swing.plaf.basic.BasicPopupMenuSeparatorUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.ArrowNeedle;
import org.jfree.chart.needle.LineNeedle;
import org.jfree.chart.needle.LongNeedle;
import org.jfree.chart.needle.MiddlePinNeedle;
import org.jfree.chart.needle.PinNeedle;
import org.jfree.chart.needle.PlumNeedle;
import org.jfree.chart.needle.PointerNeedle;
import org.jfree.chart.needle.ShipNeedle;
import org.jfree.chart.needle.WindNeedle;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MeterNeedle_ESTest extends MeterNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(longNeedle0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.8, longNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      middlePinNeedle0.setRotateX(25.5);
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(middlePinNeedle0);
      assertEquals(25.5, middlePinNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      PinNeedle pinNeedle1 = (PinNeedle)pinNeedle0.clone();
      pinNeedle1.setSize(65535);
      boolean boolean0 = pinNeedle0.equals(pinNeedle1);
      assertEquals(65535, pinNeedle1.getSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      longNeedle0.setSize((-124));
      int int0 = longNeedle0.getSize();
      assertEquals((-124), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      assertEquals(0.5, middlePinNeedle0.getRotateY(), 0.01);
      
      middlePinNeedle0.setRotateY(0);
      double double0 = middlePinNeedle0.getRotateY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      WindNeedle windNeedle0 = new WindNeedle();
      windNeedle0.setOutlinePaint(systemColor0);
      Paint paint0 = windNeedle0.getOutlinePaint();
      assertEquals(5, windNeedle0.getSize());
      assertEquals(0.5, windNeedle0.getRotateY(), 0.01);
      assertNotNull(paint0);
      assertEquals(0.5, windNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Color color0 = Color.orange;
      longNeedle0.setHighlightPaint(color0);
      Paint paint0 = longNeedle0.getHighlightPaint();
      assertEquals(0.8, longNeedle0.getRotateY(), 0.01);
      assertNotNull(paint0);
      assertEquals(0.5, longNeedle0.getRotateX(), 0.01);
      assertEquals(5, longNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      SystemColor systemColor0 = SystemColor.controlHighlight;
      middlePinNeedle0.setFillPaint(systemColor0);
      Paint paint0 = middlePinNeedle0.getFillPaint();
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
      assertNotNull(paint0);
      assertEquals(0.5, middlePinNeedle0.getRotateY(), 0.01);
      assertEquals(5, middlePinNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      pinNeedle0.equals(integer0);
      assertEquals(0.5, pinNeedle0.getRotateY(), 0.01);
      assertEquals(5, pinNeedle0.getSize());
      assertEquals(0.5, pinNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      JTextArea jTextArea0 = new JTextArea("p-");
      BasicPopupMenuSeparatorUI basicPopupMenuSeparatorUI0 = new BasicPopupMenuSeparatorUI();
      Dimension dimension0 = basicPopupMenuSeparatorUI0.getPreferredSize(jTextArea0);
      Rectangle rectangle0 = new Rectangle(dimension0);
      // Undeclared exception!
      try { 
        middlePinNeedle0.draw((Graphics2D) null, (Rectangle2D) rectangle0, (-1069.583855043284));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2860, 1747.2604, 2860, 2860);
      PinNeedle[] pinNeedleArray0 = new PinNeedle[3];
      JList<PinNeedle> jList0 = new JList<PinNeedle>(pinNeedleArray0);
      Point point0 = jList0.indexToLocation(2861);
      // Undeclared exception!
      try { 
        shipNeedle0.draw((Graphics2D) null, (Rectangle2D) rectangle2D_Double0, (Point2D) point0, 255.84);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      LineNeedle lineNeedle0 = new LineNeedle();
      assertEquals(0.5, lineNeedle0.getRotateY(), 0.01);
      
      lineNeedle0.setRotateY(0.0);
      shipNeedle0.equals(lineNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
      
      middlePinNeedle0.setRotateX(0.0);
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(middlePinNeedle0);
      assertEquals(5, middlePinNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      assertEquals(5, middlePinNeedle0.getSize());
      
      middlePinNeedle0.setSize(0);
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(middlePinNeedle0);
      assertEquals(5, shipNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      WindNeedle windNeedle0 = new WindNeedle();
      windNeedle0.setHighlightPaint(systemColor0);
      windNeedle0.equals(arrowNeedle0);
      assertEquals(5, windNeedle0.getSize());
      assertEquals(0.5, windNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, windNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Color color0 = Color.pink;
      shipNeedle0.setFillPaint(color0);
      middlePinNeedle0.equals(shipNeedle0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      BasicStroke basicStroke0 = new BasicStroke(5);
      pinNeedle0.setOutlineStroke(basicStroke0);
      PinNeedle pinNeedle1 = new PinNeedle();
      boolean boolean0 = pinNeedle0.equals(pinNeedle1);
      assertEquals(0.5, pinNeedle1.getRotateY(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.5, pinNeedle1.getRotateX(), 0.01);
      assertEquals(5, pinNeedle1.getSize());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(defaultTableXYDataset0);
      middlePinNeedle0.equals(xYDatasetTableModel0);
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, middlePinNeedle0.getRotateY(), 0.01);
      assertEquals(5, middlePinNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      PinNeedle pinNeedle1 = (PinNeedle)pinNeedle0.clone();
      boolean boolean0 = pinNeedle0.equals(pinNeedle1);
      assertEquals(0.5, pinNeedle1.getRotateX(), 0.01);
      assertEquals(5, pinNeedle1.getSize());
      assertEquals(0.5, pinNeedle1.getRotateY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      SystemColor systemColor0 = SystemColor.controlText;
      windNeedle0.setFillPaint(systemColor0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2860, 1747.2604, 2860, 2860);
      // Undeclared exception!
      try { 
        windNeedle0.defaultDisplay((Graphics2D) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      pointerNeedle0.defaultDisplay((Graphics2D) null, line2D_Double0);
      assertEquals(0.5, pointerNeedle0.getRotateY(), 0.01);
      assertEquals(5, pointerNeedle0.getSize());
      assertEquals(0.5, pointerNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      plumNeedle0.setHighlightPaint((Paint) null);
      assertEquals(0.5, plumNeedle0.getRotateX(), 0.01);
      assertEquals(5, plumNeedle0.getSize());
      assertEquals(0.5, plumNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.setFillPaint((Paint) null);
      assertEquals(0.5, pointerNeedle0.getRotateX(), 0.01);
      assertEquals(5, pointerNeedle0.getSize());
      assertEquals(0.5, pointerNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      windNeedle0.setOutlineStroke((Stroke) null);
      assertEquals(0.5, windNeedle0.getRotateX(), 0.01);
      assertEquals(5, windNeedle0.getSize());
      assertEquals(0.5, windNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      pinNeedle0.setOutlinePaint((Paint) null);
      assertEquals(5, pinNeedle0.getSize());
      assertEquals(0.5, pinNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, pinNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      middlePinNeedle0.hashCode();
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
      assertEquals(5, middlePinNeedle0.getSize());
      assertEquals(0.5, middlePinNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.getHighlightPaint();
      assertEquals(0.5, pointerNeedle0.getRotateX(), 0.01);
      assertEquals(5, pointerNeedle0.getSize());
      assertEquals(0.5, pointerNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      pinNeedle0.getOutlinePaint();
      assertEquals(0.5, pinNeedle0.getRotateY(), 0.01);
      assertEquals(5, pinNeedle0.getSize());
      assertEquals(0.5, pinNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Color color0 = Color.blue;
      longNeedle0.setOutlinePaint(color0);
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(longNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.8, longNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      double double0 = middlePinNeedle0.getRotateX();
      assertEquals(0.5, double0, 0.01);
      assertEquals(0.5, middlePinNeedle0.getRotateY(), 0.01);
      assertEquals(5, middlePinNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      double double0 = middlePinNeedle0.getRotateY();
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, double0, 0.01);
      assertEquals(5, middlePinNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      int int0 = arrowNeedle0.getSize();
      assertEquals(5, int0);
      assertEquals(0.5, arrowNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, arrowNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.getFillPaint();
      assertEquals(0.5, pointerNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, pointerNeedle0.getRotateY(), 0.01);
      assertEquals(5, pointerNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2860, 1747.2604, 2860, 2860);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        pinNeedle0.draw((Graphics2D) null, (Rectangle2D) rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      windNeedle0.getTransform();
      assertEquals(0.5, windNeedle0.getRotateY(), 0.01);
      assertEquals(5, windNeedle0.getSize());
      assertEquals(0.5, windNeedle0.getRotateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      BasicStroke basicStroke0 = (BasicStroke)pinNeedle0.getOutlineStroke();
      pinNeedle0.setOutlineStroke(basicStroke0);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(5, pinNeedle0.getSize());
      assertEquals(0.5, pinNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, pinNeedle0.getRotateY(), 0.01);
  }
}
