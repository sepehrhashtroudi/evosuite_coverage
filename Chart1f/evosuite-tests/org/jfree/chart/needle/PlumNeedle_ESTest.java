/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 27 00:06:54 GMT 2022
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import javax.swing.CellRendererPane;
import javax.swing.JLayeredPane;
import javax.swing.JScrollPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.PlumNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlumNeedle_ESTest extends PlumNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CellRendererPane cellRendererPane0 = new CellRendererPane();
      JScrollPane jScrollPane0 = new JScrollPane(cellRendererPane0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, (-3));
      plumNeedle0.drawNeedle((Graphics2D) null, rectangle2D0, point2D_Float0, (-1.0));
      assertEquals((-3.0F), point2D_Float0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Point2D.Float point2D_Float0 = new Point2D.Float((-734.2F), 0.0F);
      // Undeclared exception!
      try { 
        plumNeedle0.drawNeedle((Graphics2D) null, (Rectangle2D) null, point2D_Float0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.PlumNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Object object0 = plumNeedle0.clone();
      assertTrue(object0.equals((Object)plumNeedle0));
      
      Color color0 = Color.YELLOW;
      plumNeedle0.setFillPaint(color0);
      boolean boolean0 = plumNeedle0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      boolean boolean0 = plumNeedle0.equals(plumNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      boolean boolean0 = plumNeedle0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 0.0);
      plumNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Double0, point2D_Double0, 0.0);
      assertEquals(5, plumNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      plumNeedle0.drawNeedle((Graphics2D) null, rectangle0, point0, 2);
      assertEquals(0, point0.x);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      plumNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Double0, (Point2D) null, (-1));
      assertEquals(5, plumNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Object object0 = plumNeedle0.clone();
      boolean boolean0 = plumNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      plumNeedle0.hashCode();
  }
}
