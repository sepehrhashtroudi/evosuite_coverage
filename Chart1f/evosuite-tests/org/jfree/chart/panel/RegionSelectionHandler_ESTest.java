/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 23:12:28 GMT 2022
 */

package org.jfree.chart.panel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.JEditorPane;
import javax.swing.JFormattedTextField;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.filechooser.FileSystemView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.javax.swing.MockJFileChooser;
import org.evosuite.runtime.mock.javax.swing.filechooser.MockFileSystemView;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.panel.RegionSelectionHandler;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegionSelectionHandler_ESTest extends RegionSelectionHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      regionSelectionHandler0.setOutlineStroke((Stroke) null);
      Stroke stroke0 = regionSelectionHandler0.getOutlineStroke();
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler(basicStroke0, (Paint) null, (Paint) null);
      regionSelectionHandler0.setOutlinePaint((Paint) null);
      Paint paint0 = regionSelectionHandler0.getOutlinePaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      regionSelectionHandler0.setFillPaint((Paint) null);
      Paint paint0 = regionSelectionHandler0.getFillPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1.0), false, boxAndWhiskerXYToolTipGenerator0);
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler((Stroke) null, candlestickRenderer0.DEFAULT_PAINT, candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      // Undeclared exception!
      try { 
        regionSelectionHandler0.mousePressed((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.panel.RegionSelectionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(mockJFileChooser0, 140, (-1379L), 140, 140, 140, 0, false, (-2803), (-284), (-284));
      // Undeclared exception!
      try { 
        regionSelectionHandler0.mousePressed(mouseWheelEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.javax.swing.MockJFileChooser cannot be cast to org.jfree.chart.ChartPanel
         //
         verifyException("org.jfree.chart.panel.RegionSelectionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((Object) null);
      MouseEvent mouseEvent0 = new MouseEvent(jFormattedTextField0, (-112), (-112), (-112), 1046, 1046, 16777215, true);
      mouseEvent0.setSource((Object) null);
      // Undeclared exception!
      try { 
        regionSelectionHandler0.mouseClicked(mouseEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.panel.RegionSelectionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_CROSSHAIR_STROKE;
      JEditorPane jEditorPane0 = new JEditorPane();
      Color color0 = jEditorPane0.getCaretColor();
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler(basicStroke0, color0, color0);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jEditorPane0, (-2357), (-2357), (-1095), (-1359), 0, (-1359), false, menuElementArray0, menuSelectionManager0);
      // Undeclared exception!
      try { 
        regionSelectionHandler0.mouseClicked(menuDragMouseEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.JEditorPane cannot be cast to org.jfree.chart.ChartPanel
         //
         verifyException("org.jfree.chart.panel.RegionSelectionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      MenuElement[] menuElementArray0 = new MenuElement[2];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(chartPanel0, 690, (-4078L), 400, 0, 10, 255, false, menuElementArray0, menuSelectionManager0);
      regionSelectionHandler0.mouseClicked(menuDragMouseEvent0);
      assertFalse(menuDragMouseEvent0.isPopupTrigger());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      MouseEvent mouseEvent0 = new MouseEvent(mockJFileChooser0, 3556, 50, 720, 1494, 157, 1494, true);
      regionSelectionHandler0.mouseReleased(mouseEvent0);
      assertEquals(0, mouseEvent0.getXOnScreen());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(mockJFileChooser0, (-4486), (-4486), (-4486), (-3348), (-3348), (-3348), (-2603), (-2603), false, 0, (-3348), (-4486), (-2603));
      regionSelectionHandler0.mouseDragged(mouseWheelEvent0);
      assertEquals((-3348), mouseWheelEvent0.getY());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      MenuElement[] menuElementArray0 = new MenuElement[2];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(chartPanel0, 690, (-4078L), 400, 0, 10, 255, false, menuElementArray0, menuSelectionManager0);
      regionSelectionHandler0.mousePressed(menuDragMouseEvent0);
      assertFalse(chartPanel0.getRefreshBuffer());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      Color color0 = (Color)regionSelectionHandler0.getOutlinePaint();
      assertEquals((-12566464), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      BasicStroke basicStroke0 = (BasicStroke)regionSelectionHandler0.getOutlineStroke();
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegionSelectionHandler regionSelectionHandler0 = new RegionSelectionHandler();
      Color color0 = (Color)regionSelectionHandler0.getFillPaint();
      assertEquals(855572735, color0.getRGB());
  }
}
