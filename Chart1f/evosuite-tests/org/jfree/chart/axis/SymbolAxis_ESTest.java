/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:55:24 GMT 2022
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.SystemColor;
import java.awt.geom.GeneralPath;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import javax.swing.JMenu;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SymbolAxis_ESTest extends SymbolAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "AxisLabelEntity: ";
      SymbolAxis symbolAxis0 = new SymbolAxis("AxisLabelEntity: ", stringArray0);
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(0.05);
      symbolAxis0.setTickUnit(numberTickUnit0, false, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("AxisLabelEntity: ", combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(3524, 500, (ChartRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SymbolAxis symbolAxis0 = new SymbolAxis("DateTickMarkPosition.MIDDLE", stringArray0);
      symbolAxis0.setAutoRangeMinimumSize(2111.24803);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      assertEquals((-527.5620075), symbolAxis0.getLowerBound(), 0.01);
      assertEquals(1057.624015, symbolAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), 0.0F, 0.0F);
      rectangle2D_Float0.setFrame((double) 500, (double) 1.0F, (-1140.1896365107), (double) 1.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      AxisState axisState0 = symbolAxis0.draw(sunGraphics2D0, 10.0F, rectangle2D_Float0, rectangle2D_Float0, legendTitle0.DEFAULT_POSITION, (PlotRenderingInfo) null);
      assertEquals((-2132219160), sunGraphics2D0.eargb);
      assertEquals((-7.96875), axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      JMenu jMenu0 = new JMenu("");
      SystemColor systemColor0 = SystemColor.info;
      EtchedBorder etchedBorder0 = new EtchedBorder(systemColor0, systemColor0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jMenu0, (Border) etchedBorder0, 10, 15, 10, 1418);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), 0.0F, 0.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 6, (-822), 78, 17, 87, 15, true, true, false, false, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      symbolAxis0.draw(graphics2D0, (-1.0F), rectangle0, rectangle2D_Float0, legendTitle0.DEFAULT_POSITION, plotRenderingInfo0);
      assertEquals((-0.5), symbolAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("{HK.0h!>Ea?Fp4 W*~", stringArray0);
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      symbolAxis0.setGridBandAlternatePaint(color0);
      Color color1 = (Color)symbolAxis0.getGridBandAlternatePaint();
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertEquals(128, color1.getBlue());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getAngleLabelPaint();
      symbolAxis0.setGridBandPaint(paint0);
      Color color0 = (Color)symbolAxis0.getGridBandPaint();
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertEquals((-16777216), color0.getRGB());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      assertTrue(symbolAxis0.isGridBandsVisible());
      
      symbolAxis0.setGridBandsVisible(false);
      symbolAxis0.setGridBandsVisible(false);
      assertFalse(symbolAxis0.isGridBandsVisible());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), 0.0F, 0.0F);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      symbolAxis0.drawGridBandsVertical(graphics2D0, rectangle2D_Float0, rectangle2D_Float0, true, linkedList0);
      assertEquals(2.5, symbolAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JMenu jMenu0 = new JMenu("");
      SystemColor systemColor0 = SystemColor.info;
      EtchedBorder etchedBorder0 = new EtchedBorder(systemColor0, systemColor0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jMenu0, (Border) etchedBorder0, 10, 15, 10, 1418);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), 0.0F, 0.0F);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      symbolAxis0.drawGridBandsHorizontal(graphics2D0, rectangle0, rectangle2D_Float0, false, list0);
      assertEquals((-0.5), symbolAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("R$h`Nxk48BD=!)>", stringArray0);
      Rectangle rectangle0 = new Rectangle(500, 500);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(270, 10, (-1.5707963267948966), 1.0, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, symbolAxis0, statisticalLineAndShapeRenderer0);
      RectangleEdge rectangleEdge0 = categoryPlot0.getRangeAxisEdge();
      ArrayList<CombinedDomainCategoryPlot> arrayList0 = new ArrayList<CombinedDomainCategoryPlot>();
      symbolAxis0.drawGridBands(graphics2D0, rectangle0, rectangle0, rectangleEdge0, arrayList0);
      assertEquals(7.5, symbolAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("&,r5E\"sqhOR", stringArray0);
      symbolAxis0.autoAdjustRange();
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      symbolAxis0.valueToString(2.5E-9);
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "1";
      SymbolAxis symbolAxis0 = new SymbolAxis("1", stringArray0);
      symbolAxis0.valueToString(0.0);
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      assertTrue(symbolAxis0.isGridBandsVisible());
      
      symbolAxis0.setGridBandsVisible(false);
      boolean boolean0 = symbolAxis0.isGridBandsVisible();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis(">_>DU}Ck#j", stringArray0);
      symbolAxis0.getSymbols();
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("1(`I(\"Et&fz(&vvq", stringArray0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-149.9F), 500, (-149.9F), 500);
      Rectangle rectangle0 = new Rectangle(500, 500);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createUnion(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge();
      // Undeclared exception!
      try { 
        symbolAxis0.refreshTicksVertical((Graphics2D) null, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.SymbolAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2570, 4091, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        symbolAxis0.refreshTicksHorizontal(graphics2D0, (Rectangle2D) null, (RectangleEdge) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SymbolAxis symbolAxis0 = new SymbolAxis("TitleEntity: ", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, (double) 10, 2266.1332, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        symbolAxis0.drawGridBandsVertical(graphics2D0, (Rectangle2D) null, (Rectangle2D) null, false, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.SymbolAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis(">D(PiDZ8E?!)7)?\"4", stringArray0);
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        symbolAxis0.drawGridBandsHorizontal((Graphics2D) null, rectangle2D0, rectangle2D0, false, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.SymbolAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("B(q94He)#ILe`7", stringArray0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(10, 27, 1.0F);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, (WaferMapRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", waferMapPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 420, (-1318.346904214), (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      LinkedList<XYPlot> linkedList0 = new LinkedList<XYPlot>();
      // Undeclared exception!
      try { 
        symbolAxis0.drawGridBands(graphics2D0, (Rectangle2D) null, (Rectangle2D) null, rectangleEdge0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.SymbolAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("S=6ri 9g,z~^oN'Nx", stringArray0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        symbolAxis0.draw((Graphics2D) null, 1200.04, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SymbolAxis symbolAxis0 = null;
      try {
        symbolAxis0 = new SymbolAxis("", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("%uhY[ra0HAL", stringArray0);
      String string0 = symbolAxis0.valueToString((-1720.27931263399));
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertNotNull(string0);
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis("bnx|]aQ)4RoJsc`", stringArray0);
      boolean boolean0 = symbolAxis0.equals("bnx|]aQ)4RoJsc`");
      assertFalse(boolean0);
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), 0.0F, 0.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      symbolAxis0.refreshTicksVertical(graphics2D0, rectangle2D_Float0, legendTitle0.DEFAULT_POSITION);
      assertEquals(2.5, symbolAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), 0.0F, 0.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      RectangleEdge rectangleEdge0 = legendTitle0.getLegendItemGraphicEdge();
      symbolAxis0.refreshTicksHorizontal(graphics2D0, rectangle2D_Float0, rectangleEdge0);
      assertEquals((-0.5), symbolAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(9%&25mr&gcB";
      stringArray0[1] = "(9%&25mr&gcB";
      stringArray0[2] = "(9%&25mr&gcB";
      SymbolAxis symbolAxis0 = new SymbolAxis("(9%&25mr&gcB", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("(9%&25mr&gcB", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), 0.0F, 0.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      symbolAxis0.refreshTicksHorizontal(graphics2D0, rectangle2D_Float0, legendTitle0.DEFAULT_POSITION);
      assertEquals((-0.5), symbolAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis("bnx|]aQ)4RoJsc`", stringArray0);
      symbolAxis0.resizeRange(3459.833);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(stringArray0[3], symbolAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 234, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      symbolAxis0.refreshTicksHorizontal(graphics2D0, (Rectangle2D) null, rectangleEdge0);
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "AxisLabelEntity: ";
      stringArray0[1] = "org.jfree.chart.renderer.xy.XYErrorRenderer";
      stringArray0[2] = "AxisLabelEntity: ";
      stringArray0[3] = "AxisLabelEntity: ";
      stringArray0[4] = "AxisLabelEntity: ";
      SymbolAxis symbolAxis0 = new SymbolAxis("AxisLabelEntity: ", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("AxisLabelEntity: ", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3524, 500, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      AxisState axisState0 = new AxisState();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        symbolAxis0.refreshTicks(graphics2D0, axisState0, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      // Undeclared exception!
      try { 
        symbolAxis0.setGridBandAlternatePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.axis.SymbolAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[9];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      Paint paint0 = symbolAxis0.getGridBandPaint();
      symbolAxis0.setGridBandAlternatePaint(paint0);
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
      assertEquals(3, paint0.getTransparency());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertTrue(symbolAxis0.isGridBandsVisible());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      // Undeclared exception!
      try { 
        symbolAxis0.setGridBandPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.axis.SymbolAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SymbolAxis symbolAxis0 = new SymbolAxis("TitleEntity: ", stringArray0);
      Color color0 = (Color)LineRenderer3D.DEFAULT_WALL_PAINT;
      symbolAxis0.setGridBandPaint(color0);
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[9];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      symbolAxis0.setGridBandsVisible(false);
      assertFalse(symbolAxis0.isGridBandsVisible());
      
      symbolAxis0.setGridBandsVisible(true);
      assertTrue(symbolAxis0.isGridBandsVisible());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      Color color0 = (Color)symbolAxis0.getGridBandAlternatePaint();
      assertEquals(0, color0.getAlpha());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'paint' argument.", stringArray0);
      symbolAxis0.getSymbols();
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertTrue(symbolAxis0.isGridBandsVisible());
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("R$h`Nxk48BD=!)>", stringArray0);
      Rectangle rectangle0 = new Rectangle(500, 500);
      // Undeclared exception!
      try { 
        symbolAxis0.selectAutoTickUnit((Graphics2D) null, rectangle0, (RectangleEdge) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.SymbolAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis("AxisLabelEntity: ", stringArray0);
      boolean boolean0 = symbolAxis0.isGridBandsVisible();
      assertFalse(symbolAxis0.getAutoRangeStickyZero());
      assertTrue(boolean0);
      assertFalse(symbolAxis0.isAutoTickUnitSelection());
  }
}
