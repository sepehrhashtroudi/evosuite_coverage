/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:41:34 GMT 2022
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.axis.DateTick;
import org.jfree.chart.axis.TickType;
import org.jfree.chart.text.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DateTick_ESTest extends DateTick_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      Date date0 = Date.from(instant0);
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      DateTick dateTick0 = new DateTick((TickType) null, date0, "TextAnchor.HALF_ASCENT_LEFT", textAnchor0, textAnchor0, 0L);
      Object object0 = dateTick0.clone();
      // Undeclared exception!
      try { 
        dateTick0.equals(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueTick", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TickType tickType0 = TickType.MAJOR;
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DateTick dateTick0 = null;
      try {
        dateTick0 = new DateTick(tickType0, (Date) null, (String) null, textAnchor0, textAnchor0, 570.891402);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateTick", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, (-801), 0, (-1), 0, (-1));
      DateTick dateTick0 = null;
      try {
        dateTick0 = new DateTick((TickType) null, mockDate0, (String) null, (TextAnchor) null, (TextAnchor) null, 1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'textAnchor' argument.
         //
         verifyException("org.jfree.chart.axis.Tick", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_RIGHT;
      DateTick dateTick0 = null;
      try {
        dateTick0 = new DateTick((Date) null, "33yZC_~", textAnchor0, textAnchor0, 1832.414022);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateTick", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1, 1, 1, 0, (-9), 0);
      DateTick dateTick0 = null;
      try {
        dateTick0 = new DateTick(mockDate0, "L*A\";~m!h.Amq:", (TextAnchor) null, (TextAnchor) null, (-1650.9));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'textAnchor' argument.
         //
         verifyException("org.jfree.chart.axis.Tick", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1666L));
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      DateTick dateTick0 = new DateTick(mockDate0, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      MockDate mockDate1 = new MockDate();
      DateTick dateTick1 = new DateTick(mockDate1, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      boolean boolean0 = dateTick0.equals(dateTick1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1666L));
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      DateTick dateTick0 = new DateTick(mockDate0, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      DateTick dateTick1 = new DateTick(mockDate0, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      boolean boolean0 = dateTick0.equals(dateTick1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1666L));
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      DateTick dateTick0 = new DateTick(mockDate0, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      boolean boolean0 = dateTick0.equals(dateTick0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1666L));
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      DateTick dateTick0 = new DateTick(mockDate0, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      boolean boolean0 = dateTick0.equals("org.jfree.chatss.Dat'Tck");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1666L));
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      DateTick dateTick0 = new DateTick(mockDate0, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      Date date0 = dateTick0.getDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1666L));
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      DateTick dateTick0 = new DateTick(mockDate0, "org.jfree.chatss.Dat'Tck", textAnchor0, textAnchor0, (-1666L));
      dateTick0.hashCode();
  }
}
