/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:35:27 GMT 2022
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.SystemColor;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubCategoryAxis_ESTest extends SubCategoryAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      Color color0 = (Color)subCategoryAxis0.getSubLabelPaint();
      subCategoryAxis0.setSubLabelPaint(color0);
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Tobias Selb");
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Tobias Selb", fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 16, 0, 16, (-1338), 10, 10, false, false, false, true, false, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      LogAxis logAxis0 = new LogAxis("[7Ng6\"_)rys:~pU8l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      AxisState axisState0 = new AxisState();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        subCategoryAxis0.drawSubCategoryLabels((Graphics2D) null, rectangle0, rectangle0, rectangleEdge0, axisState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.SubCategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.entity.XYItemEntity");
      SystemColor systemColor0 = SystemColor.menu;
      subCategoryAxis0.setTickLabelPaint(systemColor0);
      SubCategoryAxis subCategoryAxis1 = new SubCategoryAxis("org.jfree.chart.entity.XYItemEntity");
      boolean boolean0 = subCategoryAxis0.equals(subCategoryAxis1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.entity.XYItemEntity");
      SubCategoryAxis subCategoryAxis1 = new SubCategoryAxis("org.jfree.chart.entity.XYItemEntity");
      boolean boolean0 = subCategoryAxis0.equals(subCategoryAxis1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.entity.XYItemEntity");
      boolean boolean0 = subCategoryAxis0.equals(subCategoryAxis0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      PolarPlot polarPlot0 = new PolarPlot();
      boolean boolean0 = subCategoryAxis0.equals(polarPlot0.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 566, (double) 1.0F, (double) 566, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge(0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        subCategoryAxis0.draw(graphics2D0, 1.0F, rectangle0, rectangle0, rectangleEdge0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.SubCategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.util.DefaultShadowGenerator");
      double[][] doubleArray0 = new double[7][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      DateAxis dateAxis0 = new DateAxis("Null 'paint' argument.");
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, dateAxis0);
      // Undeclared exception!
      try { 
        subCategoryAxis0.reserveSpace((Graphics2D) null, multiplePiePlot0, (Rectangle2D) null, paintScaleLegend0.DEFAULT_POSITION, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ps");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2, 1170.0F, 2630.927F, (-407.22556F));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      AxisSpace axisSpace0 = new AxisSpace();
      // Undeclared exception!
      try { 
        subCategoryAxis0.reserveSpace((Graphics2D) null, combinedDomainXYPlot0, rectangle2D_Float0, rectangleEdge0, axisSpace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      // Undeclared exception!
      try { 
        subCategoryAxis0.setSubLabelPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.axis.SubCategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("L");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      subCategoryAxis0.setSubLabelPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      Color color0 = (Color)subCategoryAxis0.getSubLabelPaint();
      assertEquals(128, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("3!P2d]H");
      // Undeclared exception!
      try { 
        subCategoryAxis0.setSubLabelFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.axis.SubCategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("L");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      subCategoryAxis0.setSubLabelFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      assertTrue(combinedDomainCategoryPlot0.canSelectByRegion());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      // Undeclared exception!
      try { 
        subCategoryAxis0.addSubCategory((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subcategory' axis.
         //
         verifyException("org.jfree.chart.axis.SubCategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      subCategoryAxis0.addSubCategory("");
      assertEquals(0.2, subCategoryAxis0.getCategoryMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      Font font0 = subCategoryAxis0.getSubLabelFont();
      assertEquals(10, font0.getSize());
      assertTrue(font0.isPlain());
      assertEquals("Tahoma", font0.getName());
  }
}
