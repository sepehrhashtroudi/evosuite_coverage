/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 26 22:55:56 GMT 2022
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.axis.CategoryTick;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBlockAnchor;
import org.jfree.data.time.Day;
import org.jfree.data.time.SerialDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryTick_ESTest extends CategoryTick_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick((Comparable) null, textBlock0, (TextBlockAnchor) null, textAnchor0, 0.0);
      TextBlockAnchor textBlockAnchor0 = categoryTick0.getLabelAnchor();
      assertNull(textBlockAnchor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_RIGHT;
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      CategoryTick categoryTick0 = new CategoryTick((Comparable) null, textBlock0, textBlockAnchor0, textAnchor0, 59);
      TextBlock textBlock1 = categoryTick0.getLabel();
      assertSame(textBlock1, textBlock0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick((Comparable) null, textBlock0, (TextBlockAnchor) null, textAnchor0, 0.0);
      Comparable comparable0 = categoryTick0.getCategory();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick((Comparable) null, (TextBlock) null, textBlockAnchor0, textAnchor0, 727.707);
      // Undeclared exception!
      try { 
        categoryTick0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryTick", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1420, 1, (-2307), (-2307), (-2307));
      SerialDate serialDate0 = SerialDate.createInstance((Date) mockDate0);
      Day day0 = new Day(serialDate0);
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER;
      CategoryTick categoryTick0 = null;
      try {
        categoryTick0 = new CategoryTick(day0, (TextBlock) null, textBlockAnchor0, (TextAnchor) null, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rotationAnchor' argument.
         //
         verifyException("org.jfree.chart.axis.Tick", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      TextBlockAnchor textBlockAnchor1 = TextBlockAnchor.BOTTOM_RIGHT;
      CategoryTick categoryTick1 = new CategoryTick(day0, textBlock0, textBlockAnchor1, textAnchor0, (-1942.649984557321));
      boolean boolean0 = categoryTick0.equals(categoryTick1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, 1.0);
      CategoryTick categoryTick1 = new CategoryTick(day0, (TextBlock) null, textBlockAnchor0, textAnchor0, 1.0);
      boolean boolean0 = categoryTick0.equals(categoryTick1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_RIGHT;
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      CategoryTick categoryTick0 = new CategoryTick((Comparable) null, textBlock0, textBlockAnchor0, textAnchor0, 59);
      CategoryTick categoryTick1 = new CategoryTick("R", textBlock0, textBlockAnchor0, textAnchor0, 59);
      boolean boolean0 = categoryTick0.equals(categoryTick1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER_LEFT;
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(localDate0, (TextBlock) null, textBlockAnchor0, textAnchor0, 0L);
      CategoryTick categoryTick1 = new CategoryTick(localDate0, (TextBlock) null, textBlockAnchor0, textAnchor0, 1207.1549477101935);
      boolean boolean0 = categoryTick0.equals(categoryTick1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      CategoryTick categoryTick1 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      boolean boolean0 = categoryTick0.equals(categoryTick1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      boolean boolean0 = categoryTick0.equals(categoryTick0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      boolean boolean0 = categoryTick0.equals(textAnchor0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      categoryTick0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER_LEFT;
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(localDate0, (TextBlock) null, textBlockAnchor0, textAnchor0, 0L);
      TextBlock textBlock0 = categoryTick0.getLabel();
      assertNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      Comparable comparable0 = categoryTick0.getCategory();
      assertSame(day0, comparable0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Day day0 = new Day();
      TextBlock textBlock0 = new TextBlock();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      CategoryTick categoryTick0 = new CategoryTick(day0, textBlock0, textBlockAnchor0, textAnchor0, (-1942.649984557321));
      TextBlockAnchor textBlockAnchor1 = categoryTick0.getLabelAnchor();
      assertSame(textBlockAnchor0, textBlockAnchor1);
  }
}
